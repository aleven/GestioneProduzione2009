'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3649
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("GestioneProduzione2009DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class GestioneProduzione2009DataSet
    Inherits Global.System.Data.DataSet
    
    Private tablet05_macchine As t05_macchineDataTable
    
    Private tablet06_istanze_macchine As t06_istanze_macchineDataTable
    
    Private tablet07_stati_istanza As t07_stati_istanzaDataTable
    
    Private tablet08_testate_ordini_for As t08_testate_ordini_forDataTable
    
    Private tablet09_righe_ordine_for As t09_righe_ordine_forDataTable
    
    Private tablet10_stati_riga_ordine_for As t10_stati_riga_ordine_forDataTable
    
    Private tablet11_fornitori As t11_fornitoriDataTable
    
    Private tablet14_clienti As t14_clientiDataTable
    
    Private tablet15_causali_ordini_for As t15_causali_ordini_forDataTable
    
    Private tablet21_articoli_macchine As t21_articoli_macchineDataTable
    
    Private tablet22_articoli_articoli As t22_articoli_articoliDataTable
    
    Private tablet25_matricole As t25_matricoleDataTable
    
    Private tablet26_formule_prezzi As t26_formule_prezziDataTable
    
    Private tablet27_versione As t27_versioneDataTable
    
    Private tableviewElencoIstanzeSemplice As viewElencoIstanzeSempliceDataTable
    
    Private tableviewTestateOrdiniCliConStato As viewTestateOrdiniCliConStatoDataTable
    
    Private tableviewTestateOrdiniConStato As viewTestateOrdiniConStatoDataTable
    
    Private tabledvArticoliConMatricole As dvArticoliConMatricoleDataTable
    
    Private tablet28_testate_ordini_cli As t28_testate_ordini_cliDataTable
    
    Private tablet29_righe_ordine_cli As t29_righe_ordine_cliDataTable
    
    Private tablet20_articoli As t20_articoliDataTable
    
    Private tablev01_articoli As v01_articoliDataTable
    
    Private tablev03_gruppi As v03_gruppiDataTable
    
    Private tableListinoRicambi As ListinoRicambiDataTable
    
    Private tablet28_anni As t28_anniDataTable
    
    Private tableRigheOrdiniRicambi As RigheOrdiniRicambiDataTable
    
    Private tableviewTreeIstanzeMacchineTotaliArticoli As viewTreeIstanzeMacchineTotaliArticoliDataTable
    
    Private tableviewTreeIstanzeMacchineTotaliGruppi As viewTreeIstanzeMacchineTotaliGruppiDataTable
    
    Private tableufn_GetQuantitaOrdinataArticolo As ufn_GetQuantitaOrdinataArticoloDataTable
    
    Private tableRiepilogoArticoli As RiepilogoArticoliDataTable
    
    Private tableImpegnati As ImpegnatiDataTable
    
    Private tableArticoliInGruppi As ArticoliInGruppiDataTable
    
    Private relationFK_t06_istanze_macchine_t05_macchine As Global.System.Data.DataRelation
    
    Private relationFK_t06_istanze_macchine_t07_stati_istanza As Global.System.Data.DataRelation
    
    Private relationFK_t08_testate_ordini_for_t11_fornitori As Global.System.Data.DataRelation
    
    Private relationFK_t08_testate_ordini_for_t15_causali_ordini_for As Global.System.Data.DataRelation
    
    Private relationFK_t09_righe_ordine_for_t08_testate_ordini_for As Global.System.Data.DataRelation
    
    Private relationFK_t21_articoli_macchine_t05_macchine As Global.System.Data.DataRelation
    
    Private relationFK_t29_righe_ordine_cli_t28_testate_ordini_cli As Global.System.Data.DataRelation
    
    Private relationFK_t09_righe_ordine_for_t20_articoli As Global.System.Data.DataRelation
    
    Private relationFK_t21_articoli_macchine_t20_articoli As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli1 As Global.System.Data.DataRelation
    
    Private relationFK_t25_matricole_t20_articoli As Global.System.Data.DataRelation
    
    Private relationFK_t29_righe_ordine_cli_t20_articoli As Global.System.Data.DataRelation
    
    Private relationFK_t09_righe_ordine_for_t20_articoli1 As Global.System.Data.DataRelation
    
    Private relationFK_t21_articoli_macchine_t20_articoli1 As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli2 As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli11 As Global.System.Data.DataRelation
    
    Private relationFK_t25_matricole_t20_articoli1 As Global.System.Data.DataRelation
    
    Private relationFK_t29_righe_ordine_cli_t20_articoli1 As Global.System.Data.DataRelation
    
    Private relationFK_t09_righe_ordine_for_t20_articoli2 As Global.System.Data.DataRelation
    
    Private relationFK_t21_articoli_macchine_t20_articoli2 As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli3 As Global.System.Data.DataRelation
    
    Private relationFK_t22_articoli_articoli_t20_articoli12 As Global.System.Data.DataRelation
    
    Private relationFK_t25_matricole_t20_articoli2 As Global.System.Data.DataRelation
    
    Private relationFK_t29_righe_ordine_cli_t20_articoli2 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("t05_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t05_macchineDataTable(ds.Tables("t05_macchine")))
            End If
            If (Not (ds.Tables("t06_istanze_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t06_istanze_macchineDataTable(ds.Tables("t06_istanze_macchine")))
            End If
            If (Not (ds.Tables("t07_stati_istanza")) Is Nothing) Then
                MyBase.Tables.Add(New t07_stati_istanzaDataTable(ds.Tables("t07_stati_istanza")))
            End If
            If (Not (ds.Tables("t08_testate_ordini_for")) Is Nothing) Then
                MyBase.Tables.Add(New t08_testate_ordini_forDataTable(ds.Tables("t08_testate_ordini_for")))
            End If
            If (Not (ds.Tables("t09_righe_ordine_for")) Is Nothing) Then
                MyBase.Tables.Add(New t09_righe_ordine_forDataTable(ds.Tables("t09_righe_ordine_for")))
            End If
            If (Not (ds.Tables("t10_stati_riga_ordine_for")) Is Nothing) Then
                MyBase.Tables.Add(New t10_stati_riga_ordine_forDataTable(ds.Tables("t10_stati_riga_ordine_for")))
            End If
            If (Not (ds.Tables("t11_fornitori")) Is Nothing) Then
                MyBase.Tables.Add(New t11_fornitoriDataTable(ds.Tables("t11_fornitori")))
            End If
            If (Not (ds.Tables("t14_clienti")) Is Nothing) Then
                MyBase.Tables.Add(New t14_clientiDataTable(ds.Tables("t14_clienti")))
            End If
            If (Not (ds.Tables("t15_causali_ordini_for")) Is Nothing) Then
                MyBase.Tables.Add(New t15_causali_ordini_forDataTable(ds.Tables("t15_causali_ordini_for")))
            End If
            If (Not (ds.Tables("t21_articoli_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t21_articoli_macchineDataTable(ds.Tables("t21_articoli_macchine")))
            End If
            If (Not (ds.Tables("t22_articoli_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New t22_articoli_articoliDataTable(ds.Tables("t22_articoli_articoli")))
            End If
            If (Not (ds.Tables("t25_matricole")) Is Nothing) Then
                MyBase.Tables.Add(New t25_matricoleDataTable(ds.Tables("t25_matricole")))
            End If
            If (Not (ds.Tables("t26_formule_prezzi")) Is Nothing) Then
                MyBase.Tables.Add(New t26_formule_prezziDataTable(ds.Tables("t26_formule_prezzi")))
            End If
            If (Not (ds.Tables("t27_versione")) Is Nothing) Then
                MyBase.Tables.Add(New t27_versioneDataTable(ds.Tables("t27_versione")))
            End If
            If (Not (ds.Tables("viewElencoIstanzeSemplice")) Is Nothing) Then
                MyBase.Tables.Add(New viewElencoIstanzeSempliceDataTable(ds.Tables("viewElencoIstanzeSemplice")))
            End If
            If (Not (ds.Tables("viewTestateOrdiniCliConStato")) Is Nothing) Then
                MyBase.Tables.Add(New viewTestateOrdiniCliConStatoDataTable(ds.Tables("viewTestateOrdiniCliConStato")))
            End If
            If (Not (ds.Tables("viewTestateOrdiniConStato")) Is Nothing) Then
                MyBase.Tables.Add(New viewTestateOrdiniConStatoDataTable(ds.Tables("viewTestateOrdiniConStato")))
            End If
            If (Not (ds.Tables("dvArticoliConMatricole")) Is Nothing) Then
                MyBase.Tables.Add(New dvArticoliConMatricoleDataTable(ds.Tables("dvArticoliConMatricole")))
            End If
            If (Not (ds.Tables("t28_testate_ordini_cli")) Is Nothing) Then
                MyBase.Tables.Add(New t28_testate_ordini_cliDataTable(ds.Tables("t28_testate_ordini_cli")))
            End If
            If (Not (ds.Tables("t29_righe_ordine_cli")) Is Nothing) Then
                MyBase.Tables.Add(New t29_righe_ordine_cliDataTable(ds.Tables("t29_righe_ordine_cli")))
            End If
            If (Not (ds.Tables("t20_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New t20_articoliDataTable(ds.Tables("t20_articoli")))
            End If
            If (Not (ds.Tables("v01_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New v01_articoliDataTable(ds.Tables("v01_articoli")))
            End If
            If (Not (ds.Tables("v03_gruppi")) Is Nothing) Then
                MyBase.Tables.Add(New v03_gruppiDataTable(ds.Tables("v03_gruppi")))
            End If
            If (Not (ds.Tables("ListinoRicambi")) Is Nothing) Then
                MyBase.Tables.Add(New ListinoRicambiDataTable(ds.Tables("ListinoRicambi")))
            End If
            If (Not (ds.Tables("t28_anni")) Is Nothing) Then
                MyBase.Tables.Add(New t28_anniDataTable(ds.Tables("t28_anni")))
            End If
            If (Not (ds.Tables("RigheOrdiniRicambi")) Is Nothing) Then
                MyBase.Tables.Add(New RigheOrdiniRicambiDataTable(ds.Tables("RigheOrdiniRicambi")))
            End If
            If (Not (ds.Tables("viewTreeIstanzeMacchineTotaliArticoli")) Is Nothing) Then
                MyBase.Tables.Add(New viewTreeIstanzeMacchineTotaliArticoliDataTable(ds.Tables("viewTreeIstanzeMacchineTotaliArticoli")))
            End If
            If (Not (ds.Tables("viewTreeIstanzeMacchineTotaliGruppi")) Is Nothing) Then
                MyBase.Tables.Add(New viewTreeIstanzeMacchineTotaliGruppiDataTable(ds.Tables("viewTreeIstanzeMacchineTotaliGruppi")))
            End If
            If (Not (ds.Tables("ufn_GetQuantitaOrdinataArticolo")) Is Nothing) Then
                MyBase.Tables.Add(New ufn_GetQuantitaOrdinataArticoloDataTable(ds.Tables("ufn_GetQuantitaOrdinataArticolo")))
            End If
            If (Not (ds.Tables("RiepilogoArticoli")) Is Nothing) Then
                MyBase.Tables.Add(New RiepilogoArticoliDataTable(ds.Tables("RiepilogoArticoli")))
            End If
            If (Not (ds.Tables("Impegnati")) Is Nothing) Then
                MyBase.Tables.Add(New ImpegnatiDataTable(ds.Tables("Impegnati")))
            End If
            If (Not (ds.Tables("ArticoliInGruppi")) Is Nothing) Then
                MyBase.Tables.Add(New ArticoliInGruppiDataTable(ds.Tables("ArticoliInGruppi")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t05_macchine() As t05_macchineDataTable
        Get
            Return Me.tablet05_macchine
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t06_istanze_macchine() As t06_istanze_macchineDataTable
        Get
            Return Me.tablet06_istanze_macchine
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t07_stati_istanza() As t07_stati_istanzaDataTable
        Get
            Return Me.tablet07_stati_istanza
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t08_testate_ordini_for() As t08_testate_ordini_forDataTable
        Get
            Return Me.tablet08_testate_ordini_for
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t09_righe_ordine_for() As t09_righe_ordine_forDataTable
        Get
            Return Me.tablet09_righe_ordine_for
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t10_stati_riga_ordine_for() As t10_stati_riga_ordine_forDataTable
        Get
            Return Me.tablet10_stati_riga_ordine_for
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t11_fornitori() As t11_fornitoriDataTable
        Get
            Return Me.tablet11_fornitori
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t14_clienti() As t14_clientiDataTable
        Get
            Return Me.tablet14_clienti
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t15_causali_ordini_for() As t15_causali_ordini_forDataTable
        Get
            Return Me.tablet15_causali_ordini_for
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t21_articoli_macchine() As t21_articoli_macchineDataTable
        Get
            Return Me.tablet21_articoli_macchine
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t22_articoli_articoli() As t22_articoli_articoliDataTable
        Get
            Return Me.tablet22_articoli_articoli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t25_matricole() As t25_matricoleDataTable
        Get
            Return Me.tablet25_matricole
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t26_formule_prezzi() As t26_formule_prezziDataTable
        Get
            Return Me.tablet26_formule_prezzi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t27_versione() As t27_versioneDataTable
        Get
            Return Me.tablet27_versione
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property viewElencoIstanzeSemplice() As viewElencoIstanzeSempliceDataTable
        Get
            Return Me.tableviewElencoIstanzeSemplice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property viewTestateOrdiniCliConStato() As viewTestateOrdiniCliConStatoDataTable
        Get
            Return Me.tableviewTestateOrdiniCliConStato
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property viewTestateOrdiniConStato() As viewTestateOrdiniConStatoDataTable
        Get
            Return Me.tableviewTestateOrdiniConStato
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dvArticoliConMatricole() As dvArticoliConMatricoleDataTable
        Get
            Return Me.tabledvArticoliConMatricole
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t28_testate_ordini_cli() As t28_testate_ordini_cliDataTable
        Get
            Return Me.tablet28_testate_ordini_cli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t29_righe_ordine_cli() As t29_righe_ordine_cliDataTable
        Get
            Return Me.tablet29_righe_ordine_cli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t20_articoli() As t20_articoliDataTable
        Get
            Return Me.tablet20_articoli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property v01_articoli() As v01_articoliDataTable
        Get
            Return Me.tablev01_articoli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property v03_gruppi() As v03_gruppiDataTable
        Get
            Return Me.tablev03_gruppi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ListinoRicambi() As ListinoRicambiDataTable
        Get
            Return Me.tableListinoRicambi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t28_anni() As t28_anniDataTable
        Get
            Return Me.tablet28_anni
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RigheOrdiniRicambi() As RigheOrdiniRicambiDataTable
        Get
            Return Me.tableRigheOrdiniRicambi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property viewTreeIstanzeMacchineTotaliArticoli() As viewTreeIstanzeMacchineTotaliArticoliDataTable
        Get
            Return Me.tableviewTreeIstanzeMacchineTotaliArticoli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property viewTreeIstanzeMacchineTotaliGruppi() As viewTreeIstanzeMacchineTotaliGruppiDataTable
        Get
            Return Me.tableviewTreeIstanzeMacchineTotaliGruppi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ufn_GetQuantitaOrdinataArticolo() As ufn_GetQuantitaOrdinataArticoloDataTable
        Get
            Return Me.tableufn_GetQuantitaOrdinataArticolo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RiepilogoArticoli() As RiepilogoArticoliDataTable
        Get
            Return Me.tableRiepilogoArticoli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Impegnati() As ImpegnatiDataTable
        Get
            Return Me.tableImpegnati
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ArticoliInGruppi() As ArticoliInGruppiDataTable
        Get
            Return Me.tableArticoliInGruppi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As GestioneProduzione2009DataSet = CType(MyBase.Clone,GestioneProduzione2009DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("t05_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t05_macchineDataTable(ds.Tables("t05_macchine")))
            End If
            If (Not (ds.Tables("t06_istanze_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t06_istanze_macchineDataTable(ds.Tables("t06_istanze_macchine")))
            End If
            If (Not (ds.Tables("t07_stati_istanza")) Is Nothing) Then
                MyBase.Tables.Add(New t07_stati_istanzaDataTable(ds.Tables("t07_stati_istanza")))
            End If
            If (Not (ds.Tables("t08_testate_ordini_for")) Is Nothing) Then
                MyBase.Tables.Add(New t08_testate_ordini_forDataTable(ds.Tables("t08_testate_ordini_for")))
            End If
            If (Not (ds.Tables("t09_righe_ordine_for")) Is Nothing) Then
                MyBase.Tables.Add(New t09_righe_ordine_forDataTable(ds.Tables("t09_righe_ordine_for")))
            End If
            If (Not (ds.Tables("t10_stati_riga_ordine_for")) Is Nothing) Then
                MyBase.Tables.Add(New t10_stati_riga_ordine_forDataTable(ds.Tables("t10_stati_riga_ordine_for")))
            End If
            If (Not (ds.Tables("t11_fornitori")) Is Nothing) Then
                MyBase.Tables.Add(New t11_fornitoriDataTable(ds.Tables("t11_fornitori")))
            End If
            If (Not (ds.Tables("t14_clienti")) Is Nothing) Then
                MyBase.Tables.Add(New t14_clientiDataTable(ds.Tables("t14_clienti")))
            End If
            If (Not (ds.Tables("t15_causali_ordini_for")) Is Nothing) Then
                MyBase.Tables.Add(New t15_causali_ordini_forDataTable(ds.Tables("t15_causali_ordini_for")))
            End If
            If (Not (ds.Tables("t21_articoli_macchine")) Is Nothing) Then
                MyBase.Tables.Add(New t21_articoli_macchineDataTable(ds.Tables("t21_articoli_macchine")))
            End If
            If (Not (ds.Tables("t22_articoli_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New t22_articoli_articoliDataTable(ds.Tables("t22_articoli_articoli")))
            End If
            If (Not (ds.Tables("t25_matricole")) Is Nothing) Then
                MyBase.Tables.Add(New t25_matricoleDataTable(ds.Tables("t25_matricole")))
            End If
            If (Not (ds.Tables("t26_formule_prezzi")) Is Nothing) Then
                MyBase.Tables.Add(New t26_formule_prezziDataTable(ds.Tables("t26_formule_prezzi")))
            End If
            If (Not (ds.Tables("t27_versione")) Is Nothing) Then
                MyBase.Tables.Add(New t27_versioneDataTable(ds.Tables("t27_versione")))
            End If
            If (Not (ds.Tables("viewElencoIstanzeSemplice")) Is Nothing) Then
                MyBase.Tables.Add(New viewElencoIstanzeSempliceDataTable(ds.Tables("viewElencoIstanzeSemplice")))
            End If
            If (Not (ds.Tables("viewTestateOrdiniCliConStato")) Is Nothing) Then
                MyBase.Tables.Add(New viewTestateOrdiniCliConStatoDataTable(ds.Tables("viewTestateOrdiniCliConStato")))
            End If
            If (Not (ds.Tables("viewTestateOrdiniConStato")) Is Nothing) Then
                MyBase.Tables.Add(New viewTestateOrdiniConStatoDataTable(ds.Tables("viewTestateOrdiniConStato")))
            End If
            If (Not (ds.Tables("dvArticoliConMatricole")) Is Nothing) Then
                MyBase.Tables.Add(New dvArticoliConMatricoleDataTable(ds.Tables("dvArticoliConMatricole")))
            End If
            If (Not (ds.Tables("t28_testate_ordini_cli")) Is Nothing) Then
                MyBase.Tables.Add(New t28_testate_ordini_cliDataTable(ds.Tables("t28_testate_ordini_cli")))
            End If
            If (Not (ds.Tables("t29_righe_ordine_cli")) Is Nothing) Then
                MyBase.Tables.Add(New t29_righe_ordine_cliDataTable(ds.Tables("t29_righe_ordine_cli")))
            End If
            If (Not (ds.Tables("t20_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New t20_articoliDataTable(ds.Tables("t20_articoli")))
            End If
            If (Not (ds.Tables("v01_articoli")) Is Nothing) Then
                MyBase.Tables.Add(New v01_articoliDataTable(ds.Tables("v01_articoli")))
            End If
            If (Not (ds.Tables("v03_gruppi")) Is Nothing) Then
                MyBase.Tables.Add(New v03_gruppiDataTable(ds.Tables("v03_gruppi")))
            End If
            If (Not (ds.Tables("ListinoRicambi")) Is Nothing) Then
                MyBase.Tables.Add(New ListinoRicambiDataTable(ds.Tables("ListinoRicambi")))
            End If
            If (Not (ds.Tables("t28_anni")) Is Nothing) Then
                MyBase.Tables.Add(New t28_anniDataTable(ds.Tables("t28_anni")))
            End If
            If (Not (ds.Tables("RigheOrdiniRicambi")) Is Nothing) Then
                MyBase.Tables.Add(New RigheOrdiniRicambiDataTable(ds.Tables("RigheOrdiniRicambi")))
            End If
            If (Not (ds.Tables("viewTreeIstanzeMacchineTotaliArticoli")) Is Nothing) Then
                MyBase.Tables.Add(New viewTreeIstanzeMacchineTotaliArticoliDataTable(ds.Tables("viewTreeIstanzeMacchineTotaliArticoli")))
            End If
            If (Not (ds.Tables("viewTreeIstanzeMacchineTotaliGruppi")) Is Nothing) Then
                MyBase.Tables.Add(New viewTreeIstanzeMacchineTotaliGruppiDataTable(ds.Tables("viewTreeIstanzeMacchineTotaliGruppi")))
            End If
            If (Not (ds.Tables("ufn_GetQuantitaOrdinataArticolo")) Is Nothing) Then
                MyBase.Tables.Add(New ufn_GetQuantitaOrdinataArticoloDataTable(ds.Tables("ufn_GetQuantitaOrdinataArticolo")))
            End If
            If (Not (ds.Tables("RiepilogoArticoli")) Is Nothing) Then
                MyBase.Tables.Add(New RiepilogoArticoliDataTable(ds.Tables("RiepilogoArticoli")))
            End If
            If (Not (ds.Tables("Impegnati")) Is Nothing) Then
                MyBase.Tables.Add(New ImpegnatiDataTable(ds.Tables("Impegnati")))
            End If
            If (Not (ds.Tables("ArticoliInGruppi")) Is Nothing) Then
                MyBase.Tables.Add(New ArticoliInGruppiDataTable(ds.Tables("ArticoliInGruppi")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablet05_macchine = CType(MyBase.Tables("t05_macchine"),t05_macchineDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet05_macchine) Is Nothing) Then
                Me.tablet05_macchine.InitVars
            End If
        End If
        Me.tablet06_istanze_macchine = CType(MyBase.Tables("t06_istanze_macchine"),t06_istanze_macchineDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet06_istanze_macchine) Is Nothing) Then
                Me.tablet06_istanze_macchine.InitVars
            End If
        End If
        Me.tablet07_stati_istanza = CType(MyBase.Tables("t07_stati_istanza"),t07_stati_istanzaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet07_stati_istanza) Is Nothing) Then
                Me.tablet07_stati_istanza.InitVars
            End If
        End If
        Me.tablet08_testate_ordini_for = CType(MyBase.Tables("t08_testate_ordini_for"),t08_testate_ordini_forDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet08_testate_ordini_for) Is Nothing) Then
                Me.tablet08_testate_ordini_for.InitVars
            End If
        End If
        Me.tablet09_righe_ordine_for = CType(MyBase.Tables("t09_righe_ordine_for"),t09_righe_ordine_forDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet09_righe_ordine_for) Is Nothing) Then
                Me.tablet09_righe_ordine_for.InitVars
            End If
        End If
        Me.tablet10_stati_riga_ordine_for = CType(MyBase.Tables("t10_stati_riga_ordine_for"),t10_stati_riga_ordine_forDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet10_stati_riga_ordine_for) Is Nothing) Then
                Me.tablet10_stati_riga_ordine_for.InitVars
            End If
        End If
        Me.tablet11_fornitori = CType(MyBase.Tables("t11_fornitori"),t11_fornitoriDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet11_fornitori) Is Nothing) Then
                Me.tablet11_fornitori.InitVars
            End If
        End If
        Me.tablet14_clienti = CType(MyBase.Tables("t14_clienti"),t14_clientiDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet14_clienti) Is Nothing) Then
                Me.tablet14_clienti.InitVars
            End If
        End If
        Me.tablet15_causali_ordini_for = CType(MyBase.Tables("t15_causali_ordini_for"),t15_causali_ordini_forDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet15_causali_ordini_for) Is Nothing) Then
                Me.tablet15_causali_ordini_for.InitVars
            End If
        End If
        Me.tablet21_articoli_macchine = CType(MyBase.Tables("t21_articoli_macchine"),t21_articoli_macchineDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet21_articoli_macchine) Is Nothing) Then
                Me.tablet21_articoli_macchine.InitVars
            End If
        End If
        Me.tablet22_articoli_articoli = CType(MyBase.Tables("t22_articoli_articoli"),t22_articoli_articoliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet22_articoli_articoli) Is Nothing) Then
                Me.tablet22_articoli_articoli.InitVars
            End If
        End If
        Me.tablet25_matricole = CType(MyBase.Tables("t25_matricole"),t25_matricoleDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet25_matricole) Is Nothing) Then
                Me.tablet25_matricole.InitVars
            End If
        End If
        Me.tablet26_formule_prezzi = CType(MyBase.Tables("t26_formule_prezzi"),t26_formule_prezziDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet26_formule_prezzi) Is Nothing) Then
                Me.tablet26_formule_prezzi.InitVars
            End If
        End If
        Me.tablet27_versione = CType(MyBase.Tables("t27_versione"),t27_versioneDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet27_versione) Is Nothing) Then
                Me.tablet27_versione.InitVars
            End If
        End If
        Me.tableviewElencoIstanzeSemplice = CType(MyBase.Tables("viewElencoIstanzeSemplice"),viewElencoIstanzeSempliceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableviewElencoIstanzeSemplice) Is Nothing) Then
                Me.tableviewElencoIstanzeSemplice.InitVars
            End If
        End If
        Me.tableviewTestateOrdiniCliConStato = CType(MyBase.Tables("viewTestateOrdiniCliConStato"),viewTestateOrdiniCliConStatoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableviewTestateOrdiniCliConStato) Is Nothing) Then
                Me.tableviewTestateOrdiniCliConStato.InitVars
            End If
        End If
        Me.tableviewTestateOrdiniConStato = CType(MyBase.Tables("viewTestateOrdiniConStato"),viewTestateOrdiniConStatoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableviewTestateOrdiniConStato) Is Nothing) Then
                Me.tableviewTestateOrdiniConStato.InitVars
            End If
        End If
        Me.tabledvArticoliConMatricole = CType(MyBase.Tables("dvArticoliConMatricole"),dvArticoliConMatricoleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledvArticoliConMatricole) Is Nothing) Then
                Me.tabledvArticoliConMatricole.InitVars
            End If
        End If
        Me.tablet28_testate_ordini_cli = CType(MyBase.Tables("t28_testate_ordini_cli"),t28_testate_ordini_cliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet28_testate_ordini_cli) Is Nothing) Then
                Me.tablet28_testate_ordini_cli.InitVars
            End If
        End If
        Me.tablet29_righe_ordine_cli = CType(MyBase.Tables("t29_righe_ordine_cli"),t29_righe_ordine_cliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet29_righe_ordine_cli) Is Nothing) Then
                Me.tablet29_righe_ordine_cli.InitVars
            End If
        End If
        Me.tablet20_articoli = CType(MyBase.Tables("t20_articoli"),t20_articoliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet20_articoli) Is Nothing) Then
                Me.tablet20_articoli.InitVars
            End If
        End If
        Me.tablev01_articoli = CType(MyBase.Tables("v01_articoli"),v01_articoliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablev01_articoli) Is Nothing) Then
                Me.tablev01_articoli.InitVars
            End If
        End If
        Me.tablev03_gruppi = CType(MyBase.Tables("v03_gruppi"),v03_gruppiDataTable)
        If (initTable = true) Then
            If (Not (Me.tablev03_gruppi) Is Nothing) Then
                Me.tablev03_gruppi.InitVars
            End If
        End If
        Me.tableListinoRicambi = CType(MyBase.Tables("ListinoRicambi"),ListinoRicambiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableListinoRicambi) Is Nothing) Then
                Me.tableListinoRicambi.InitVars
            End If
        End If
        Me.tablet28_anni = CType(MyBase.Tables("t28_anni"),t28_anniDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet28_anni) Is Nothing) Then
                Me.tablet28_anni.InitVars
            End If
        End If
        Me.tableRigheOrdiniRicambi = CType(MyBase.Tables("RigheOrdiniRicambi"),RigheOrdiniRicambiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRigheOrdiniRicambi) Is Nothing) Then
                Me.tableRigheOrdiniRicambi.InitVars
            End If
        End If
        Me.tableviewTreeIstanzeMacchineTotaliArticoli = CType(MyBase.Tables("viewTreeIstanzeMacchineTotaliArticoli"),viewTreeIstanzeMacchineTotaliArticoliDataTable)
        If (initTable = true) Then
            If (Not (Me.tableviewTreeIstanzeMacchineTotaliArticoli) Is Nothing) Then
                Me.tableviewTreeIstanzeMacchineTotaliArticoli.InitVars
            End If
        End If
        Me.tableviewTreeIstanzeMacchineTotaliGruppi = CType(MyBase.Tables("viewTreeIstanzeMacchineTotaliGruppi"),viewTreeIstanzeMacchineTotaliGruppiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableviewTreeIstanzeMacchineTotaliGruppi) Is Nothing) Then
                Me.tableviewTreeIstanzeMacchineTotaliGruppi.InitVars
            End If
        End If
        Me.tableufn_GetQuantitaOrdinataArticolo = CType(MyBase.Tables("ufn_GetQuantitaOrdinataArticolo"),ufn_GetQuantitaOrdinataArticoloDataTable)
        If (initTable = true) Then
            If (Not (Me.tableufn_GetQuantitaOrdinataArticolo) Is Nothing) Then
                Me.tableufn_GetQuantitaOrdinataArticolo.InitVars
            End If
        End If
        Me.tableRiepilogoArticoli = CType(MyBase.Tables("RiepilogoArticoli"),RiepilogoArticoliDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRiepilogoArticoli) Is Nothing) Then
                Me.tableRiepilogoArticoli.InitVars
            End If
        End If
        Me.tableImpegnati = CType(MyBase.Tables("Impegnati"),ImpegnatiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableImpegnati) Is Nothing) Then
                Me.tableImpegnati.InitVars
            End If
        End If
        Me.tableArticoliInGruppi = CType(MyBase.Tables("ArticoliInGruppi"),ArticoliInGruppiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableArticoliInGruppi) Is Nothing) Then
                Me.tableArticoliInGruppi.InitVars
            End If
        End If
        Me.relationFK_t06_istanze_macchine_t05_macchine = Me.Relations("FK_t06_istanze_macchine_t05_macchine")
        Me.relationFK_t06_istanze_macchine_t07_stati_istanza = Me.Relations("FK_t06_istanze_macchine_t07_stati_istanza")
        Me.relationFK_t08_testate_ordini_for_t11_fornitori = Me.Relations("FK_t08_testate_ordini_for_t11_fornitori")
        Me.relationFK_t08_testate_ordini_for_t15_causali_ordini_for = Me.Relations("FK_t08_testate_ordini_for_t15_causali_ordini_for")
        Me.relationFK_t09_righe_ordine_for_t08_testate_ordini_for = Me.Relations("FK_t09_righe_ordine_for_t08_testate_ordini_for")
        Me.relationFK_t21_articoli_macchine_t05_macchine = Me.Relations("FK_t21_articoli_macchine_t05_macchine")
        Me.relationFK_t29_righe_ordine_cli_t28_testate_ordini_cli = Me.Relations("FK_t29_righe_ordine_cli_t28_testate_ordini_cli")
        Me.relationFK_t09_righe_ordine_for_t20_articoli = Me.Relations("FK_t09_righe_ordine_for_t20_articoli")
        Me.relationFK_t21_articoli_macchine_t20_articoli = Me.Relations("FK_t21_articoli_macchine_t20_articoli")
        Me.relationFK_t22_articoli_articoli_t20_articoli = Me.Relations("FK_t22_articoli_articoli_t20_articoli")
        Me.relationFK_t22_articoli_articoli_t20_articoli1 = Me.Relations("FK_t22_articoli_articoli_t20_articoli1")
        Me.relationFK_t25_matricole_t20_articoli = Me.Relations("FK_t25_matricole_t20_articoli")
        Me.relationFK_t29_righe_ordine_cli_t20_articoli = Me.Relations("FK_t29_righe_ordine_cli_t20_articoli")
        Me.relationFK_t09_righe_ordine_for_t20_articoli1 = Me.Relations("FK_t09_righe_ordine_for_t20_articoli1")
        Me.relationFK_t21_articoli_macchine_t20_articoli1 = Me.Relations("FK_t21_articoli_macchine_t20_articoli1")
        Me.relationFK_t22_articoli_articoli_t20_articoli2 = Me.Relations("FK_t22_articoli_articoli_t20_articoli2")
        Me.relationFK_t22_articoli_articoli_t20_articoli11 = Me.Relations("FK_t22_articoli_articoli_t20_articoli11")
        Me.relationFK_t25_matricole_t20_articoli1 = Me.Relations("FK_t25_matricole_t20_articoli1")
        Me.relationFK_t29_righe_ordine_cli_t20_articoli1 = Me.Relations("FK_t29_righe_ordine_cli_t20_articoli1")
        Me.relationFK_t09_righe_ordine_for_t20_articoli2 = Me.Relations("FK_t09_righe_ordine_for_t20_articoli2")
        Me.relationFK_t21_articoli_macchine_t20_articoli2 = Me.Relations("FK_t21_articoli_macchine_t20_articoli2")
        Me.relationFK_t22_articoli_articoli_t20_articoli3 = Me.Relations("FK_t22_articoli_articoli_t20_articoli3")
        Me.relationFK_t22_articoli_articoli_t20_articoli12 = Me.Relations("FK_t22_articoli_articoli_t20_articoli12")
        Me.relationFK_t25_matricole_t20_articoli2 = Me.Relations("FK_t25_matricole_t20_articoli2")
        Me.relationFK_t29_righe_ordine_cli_t20_articoli2 = Me.Relations("FK_t29_righe_ordine_cli_t20_articoli2")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "GestioneProduzione2009DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/GestioneProduzione2009DataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablet05_macchine = New t05_macchineDataTable
        MyBase.Tables.Add(Me.tablet05_macchine)
        Me.tablet06_istanze_macchine = New t06_istanze_macchineDataTable
        MyBase.Tables.Add(Me.tablet06_istanze_macchine)
        Me.tablet07_stati_istanza = New t07_stati_istanzaDataTable
        MyBase.Tables.Add(Me.tablet07_stati_istanza)
        Me.tablet08_testate_ordini_for = New t08_testate_ordini_forDataTable
        MyBase.Tables.Add(Me.tablet08_testate_ordini_for)
        Me.tablet09_righe_ordine_for = New t09_righe_ordine_forDataTable
        MyBase.Tables.Add(Me.tablet09_righe_ordine_for)
        Me.tablet10_stati_riga_ordine_for = New t10_stati_riga_ordine_forDataTable
        MyBase.Tables.Add(Me.tablet10_stati_riga_ordine_for)
        Me.tablet11_fornitori = New t11_fornitoriDataTable
        MyBase.Tables.Add(Me.tablet11_fornitori)
        Me.tablet14_clienti = New t14_clientiDataTable
        MyBase.Tables.Add(Me.tablet14_clienti)
        Me.tablet15_causali_ordini_for = New t15_causali_ordini_forDataTable
        MyBase.Tables.Add(Me.tablet15_causali_ordini_for)
        Me.tablet21_articoli_macchine = New t21_articoli_macchineDataTable
        MyBase.Tables.Add(Me.tablet21_articoli_macchine)
        Me.tablet22_articoli_articoli = New t22_articoli_articoliDataTable
        MyBase.Tables.Add(Me.tablet22_articoli_articoli)
        Me.tablet25_matricole = New t25_matricoleDataTable
        MyBase.Tables.Add(Me.tablet25_matricole)
        Me.tablet26_formule_prezzi = New t26_formule_prezziDataTable
        MyBase.Tables.Add(Me.tablet26_formule_prezzi)
        Me.tablet27_versione = New t27_versioneDataTable
        MyBase.Tables.Add(Me.tablet27_versione)
        Me.tableviewElencoIstanzeSemplice = New viewElencoIstanzeSempliceDataTable
        MyBase.Tables.Add(Me.tableviewElencoIstanzeSemplice)
        Me.tableviewTestateOrdiniCliConStato = New viewTestateOrdiniCliConStatoDataTable
        MyBase.Tables.Add(Me.tableviewTestateOrdiniCliConStato)
        Me.tableviewTestateOrdiniConStato = New viewTestateOrdiniConStatoDataTable
        MyBase.Tables.Add(Me.tableviewTestateOrdiniConStato)
        Me.tabledvArticoliConMatricole = New dvArticoliConMatricoleDataTable
        MyBase.Tables.Add(Me.tabledvArticoliConMatricole)
        Me.tablet28_testate_ordini_cli = New t28_testate_ordini_cliDataTable
        MyBase.Tables.Add(Me.tablet28_testate_ordini_cli)
        Me.tablet29_righe_ordine_cli = New t29_righe_ordine_cliDataTable
        MyBase.Tables.Add(Me.tablet29_righe_ordine_cli)
        Me.tablet20_articoli = New t20_articoliDataTable
        MyBase.Tables.Add(Me.tablet20_articoli)
        Me.tablev01_articoli = New v01_articoliDataTable
        MyBase.Tables.Add(Me.tablev01_articoli)
        Me.tablev03_gruppi = New v03_gruppiDataTable
        MyBase.Tables.Add(Me.tablev03_gruppi)
        Me.tableListinoRicambi = New ListinoRicambiDataTable
        MyBase.Tables.Add(Me.tableListinoRicambi)
        Me.tablet28_anni = New t28_anniDataTable
        MyBase.Tables.Add(Me.tablet28_anni)
        Me.tableRigheOrdiniRicambi = New RigheOrdiniRicambiDataTable
        MyBase.Tables.Add(Me.tableRigheOrdiniRicambi)
        Me.tableviewTreeIstanzeMacchineTotaliArticoli = New viewTreeIstanzeMacchineTotaliArticoliDataTable
        MyBase.Tables.Add(Me.tableviewTreeIstanzeMacchineTotaliArticoli)
        Me.tableviewTreeIstanzeMacchineTotaliGruppi = New viewTreeIstanzeMacchineTotaliGruppiDataTable
        MyBase.Tables.Add(Me.tableviewTreeIstanzeMacchineTotaliGruppi)
        Me.tableufn_GetQuantitaOrdinataArticolo = New ufn_GetQuantitaOrdinataArticoloDataTable
        MyBase.Tables.Add(Me.tableufn_GetQuantitaOrdinataArticolo)
        Me.tableRiepilogoArticoli = New RiepilogoArticoliDataTable
        MyBase.Tables.Add(Me.tableRiepilogoArticoli)
        Me.tableImpegnati = New ImpegnatiDataTable
        MyBase.Tables.Add(Me.tableImpegnati)
        Me.tableArticoliInGruppi = New ArticoliInGruppiDataTable
        MyBase.Tables.Add(Me.tableArticoliInGruppi)
        Me.relationFK_t06_istanze_macchine_t05_macchine = New Global.System.Data.DataRelation("FK_t06_istanze_macchine_t05_macchine", New Global.System.Data.DataColumn() {Me.tablet05_macchine.t05_id_macchinaColumn}, New Global.System.Data.DataColumn() {Me.tablet06_istanze_macchine.t06_id_macchina_t05Column}, false)
        Me.Relations.Add(Me.relationFK_t06_istanze_macchine_t05_macchine)
        Me.relationFK_t06_istanze_macchine_t07_stati_istanza = New Global.System.Data.DataRelation("FK_t06_istanze_macchine_t07_stati_istanza", New Global.System.Data.DataColumn() {Me.tablet07_stati_istanza.t07_id_stato_istanzaColumn}, New Global.System.Data.DataColumn() {Me.tablet06_istanze_macchine.t06_id_stato_istanza_t07Column}, false)
        Me.Relations.Add(Me.relationFK_t06_istanze_macchine_t07_stati_istanza)
        Me.relationFK_t08_testate_ordini_for_t11_fornitori = New Global.System.Data.DataRelation("FK_t08_testate_ordini_for_t11_fornitori", New Global.System.Data.DataColumn() {Me.tablet11_fornitori.t11_id_fornitoreColumn}, New Global.System.Data.DataColumn() {Me.tablet08_testate_ordini_for.t08_id_fornitore_t11Column}, false)
        Me.Relations.Add(Me.relationFK_t08_testate_ordini_for_t11_fornitori)
        Me.relationFK_t08_testate_ordini_for_t15_causali_ordini_for = New Global.System.Data.DataRelation("FK_t08_testate_ordini_for_t15_causali_ordini_for", New Global.System.Data.DataColumn() {Me.tablet15_causali_ordini_for.t15_id_causale_ordine_forColumn}, New Global.System.Data.DataColumn() {Me.tablet08_testate_ordini_for.t08_id_causale_ordine_for_t15Column}, false)
        Me.Relations.Add(Me.relationFK_t08_testate_ordini_for_t15_causali_ordini_for)
        Me.relationFK_t09_righe_ordine_for_t08_testate_ordini_for = New Global.System.Data.DataRelation("FK_t09_righe_ordine_for_t08_testate_ordini_for", New Global.System.Data.DataColumn() {Me.tablet08_testate_ordini_for.t08_id_testata_ordine_forColumn}, New Global.System.Data.DataColumn() {Me.tablet09_righe_ordine_for.t09_id_testata_ordine_for_t08Column}, false)
        Me.Relations.Add(Me.relationFK_t09_righe_ordine_for_t08_testate_ordini_for)
        Me.relationFK_t21_articoli_macchine_t05_macchine = New Global.System.Data.DataRelation("FK_t21_articoli_macchine_t05_macchine", New Global.System.Data.DataColumn() {Me.tablet05_macchine.t05_id_macchinaColumn}, New Global.System.Data.DataColumn() {Me.tablet21_articoli_macchine.t21_id_macchina_t05Column}, false)
        Me.Relations.Add(Me.relationFK_t21_articoli_macchine_t05_macchine)
        Me.relationFK_t29_righe_ordine_cli_t28_testate_ordini_cli = New Global.System.Data.DataRelation("FK_t29_righe_ordine_cli_t28_testate_ordini_cli", New Global.System.Data.DataColumn() {Me.tablet28_testate_ordini_cli.t28_idColumn}, New Global.System.Data.DataColumn() {Me.tablet29_righe_ordine_cli.t29_id_testata_t28Column}, false)
        Me.Relations.Add(Me.relationFK_t29_righe_ordine_cli_t28_testate_ordini_cli)
        Me.relationFK_t09_righe_ordine_for_t20_articoli = New Global.System.Data.DataRelation("FK_t09_righe_ordine_for_t20_articoli", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t09_righe_ordine_for_t20_articoli)
        Me.relationFK_t21_articoli_macchine_t20_articoli = New Global.System.Data.DataRelation("FK_t21_articoli_macchine_t20_articoli", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet21_articoli_macchine.t21_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t21_articoli_macchine_t20_articoli)
        Me.relationFK_t22_articoli_articoli_t20_articoli = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli)
        Me.relationFK_t22_articoli_articoli_t20_articoli1 = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli1", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli1)
        Me.relationFK_t25_matricole_t20_articoli = New Global.System.Data.DataRelation("FK_t25_matricole_t20_articoli", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet25_matricole.t25_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t25_matricole_t20_articoli)
        Me.relationFK_t29_righe_ordine_cli_t20_articoli = New Global.System.Data.DataRelation("FK_t29_righe_ordine_cli_t20_articoli", New Global.System.Data.DataColumn() {Me.tablet20_articoli.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t29_righe_ordine_cli_t20_articoli)
        Me.relationFK_t09_righe_ordine_for_t20_articoli1 = New Global.System.Data.DataRelation("FK_t09_righe_ordine_for_t20_articoli1", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t09_righe_ordine_for_t20_articoli1)
        Me.relationFK_t21_articoli_macchine_t20_articoli1 = New Global.System.Data.DataRelation("FK_t21_articoli_macchine_t20_articoli1", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet21_articoli_macchine.t21_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t21_articoli_macchine_t20_articoli1)
        Me.relationFK_t22_articoli_articoli_t20_articoli2 = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli2", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli2)
        Me.relationFK_t22_articoli_articoli_t20_articoli11 = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli11", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli11)
        Me.relationFK_t25_matricole_t20_articoli1 = New Global.System.Data.DataRelation("FK_t25_matricole_t20_articoli1", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet25_matricole.t25_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t25_matricole_t20_articoli1)
        Me.relationFK_t29_righe_ordine_cli_t20_articoli1 = New Global.System.Data.DataRelation("FK_t29_righe_ordine_cli_t20_articoli1", New Global.System.Data.DataColumn() {Me.tableListinoRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t29_righe_ordine_cli_t20_articoli1)
        Me.relationFK_t09_righe_ordine_for_t20_articoli2 = New Global.System.Data.DataRelation("FK_t09_righe_ordine_for_t20_articoli2", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t09_righe_ordine_for_t20_articoli2)
        Me.relationFK_t21_articoli_macchine_t20_articoli2 = New Global.System.Data.DataRelation("FK_t21_articoli_macchine_t20_articoli2", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet21_articoli_macchine.t21_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t21_articoli_macchine_t20_articoli2)
        Me.relationFK_t22_articoli_articoli_t20_articoli3 = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli3", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli3)
        Me.relationFK_t22_articoli_articoli_t20_articoli12 = New Global.System.Data.DataRelation("FK_t22_articoli_articoli_t20_articoli12", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t22_articoli_articoli_t20_articoli12)
        Me.relationFK_t25_matricole_t20_articoli2 = New Global.System.Data.DataRelation("FK_t25_matricole_t20_articoli2", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet25_matricole.t25_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t25_matricole_t20_articoli2)
        Me.relationFK_t29_righe_ordine_cli_t20_articoli2 = New Global.System.Data.DataRelation("FK_t29_righe_ordine_cli_t20_articoli2", New Global.System.Data.DataColumn() {Me.tableRigheOrdiniRicambi.t20_id_articoloColumn}, New Global.System.Data.DataColumn() {Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column}, false)
        Me.Relations.Add(Me.relationFK_t29_righe_ordine_cli_t20_articoli2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet05_macchine() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet06_istanze_macchine() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet07_stati_istanza() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet08_testate_ordini_for() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet09_righe_ordine_for() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet10_stati_riga_ordine_for() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet11_fornitori() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet14_clienti() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet15_causali_ordini_for() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet21_articoli_macchine() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet22_articoli_articoli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet25_matricole() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet26_formule_prezzi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet27_versione() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeviewElencoIstanzeSemplice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeviewTestateOrdiniCliConStato() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeviewTestateOrdiniConStato() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedvArticoliConMatricole() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet28_testate_ordini_cli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet29_righe_ordine_cli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet20_articoli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializev01_articoli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializev03_gruppi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeListinoRicambi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet28_anni() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRigheOrdiniRicambi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeviewTreeIstanzeMacchineTotaliArticoli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeviewTreeIstanzeMacchineTotaliGruppi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeufn_GetQuantitaOrdinataArticolo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRiepilogoArticoli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeImpegnati() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeArticoliInGruppi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub t05_macchineRowChangeEventHandler(ByVal sender As Object, ByVal e As t05_macchineRowChangeEvent)
    
    Public Delegate Sub t06_istanze_macchineRowChangeEventHandler(ByVal sender As Object, ByVal e As t06_istanze_macchineRowChangeEvent)
    
    Public Delegate Sub t07_stati_istanzaRowChangeEventHandler(ByVal sender As Object, ByVal e As t07_stati_istanzaRowChangeEvent)
    
    Public Delegate Sub t08_testate_ordini_forRowChangeEventHandler(ByVal sender As Object, ByVal e As t08_testate_ordini_forRowChangeEvent)
    
    Public Delegate Sub t09_righe_ordine_forRowChangeEventHandler(ByVal sender As Object, ByVal e As t09_righe_ordine_forRowChangeEvent)
    
    Public Delegate Sub t10_stati_riga_ordine_forRowChangeEventHandler(ByVal sender As Object, ByVal e As t10_stati_riga_ordine_forRowChangeEvent)
    
    Public Delegate Sub t11_fornitoriRowChangeEventHandler(ByVal sender As Object, ByVal e As t11_fornitoriRowChangeEvent)
    
    Public Delegate Sub t14_clientiRowChangeEventHandler(ByVal sender As Object, ByVal e As t14_clientiRowChangeEvent)
    
    Public Delegate Sub t15_causali_ordini_forRowChangeEventHandler(ByVal sender As Object, ByVal e As t15_causali_ordini_forRowChangeEvent)
    
    Public Delegate Sub t21_articoli_macchineRowChangeEventHandler(ByVal sender As Object, ByVal e As t21_articoli_macchineRowChangeEvent)
    
    Public Delegate Sub t22_articoli_articoliRowChangeEventHandler(ByVal sender As Object, ByVal e As t22_articoli_articoliRowChangeEvent)
    
    Public Delegate Sub t25_matricoleRowChangeEventHandler(ByVal sender As Object, ByVal e As t25_matricoleRowChangeEvent)
    
    Public Delegate Sub t26_formule_prezziRowChangeEventHandler(ByVal sender As Object, ByVal e As t26_formule_prezziRowChangeEvent)
    
    Public Delegate Sub t27_versioneRowChangeEventHandler(ByVal sender As Object, ByVal e As t27_versioneRowChangeEvent)
    
    Public Delegate Sub viewElencoIstanzeSempliceRowChangeEventHandler(ByVal sender As Object, ByVal e As viewElencoIstanzeSempliceRowChangeEvent)
    
    Public Delegate Sub viewTestateOrdiniCliConStatoRowChangeEventHandler(ByVal sender As Object, ByVal e As viewTestateOrdiniCliConStatoRowChangeEvent)
    
    Public Delegate Sub viewTestateOrdiniConStatoRowChangeEventHandler(ByVal sender As Object, ByVal e As viewTestateOrdiniConStatoRowChangeEvent)
    
    Public Delegate Sub dvArticoliConMatricoleRowChangeEventHandler(ByVal sender As Object, ByVal e As dvArticoliConMatricoleRowChangeEvent)
    
    Public Delegate Sub t28_testate_ordini_cliRowChangeEventHandler(ByVal sender As Object, ByVal e As t28_testate_ordini_cliRowChangeEvent)
    
    Public Delegate Sub t29_righe_ordine_cliRowChangeEventHandler(ByVal sender As Object, ByVal e As t29_righe_ordine_cliRowChangeEvent)
    
    Public Delegate Sub t20_articoliRowChangeEventHandler(ByVal sender As Object, ByVal e As t20_articoliRowChangeEvent)
    
    Public Delegate Sub v01_articoliRowChangeEventHandler(ByVal sender As Object, ByVal e As v01_articoliRowChangeEvent)
    
    Public Delegate Sub v03_gruppiRowChangeEventHandler(ByVal sender As Object, ByVal e As v03_gruppiRowChangeEvent)
    
    Public Delegate Sub ListinoRicambiRowChangeEventHandler(ByVal sender As Object, ByVal e As ListinoRicambiRowChangeEvent)
    
    Public Delegate Sub t28_anniRowChangeEventHandler(ByVal sender As Object, ByVal e As t28_anniRowChangeEvent)
    
    Public Delegate Sub RigheOrdiniRicambiRowChangeEventHandler(ByVal sender As Object, ByVal e As RigheOrdiniRicambiRowChangeEvent)
    
    Public Delegate Sub viewTreeIstanzeMacchineTotaliArticoliRowChangeEventHandler(ByVal sender As Object, ByVal e As viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent)
    
    Public Delegate Sub viewTreeIstanzeMacchineTotaliGruppiRowChangeEventHandler(ByVal sender As Object, ByVal e As viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent)
    
    Public Delegate Sub ufn_GetQuantitaOrdinataArticoloRowChangeEventHandler(ByVal sender As Object, ByVal e As ufn_GetQuantitaOrdinataArticoloRowChangeEvent)
    
    Public Delegate Sub RiepilogoArticoliRowChangeEventHandler(ByVal sender As Object, ByVal e As RiepilogoArticoliRowChangeEvent)
    
    Public Delegate Sub ImpegnatiRowChangeEventHandler(ByVal sender As Object, ByVal e As ImpegnatiRowChangeEvent)
    
    Public Delegate Sub ArticoliInGruppiRowChangeEventHandler(ByVal sender As Object, ByVal e As ArticoliInGruppiRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t05_macchineDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt05_id_macchina As Global.System.Data.DataColumn
        
        Private columnt05_cod_macchina As Global.System.Data.DataColumn
        
        Private columnt05_descrizione As Global.System.Data.DataColumn
        
        Private columnt05_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt05_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt05_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t05_macchine"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_id_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_id_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_cod_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_cod_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t05_macchineRow
            Get
                Return CType(Me.Rows(index),t05_macchineRow)
            End Get
        End Property
        
        Public Event t05_macchineRowChanging As t05_macchineRowChangeEventHandler
        
        Public Event t05_macchineRowChanged As t05_macchineRowChangeEventHandler
        
        Public Event t05_macchineRowDeleting As t05_macchineRowChangeEventHandler
        
        Public Event t05_macchineRowDeleted As t05_macchineRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt05_macchineRow(ByVal row As t05_macchineRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt05_macchineRow(ByVal t05_cod_macchina As String, ByVal t05_descrizione As String, ByVal t05_dt_creazione As Date, ByVal t05_dt_modifica As Date, ByVal t05_dt_cancellazione As Date) As t05_macchineRow
            Dim rowt05_macchineRow As t05_macchineRow = CType(Me.NewRow,t05_macchineRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t05_cod_macchina, t05_descrizione, t05_dt_creazione, t05_dt_modifica, t05_dt_cancellazione}
            rowt05_macchineRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt05_macchineRow)
            Return rowt05_macchineRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt05_id_macchina(ByVal t05_id_macchina As Integer) As t05_macchineRow
            Return CType(Me.Rows.Find(New Object() {t05_id_macchina}),t05_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t05_macchineDataTable = CType(MyBase.Clone,t05_macchineDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t05_macchineDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt05_id_macchina = MyBase.Columns("t05_id_macchina")
            Me.columnt05_cod_macchina = MyBase.Columns("t05_cod_macchina")
            Me.columnt05_descrizione = MyBase.Columns("t05_descrizione")
            Me.columnt05_dt_creazione = MyBase.Columns("t05_dt_creazione")
            Me.columnt05_dt_modifica = MyBase.Columns("t05_dt_modifica")
            Me.columnt05_dt_cancellazione = MyBase.Columns("t05_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt05_id_macchina = New Global.System.Data.DataColumn("t05_id_macchina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_id_macchina)
            Me.columnt05_cod_macchina = New Global.System.Data.DataColumn("t05_cod_macchina", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_cod_macchina)
            Me.columnt05_descrizione = New Global.System.Data.DataColumn("t05_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_descrizione)
            Me.columnt05_dt_creazione = New Global.System.Data.DataColumn("t05_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_creazione)
            Me.columnt05_dt_modifica = New Global.System.Data.DataColumn("t05_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_modifica)
            Me.columnt05_dt_cancellazione = New Global.System.Data.DataColumn("t05_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt05_id_macchina}, true))
            Me.columnt05_id_macchina.AutoIncrement = true
            Me.columnt05_id_macchina.AllowDBNull = false
            Me.columnt05_id_macchina.ReadOnly = true
            Me.columnt05_id_macchina.Unique = true
            Me.columnt05_cod_macchina.MaxLength = 20
            Me.columnt05_descrizione.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt05_macchineRow() As t05_macchineRow
            Return CType(Me.NewRow,t05_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t05_macchineRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t05_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t05_macchineRowChangedEvent) Is Nothing) Then
                RaiseEvent t05_macchineRowChanged(Me, New t05_macchineRowChangeEvent(CType(e.Row,t05_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t05_macchineRowChangingEvent) Is Nothing) Then
                RaiseEvent t05_macchineRowChanging(Me, New t05_macchineRowChangeEvent(CType(e.Row,t05_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t05_macchineRowDeletedEvent) Is Nothing) Then
                RaiseEvent t05_macchineRowDeleted(Me, New t05_macchineRowChangeEvent(CType(e.Row,t05_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t05_macchineRowDeletingEvent) Is Nothing) Then
                RaiseEvent t05_macchineRowDeleting(Me, New t05_macchineRowChangeEvent(CType(e.Row,t05_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet05_macchineRow(ByVal row As t05_macchineRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t05_macchineDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t06_istanze_macchineDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt06_id_istanza_macchina As Global.System.Data.DataColumn
        
        Private columnt06_descrizione As Global.System.Data.DataColumn
        
        Private columnt06_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt06_id_macchina_t05 As Global.System.Data.DataColumn
        
        Private columnt06_quantita As Global.System.Data.DataColumn
        
        Private columnt06_id_stato_istanza_t07 As Global.System.Data.DataColumn
        
        Private columnt06_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt06_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt06_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t06_istanze_macchine"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_istanza_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_istanza_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_macchina_t05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_macchina_t05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_quantitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_quantita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_stato_istanza_t07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_stato_istanza_t07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t06_istanze_macchineRow
            Get
                Return CType(Me.Rows(index),t06_istanze_macchineRow)
            End Get
        End Property
        
        Public Event t06_istanze_macchineRowChanging As t06_istanze_macchineRowChangeEventHandler
        
        Public Event t06_istanze_macchineRowChanged As t06_istanze_macchineRowChangeEventHandler
        
        Public Event t06_istanze_macchineRowDeleting As t06_istanze_macchineRowChangeEventHandler
        
        Public Event t06_istanze_macchineRowDeleted As t06_istanze_macchineRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt06_istanze_macchineRow(ByVal row As t06_istanze_macchineRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt06_istanze_macchineRow(ByVal t06_descrizione As String, ByVal t06_dt_consegna As Date, ByVal parentt05_macchineRowByFK_t06_istanze_macchine_t05_macchine As t05_macchineRow, ByVal t06_quantita As Short, ByVal parentt07_stati_istanzaRowByFK_t06_istanze_macchine_t07_stati_istanza As t07_stati_istanzaRow, ByVal t06_dt_creazione As Date, ByVal t06_dt_modifica As Date, ByVal t06_dt_cancellazione As Date) As t06_istanze_macchineRow
            Dim rowt06_istanze_macchineRow As t06_istanze_macchineRow = CType(Me.NewRow,t06_istanze_macchineRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t06_descrizione, t06_dt_consegna, Nothing, t06_quantita, Nothing, t06_dt_creazione, t06_dt_modifica, t06_dt_cancellazione}
            If (Not (parentt05_macchineRowByFK_t06_istanze_macchine_t05_macchine) Is Nothing) Then
                columnValuesArray(3) = parentt05_macchineRowByFK_t06_istanze_macchine_t05_macchine(0)
            End If
            If (Not (parentt07_stati_istanzaRowByFK_t06_istanze_macchine_t07_stati_istanza) Is Nothing) Then
                columnValuesArray(5) = parentt07_stati_istanzaRowByFK_t06_istanze_macchine_t07_stati_istanza(0)
            End If
            rowt06_istanze_macchineRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt06_istanze_macchineRow)
            Return rowt06_istanze_macchineRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt06_id_istanza_macchina(ByVal t06_id_istanza_macchina As Integer) As t06_istanze_macchineRow
            Return CType(Me.Rows.Find(New Object() {t06_id_istanza_macchina}),t06_istanze_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t06_istanze_macchineDataTable = CType(MyBase.Clone,t06_istanze_macchineDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t06_istanze_macchineDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt06_id_istanza_macchina = MyBase.Columns("t06_id_istanza_macchina")
            Me.columnt06_descrizione = MyBase.Columns("t06_descrizione")
            Me.columnt06_dt_consegna = MyBase.Columns("t06_dt_consegna")
            Me.columnt06_id_macchina_t05 = MyBase.Columns("t06_id_macchina_t05")
            Me.columnt06_quantita = MyBase.Columns("t06_quantita")
            Me.columnt06_id_stato_istanza_t07 = MyBase.Columns("t06_id_stato_istanza_t07")
            Me.columnt06_dt_creazione = MyBase.Columns("t06_dt_creazione")
            Me.columnt06_dt_modifica = MyBase.Columns("t06_dt_modifica")
            Me.columnt06_dt_cancellazione = MyBase.Columns("t06_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt06_id_istanza_macchina = New Global.System.Data.DataColumn("t06_id_istanza_macchina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_istanza_macchina)
            Me.columnt06_descrizione = New Global.System.Data.DataColumn("t06_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_descrizione)
            Me.columnt06_dt_consegna = New Global.System.Data.DataColumn("t06_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_consegna)
            Me.columnt06_id_macchina_t05 = New Global.System.Data.DataColumn("t06_id_macchina_t05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_macchina_t05)
            Me.columnt06_quantita = New Global.System.Data.DataColumn("t06_quantita", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_quantita)
            Me.columnt06_id_stato_istanza_t07 = New Global.System.Data.DataColumn("t06_id_stato_istanza_t07", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_stato_istanza_t07)
            Me.columnt06_dt_creazione = New Global.System.Data.DataColumn("t06_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_creazione)
            Me.columnt06_dt_modifica = New Global.System.Data.DataColumn("t06_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_modifica)
            Me.columnt06_dt_cancellazione = New Global.System.Data.DataColumn("t06_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt06_id_istanza_macchina}, true))
            Me.columnt06_id_istanza_macchina.AutoIncrement = true
            Me.columnt06_id_istanza_macchina.AllowDBNull = false
            Me.columnt06_id_istanza_macchina.ReadOnly = true
            Me.columnt06_id_istanza_macchina.Unique = true
            Me.columnt06_descrizione.MaxLength = 255
            Me.columnt06_id_stato_istanza_t07.AllowDBNull = false
            Me.columnt06_id_stato_istanza_t07.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt06_istanze_macchineRow() As t06_istanze_macchineRow
            Return CType(Me.NewRow,t06_istanze_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t06_istanze_macchineRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t06_istanze_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t06_istanze_macchineRowChangedEvent) Is Nothing) Then
                RaiseEvent t06_istanze_macchineRowChanged(Me, New t06_istanze_macchineRowChangeEvent(CType(e.Row,t06_istanze_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t06_istanze_macchineRowChangingEvent) Is Nothing) Then
                RaiseEvent t06_istanze_macchineRowChanging(Me, New t06_istanze_macchineRowChangeEvent(CType(e.Row,t06_istanze_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t06_istanze_macchineRowDeletedEvent) Is Nothing) Then
                RaiseEvent t06_istanze_macchineRowDeleted(Me, New t06_istanze_macchineRowChangeEvent(CType(e.Row,t06_istanze_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t06_istanze_macchineRowDeletingEvent) Is Nothing) Then
                RaiseEvent t06_istanze_macchineRowDeleting(Me, New t06_istanze_macchineRowChangeEvent(CType(e.Row,t06_istanze_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet06_istanze_macchineRow(ByVal row As t06_istanze_macchineRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t06_istanze_macchineDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t07_stati_istanzaDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt07_id_stato_istanza As Global.System.Data.DataColumn
        
        Private columnt07_descrizione As Global.System.Data.DataColumn
        
        Private columnt07_posizione As Global.System.Data.DataColumn
        
        Private columnt07_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt07_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt07_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t07_stati_istanza"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_id_stato_istanzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_id_stato_istanza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t07_stati_istanzaRow
            Get
                Return CType(Me.Rows(index),t07_stati_istanzaRow)
            End Get
        End Property
        
        Public Event t07_stati_istanzaRowChanging As t07_stati_istanzaRowChangeEventHandler
        
        Public Event t07_stati_istanzaRowChanged As t07_stati_istanzaRowChangeEventHandler
        
        Public Event t07_stati_istanzaRowDeleting As t07_stati_istanzaRowChangeEventHandler
        
        Public Event t07_stati_istanzaRowDeleted As t07_stati_istanzaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt07_stati_istanzaRow(ByVal row As t07_stati_istanzaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt07_stati_istanzaRow(ByVal t07_id_stato_istanza As String, ByVal t07_descrizione As String, ByVal t07_posizione As Byte, ByVal t07_dt_creazione As Date, ByVal t07_dt_modifica As Date, ByVal t07_dt_cancellazione As Date) As t07_stati_istanzaRow
            Dim rowt07_stati_istanzaRow As t07_stati_istanzaRow = CType(Me.NewRow,t07_stati_istanzaRow)
            Dim columnValuesArray() As Object = New Object() {t07_id_stato_istanza, t07_descrizione, t07_posizione, t07_dt_creazione, t07_dt_modifica, t07_dt_cancellazione}
            rowt07_stati_istanzaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt07_stati_istanzaRow)
            Return rowt07_stati_istanzaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt07_id_stato_istanza(ByVal t07_id_stato_istanza As String) As t07_stati_istanzaRow
            Return CType(Me.Rows.Find(New Object() {t07_id_stato_istanza}),t07_stati_istanzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t07_stati_istanzaDataTable = CType(MyBase.Clone,t07_stati_istanzaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t07_stati_istanzaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt07_id_stato_istanza = MyBase.Columns("t07_id_stato_istanza")
            Me.columnt07_descrizione = MyBase.Columns("t07_descrizione")
            Me.columnt07_posizione = MyBase.Columns("t07_posizione")
            Me.columnt07_dt_creazione = MyBase.Columns("t07_dt_creazione")
            Me.columnt07_dt_modifica = MyBase.Columns("t07_dt_modifica")
            Me.columnt07_dt_cancellazione = MyBase.Columns("t07_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt07_id_stato_istanza = New Global.System.Data.DataColumn("t07_id_stato_istanza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_id_stato_istanza)
            Me.columnt07_descrizione = New Global.System.Data.DataColumn("t07_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_descrizione)
            Me.columnt07_posizione = New Global.System.Data.DataColumn("t07_posizione", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_posizione)
            Me.columnt07_dt_creazione = New Global.System.Data.DataColumn("t07_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_creazione)
            Me.columnt07_dt_modifica = New Global.System.Data.DataColumn("t07_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_modifica)
            Me.columnt07_dt_cancellazione = New Global.System.Data.DataColumn("t07_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt07_id_stato_istanza}, true))
            Me.columnt07_id_stato_istanza.AllowDBNull = false
            Me.columnt07_id_stato_istanza.Unique = true
            Me.columnt07_id_stato_istanza.MaxLength = 1
            Me.columnt07_descrizione.MaxLength = 64
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt07_stati_istanzaRow() As t07_stati_istanzaRow
            Return CType(Me.NewRow,t07_stati_istanzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t07_stati_istanzaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t07_stati_istanzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t07_stati_istanzaRowChangedEvent) Is Nothing) Then
                RaiseEvent t07_stati_istanzaRowChanged(Me, New t07_stati_istanzaRowChangeEvent(CType(e.Row,t07_stati_istanzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t07_stati_istanzaRowChangingEvent) Is Nothing) Then
                RaiseEvent t07_stati_istanzaRowChanging(Me, New t07_stati_istanzaRowChangeEvent(CType(e.Row,t07_stati_istanzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t07_stati_istanzaRowDeletedEvent) Is Nothing) Then
                RaiseEvent t07_stati_istanzaRowDeleted(Me, New t07_stati_istanzaRowChangeEvent(CType(e.Row,t07_stati_istanzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t07_stati_istanzaRowDeletingEvent) Is Nothing) Then
                RaiseEvent t07_stati_istanzaRowDeleting(Me, New t07_stati_istanzaRowChangeEvent(CType(e.Row,t07_stati_istanzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet07_stati_istanzaRow(ByVal row As t07_stati_istanzaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t07_stati_istanzaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t08_testate_ordini_forDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt08_id_testata_ordine_for As Global.System.Data.DataColumn
        
        Private columnt08_cod_testata_ordine_for As Global.System.Data.DataColumn
        
        Private columnt08_descrizione As Global.System.Data.DataColumn
        
        Private columnt08_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt08_dt_ordine As Global.System.Data.DataColumn
        
        Private columnt08_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt08_tipo_ordine As Global.System.Data.DataColumn
        
        Private columnt08_id_causale_ordine_for_t15 As Global.System.Data.DataColumn
        
        Private columnt08_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt08_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt08_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t08_testate_ordini_for"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_testata_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_testata_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_cod_testata_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_cod_testata_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_tipo_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_tipo_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_causale_ordine_for_t15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_causale_ordine_for_t15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t08_testate_ordini_forRow
            Get
                Return CType(Me.Rows(index),t08_testate_ordini_forRow)
            End Get
        End Property
        
        Public Event t08_testate_ordini_forRowChanging As t08_testate_ordini_forRowChangeEventHandler
        
        Public Event t08_testate_ordini_forRowChanged As t08_testate_ordini_forRowChangeEventHandler
        
        Public Event t08_testate_ordini_forRowDeleting As t08_testate_ordini_forRowChangeEventHandler
        
        Public Event t08_testate_ordini_forRowDeleted As t08_testate_ordini_forRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt08_testate_ordini_forRow(ByVal row As t08_testate_ordini_forRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt08_testate_ordini_forRow(ByVal t08_cod_testata_ordine_for As String, ByVal t08_descrizione As String, ByVal parentt11_fornitoriRowByFK_t08_testate_ordini_for_t11_fornitori As t11_fornitoriRow, ByVal t08_dt_ordine As Date, ByVal t08_dt_consegna As Date, ByVal t08_tipo_ordine As String, ByVal parentt15_causali_ordini_forRowByFK_t08_testate_ordini_for_t15_causali_ordini_for As t15_causali_ordini_forRow, ByVal t08_dt_creazione As Date, ByVal t08_dt_modifica As Date, ByVal t08_dt_cancellazione As Date) As t08_testate_ordini_forRow
            Dim rowt08_testate_ordini_forRow As t08_testate_ordini_forRow = CType(Me.NewRow,t08_testate_ordini_forRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t08_cod_testata_ordine_for, t08_descrizione, Nothing, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine, Nothing, t08_dt_creazione, t08_dt_modifica, t08_dt_cancellazione}
            If (Not (parentt11_fornitoriRowByFK_t08_testate_ordini_for_t11_fornitori) Is Nothing) Then
                columnValuesArray(3) = parentt11_fornitoriRowByFK_t08_testate_ordini_for_t11_fornitori(0)
            End If
            If (Not (parentt15_causali_ordini_forRowByFK_t08_testate_ordini_for_t15_causali_ordini_for) Is Nothing) Then
                columnValuesArray(7) = parentt15_causali_ordini_forRowByFK_t08_testate_ordini_for_t15_causali_ordini_for(0)
            End If
            rowt08_testate_ordini_forRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt08_testate_ordini_forRow)
            Return rowt08_testate_ordini_forRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt08_id_testata_ordine_for(ByVal t08_id_testata_ordine_for As Integer) As t08_testate_ordini_forRow
            Return CType(Me.Rows.Find(New Object() {t08_id_testata_ordine_for}),t08_testate_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t08_testate_ordini_forDataTable = CType(MyBase.Clone,t08_testate_ordini_forDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t08_testate_ordini_forDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt08_id_testata_ordine_for = MyBase.Columns("t08_id_testata_ordine_for")
            Me.columnt08_cod_testata_ordine_for = MyBase.Columns("t08_cod_testata_ordine_for")
            Me.columnt08_descrizione = MyBase.Columns("t08_descrizione")
            Me.columnt08_id_fornitore_t11 = MyBase.Columns("t08_id_fornitore_t11")
            Me.columnt08_dt_ordine = MyBase.Columns("t08_dt_ordine")
            Me.columnt08_dt_consegna = MyBase.Columns("t08_dt_consegna")
            Me.columnt08_tipo_ordine = MyBase.Columns("t08_tipo_ordine")
            Me.columnt08_id_causale_ordine_for_t15 = MyBase.Columns("t08_id_causale_ordine_for_t15")
            Me.columnt08_dt_creazione = MyBase.Columns("t08_dt_creazione")
            Me.columnt08_dt_modifica = MyBase.Columns("t08_dt_modifica")
            Me.columnt08_dt_cancellazione = MyBase.Columns("t08_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt08_id_testata_ordine_for = New Global.System.Data.DataColumn("t08_id_testata_ordine_for", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_testata_ordine_for)
            Me.columnt08_cod_testata_ordine_for = New Global.System.Data.DataColumn("t08_cod_testata_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_cod_testata_ordine_for)
            Me.columnt08_descrizione = New Global.System.Data.DataColumn("t08_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_descrizione)
            Me.columnt08_id_fornitore_t11 = New Global.System.Data.DataColumn("t08_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_fornitore_t11)
            Me.columnt08_dt_ordine = New Global.System.Data.DataColumn("t08_dt_ordine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_ordine)
            Me.columnt08_dt_consegna = New Global.System.Data.DataColumn("t08_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_consegna)
            Me.columnt08_tipo_ordine = New Global.System.Data.DataColumn("t08_tipo_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_tipo_ordine)
            Me.columnt08_id_causale_ordine_for_t15 = New Global.System.Data.DataColumn("t08_id_causale_ordine_for_t15", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_causale_ordine_for_t15)
            Me.columnt08_dt_creazione = New Global.System.Data.DataColumn("t08_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_creazione)
            Me.columnt08_dt_modifica = New Global.System.Data.DataColumn("t08_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_modifica)
            Me.columnt08_dt_cancellazione = New Global.System.Data.DataColumn("t08_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt08_id_testata_ordine_for}, true))
            Me.columnt08_id_testata_ordine_for.AutoIncrement = true
            Me.columnt08_id_testata_ordine_for.AllowDBNull = false
            Me.columnt08_id_testata_ordine_for.ReadOnly = true
            Me.columnt08_id_testata_ordine_for.Unique = true
            Me.columnt08_cod_testata_ordine_for.MaxLength = 20
            Me.columnt08_descrizione.MaxLength = 255
            Me.columnt08_tipo_ordine.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt08_testate_ordini_forRow() As t08_testate_ordini_forRow
            Return CType(Me.NewRow,t08_testate_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t08_testate_ordini_forRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t08_testate_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t08_testate_ordini_forRowChangedEvent) Is Nothing) Then
                RaiseEvent t08_testate_ordini_forRowChanged(Me, New t08_testate_ordini_forRowChangeEvent(CType(e.Row,t08_testate_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t08_testate_ordini_forRowChangingEvent) Is Nothing) Then
                RaiseEvent t08_testate_ordini_forRowChanging(Me, New t08_testate_ordini_forRowChangeEvent(CType(e.Row,t08_testate_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t08_testate_ordini_forRowDeletedEvent) Is Nothing) Then
                RaiseEvent t08_testate_ordini_forRowDeleted(Me, New t08_testate_ordini_forRowChangeEvent(CType(e.Row,t08_testate_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t08_testate_ordini_forRowDeletingEvent) Is Nothing) Then
                RaiseEvent t08_testate_ordini_forRowDeleting(Me, New t08_testate_ordini_forRowChangeEvent(CType(e.Row,t08_testate_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet08_testate_ordini_forRow(ByVal row As t08_testate_ordini_forRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t08_testate_ordini_forDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t09_righe_ordine_forDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt09_id_riga_ordine_for As Global.System.Data.DataColumn
        
        Private columnt09_cod_riga_ordine_for As Global.System.Data.DataColumn
        
        Private columnt09_id_testata_ordine_for_t08 As Global.System.Data.DataColumn
        
        Private columnt09_posizione As Global.System.Data.DataColumn
        
        Private columnt09_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt09_qt_ordinata As Global.System.Data.DataColumn
        
        Private columnt09_qt_evasa As Global.System.Data.DataColumn
        
        Private columnt09_prezzo_uni As Global.System.Data.DataColumn
        
        Private columnt09_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt09_id_stato_riga_ordine_t10 As Global.System.Data.DataColumn
        
        Private columnt09_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt09_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt09_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t09_righe_ordine_for"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_id_riga_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_id_riga_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_cod_riga_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_cod_riga_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_id_testata_ordine_for_t08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_id_testata_ordine_for_t08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_qt_ordinataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_qt_ordinata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_qt_evasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_qt_evasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_prezzo_uniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_prezzo_uni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_id_stato_riga_ordine_t10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_id_stato_riga_ordine_t10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t09_righe_ordine_forRow
            Get
                Return CType(Me.Rows(index),t09_righe_ordine_forRow)
            End Get
        End Property
        
        Public Event t09_righe_ordine_forRowChanging As t09_righe_ordine_forRowChangeEventHandler
        
        Public Event t09_righe_ordine_forRowChanged As t09_righe_ordine_forRowChangeEventHandler
        
        Public Event t09_righe_ordine_forRowDeleting As t09_righe_ordine_forRowChangeEventHandler
        
        Public Event t09_righe_ordine_forRowDeleted As t09_righe_ordine_forRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt09_righe_ordine_forRow(ByVal row As t09_righe_ordine_forRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt09_righe_ordine_forRow(ByVal t09_cod_riga_ordine_for As String, ByVal parentt08_testate_ordini_forRowByFK_t09_righe_ordine_for_t08_testate_ordini_for As t08_testate_ordini_forRow, ByVal t09_posizione As Integer, ByVal parentt20_articoliRowByFK_t09_righe_ordine_for_t20_articoli As t20_articoliRow, ByVal t09_qt_ordinata As Decimal, ByVal t09_qt_evasa As Decimal, ByVal t09_prezzo_uni As Decimal, ByVal t09_dt_consegna As Date, ByVal t09_id_stato_riga_ordine_t10 As String, ByVal t09_dt_creazione As Date, ByVal t09_dt_modifica As Date, ByVal t09_dt_cancellazione As Date) As t09_righe_ordine_forRow
            Dim rowt09_righe_ordine_forRow As t09_righe_ordine_forRow = CType(Me.NewRow,t09_righe_ordine_forRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t09_cod_riga_ordine_for, Nothing, t09_posizione, Nothing, t09_qt_ordinata, t09_qt_evasa, t09_prezzo_uni, t09_dt_consegna, t09_id_stato_riga_ordine_t10, t09_dt_creazione, t09_dt_modifica, t09_dt_cancellazione}
            If (Not (parentt08_testate_ordini_forRowByFK_t09_righe_ordine_for_t08_testate_ordini_for) Is Nothing) Then
                columnValuesArray(2) = parentt08_testate_ordini_forRowByFK_t09_righe_ordine_for_t08_testate_ordini_for(0)
            End If
            If (Not (parentt20_articoliRowByFK_t09_righe_ordine_for_t20_articoli) Is Nothing) Then
                columnValuesArray(4) = parentt20_articoliRowByFK_t09_righe_ordine_for_t20_articoli(0)
            End If
            rowt09_righe_ordine_forRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt09_righe_ordine_forRow)
            Return rowt09_righe_ordine_forRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt09_id_riga_ordine_for(ByVal t09_id_riga_ordine_for As Integer) As t09_righe_ordine_forRow
            Return CType(Me.Rows.Find(New Object() {t09_id_riga_ordine_for}),t09_righe_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t09_righe_ordine_forDataTable = CType(MyBase.Clone,t09_righe_ordine_forDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t09_righe_ordine_forDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt09_id_riga_ordine_for = MyBase.Columns("t09_id_riga_ordine_for")
            Me.columnt09_cod_riga_ordine_for = MyBase.Columns("t09_cod_riga_ordine_for")
            Me.columnt09_id_testata_ordine_for_t08 = MyBase.Columns("t09_id_testata_ordine_for_t08")
            Me.columnt09_posizione = MyBase.Columns("t09_posizione")
            Me.columnt09_id_articolo_t20 = MyBase.Columns("t09_id_articolo_t20")
            Me.columnt09_qt_ordinata = MyBase.Columns("t09_qt_ordinata")
            Me.columnt09_qt_evasa = MyBase.Columns("t09_qt_evasa")
            Me.columnt09_prezzo_uni = MyBase.Columns("t09_prezzo_uni")
            Me.columnt09_dt_consegna = MyBase.Columns("t09_dt_consegna")
            Me.columnt09_id_stato_riga_ordine_t10 = MyBase.Columns("t09_id_stato_riga_ordine_t10")
            Me.columnt09_dt_creazione = MyBase.Columns("t09_dt_creazione")
            Me.columnt09_dt_modifica = MyBase.Columns("t09_dt_modifica")
            Me.columnt09_dt_cancellazione = MyBase.Columns("t09_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt09_id_riga_ordine_for = New Global.System.Data.DataColumn("t09_id_riga_ordine_for", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_id_riga_ordine_for)
            Me.columnt09_cod_riga_ordine_for = New Global.System.Data.DataColumn("t09_cod_riga_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_cod_riga_ordine_for)
            Me.columnt09_id_testata_ordine_for_t08 = New Global.System.Data.DataColumn("t09_id_testata_ordine_for_t08", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_id_testata_ordine_for_t08)
            Me.columnt09_posizione = New Global.System.Data.DataColumn("t09_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_posizione)
            Me.columnt09_id_articolo_t20 = New Global.System.Data.DataColumn("t09_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_id_articolo_t20)
            Me.columnt09_qt_ordinata = New Global.System.Data.DataColumn("t09_qt_ordinata", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_qt_ordinata)
            Me.columnt09_qt_evasa = New Global.System.Data.DataColumn("t09_qt_evasa", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_qt_evasa)
            Me.columnt09_prezzo_uni = New Global.System.Data.DataColumn("t09_prezzo_uni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_prezzo_uni)
            Me.columnt09_dt_consegna = New Global.System.Data.DataColumn("t09_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_dt_consegna)
            Me.columnt09_id_stato_riga_ordine_t10 = New Global.System.Data.DataColumn("t09_id_stato_riga_ordine_t10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_id_stato_riga_ordine_t10)
            Me.columnt09_dt_creazione = New Global.System.Data.DataColumn("t09_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_dt_creazione)
            Me.columnt09_dt_modifica = New Global.System.Data.DataColumn("t09_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_dt_modifica)
            Me.columnt09_dt_cancellazione = New Global.System.Data.DataColumn("t09_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt09_id_riga_ordine_for}, true))
            Me.columnt09_id_riga_ordine_for.AutoIncrement = true
            Me.columnt09_id_riga_ordine_for.AllowDBNull = false
            Me.columnt09_id_riga_ordine_for.ReadOnly = true
            Me.columnt09_id_riga_ordine_for.Unique = true
            Me.columnt09_cod_riga_ordine_for.MaxLength = 20
            Me.columnt09_id_stato_riga_ordine_t10.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt09_righe_ordine_forRow() As t09_righe_ordine_forRow
            Return CType(Me.NewRow,t09_righe_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t09_righe_ordine_forRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t09_righe_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t09_righe_ordine_forRowChangedEvent) Is Nothing) Then
                RaiseEvent t09_righe_ordine_forRowChanged(Me, New t09_righe_ordine_forRowChangeEvent(CType(e.Row,t09_righe_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t09_righe_ordine_forRowChangingEvent) Is Nothing) Then
                RaiseEvent t09_righe_ordine_forRowChanging(Me, New t09_righe_ordine_forRowChangeEvent(CType(e.Row,t09_righe_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t09_righe_ordine_forRowDeletedEvent) Is Nothing) Then
                RaiseEvent t09_righe_ordine_forRowDeleted(Me, New t09_righe_ordine_forRowChangeEvent(CType(e.Row,t09_righe_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t09_righe_ordine_forRowDeletingEvent) Is Nothing) Then
                RaiseEvent t09_righe_ordine_forRowDeleting(Me, New t09_righe_ordine_forRowChangeEvent(CType(e.Row,t09_righe_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet09_righe_ordine_forRow(ByVal row As t09_righe_ordine_forRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t09_righe_ordine_forDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t10_stati_riga_ordine_forDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt10_id_stato_riga_ordine_for As Global.System.Data.DataColumn
        
        Private columnt10_descrizione As Global.System.Data.DataColumn
        
        Private columnt10_posizione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t10_stati_riga_ordine_for"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t10_id_stato_riga_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt10_id_stato_riga_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t10_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt10_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t10_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt10_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t10_stati_riga_ordine_forRow
            Get
                Return CType(Me.Rows(index),t10_stati_riga_ordine_forRow)
            End Get
        End Property
        
        Public Event t10_stati_riga_ordine_forRowChanging As t10_stati_riga_ordine_forRowChangeEventHandler
        
        Public Event t10_stati_riga_ordine_forRowChanged As t10_stati_riga_ordine_forRowChangeEventHandler
        
        Public Event t10_stati_riga_ordine_forRowDeleting As t10_stati_riga_ordine_forRowChangeEventHandler
        
        Public Event t10_stati_riga_ordine_forRowDeleted As t10_stati_riga_ordine_forRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt10_stati_riga_ordine_forRow(ByVal row As t10_stati_riga_ordine_forRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt10_stati_riga_ordine_forRow(ByVal t10_id_stato_riga_ordine_for As String, ByVal t10_descrizione As String, ByVal t10_posizione As Byte) As t10_stati_riga_ordine_forRow
            Dim rowt10_stati_riga_ordine_forRow As t10_stati_riga_ordine_forRow = CType(Me.NewRow,t10_stati_riga_ordine_forRow)
            Dim columnValuesArray() As Object = New Object() {t10_id_stato_riga_ordine_for, t10_descrizione, t10_posizione}
            rowt10_stati_riga_ordine_forRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt10_stati_riga_ordine_forRow)
            Return rowt10_stati_riga_ordine_forRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt10_id_stato_riga_ordine_for(ByVal t10_id_stato_riga_ordine_for As String) As t10_stati_riga_ordine_forRow
            Return CType(Me.Rows.Find(New Object() {t10_id_stato_riga_ordine_for}),t10_stati_riga_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t10_stati_riga_ordine_forDataTable = CType(MyBase.Clone,t10_stati_riga_ordine_forDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t10_stati_riga_ordine_forDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt10_id_stato_riga_ordine_for = MyBase.Columns("t10_id_stato_riga_ordine_for")
            Me.columnt10_descrizione = MyBase.Columns("t10_descrizione")
            Me.columnt10_posizione = MyBase.Columns("t10_posizione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt10_id_stato_riga_ordine_for = New Global.System.Data.DataColumn("t10_id_stato_riga_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt10_id_stato_riga_ordine_for)
            Me.columnt10_descrizione = New Global.System.Data.DataColumn("t10_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt10_descrizione)
            Me.columnt10_posizione = New Global.System.Data.DataColumn("t10_posizione", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt10_posizione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt10_id_stato_riga_ordine_for}, true))
            Me.columnt10_id_stato_riga_ordine_for.AllowDBNull = false
            Me.columnt10_id_stato_riga_ordine_for.Unique = true
            Me.columnt10_id_stato_riga_ordine_for.MaxLength = 1
            Me.columnt10_descrizione.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt10_stati_riga_ordine_forRow() As t10_stati_riga_ordine_forRow
            Return CType(Me.NewRow,t10_stati_riga_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t10_stati_riga_ordine_forRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t10_stati_riga_ordine_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t10_stati_riga_ordine_forRowChangedEvent) Is Nothing) Then
                RaiseEvent t10_stati_riga_ordine_forRowChanged(Me, New t10_stati_riga_ordine_forRowChangeEvent(CType(e.Row,t10_stati_riga_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t10_stati_riga_ordine_forRowChangingEvent) Is Nothing) Then
                RaiseEvent t10_stati_riga_ordine_forRowChanging(Me, New t10_stati_riga_ordine_forRowChangeEvent(CType(e.Row,t10_stati_riga_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t10_stati_riga_ordine_forRowDeletedEvent) Is Nothing) Then
                RaiseEvent t10_stati_riga_ordine_forRowDeleted(Me, New t10_stati_riga_ordine_forRowChangeEvent(CType(e.Row,t10_stati_riga_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t10_stati_riga_ordine_forRowDeletingEvent) Is Nothing) Then
                RaiseEvent t10_stati_riga_ordine_forRowDeleting(Me, New t10_stati_riga_ordine_forRowChangeEvent(CType(e.Row,t10_stati_riga_ordine_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet10_stati_riga_ordine_forRow(ByVal row As t10_stati_riga_ordine_forRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t10_stati_riga_ordine_forDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t11_fornitoriDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt11_id_fornitore As Global.System.Data.DataColumn
        
        Private columnt11_cod_fornitore As Global.System.Data.DataColumn
        
        Private columnt11_descrizione As Global.System.Data.DataColumn
        
        Private columnt11_telefono As Global.System.Data.DataColumn
        
        Private columnt11_note As Global.System.Data.DataColumn
        
        Private columnt11_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt11_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt11_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t11_fornitori"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_id_fornitoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_id_fornitore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_cod_fornitoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_cod_fornitore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t11_fornitoriRow
            Get
                Return CType(Me.Rows(index),t11_fornitoriRow)
            End Get
        End Property
        
        Public Event t11_fornitoriRowChanging As t11_fornitoriRowChangeEventHandler
        
        Public Event t11_fornitoriRowChanged As t11_fornitoriRowChangeEventHandler
        
        Public Event t11_fornitoriRowDeleting As t11_fornitoriRowChangeEventHandler
        
        Public Event t11_fornitoriRowDeleted As t11_fornitoriRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt11_fornitoriRow(ByVal row As t11_fornitoriRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt11_fornitoriRow(ByVal t11_cod_fornitore As String, ByVal t11_descrizione As String, ByVal t11_telefono As String, ByVal t11_note As String, ByVal t11_dt_creazione As Date, ByVal t11_dt_modifica As Date, ByVal t11_dt_cancellazione As Date) As t11_fornitoriRow
            Dim rowt11_fornitoriRow As t11_fornitoriRow = CType(Me.NewRow,t11_fornitoriRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t11_cod_fornitore, t11_descrizione, t11_telefono, t11_note, t11_dt_creazione, t11_dt_modifica, t11_dt_cancellazione}
            rowt11_fornitoriRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt11_fornitoriRow)
            Return rowt11_fornitoriRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt11_id_fornitore(ByVal t11_id_fornitore As Integer) As t11_fornitoriRow
            Return CType(Me.Rows.Find(New Object() {t11_id_fornitore}),t11_fornitoriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t11_fornitoriDataTable = CType(MyBase.Clone,t11_fornitoriDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t11_fornitoriDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt11_id_fornitore = MyBase.Columns("t11_id_fornitore")
            Me.columnt11_cod_fornitore = MyBase.Columns("t11_cod_fornitore")
            Me.columnt11_descrizione = MyBase.Columns("t11_descrizione")
            Me.columnt11_telefono = MyBase.Columns("t11_telefono")
            Me.columnt11_note = MyBase.Columns("t11_note")
            Me.columnt11_dt_creazione = MyBase.Columns("t11_dt_creazione")
            Me.columnt11_dt_modifica = MyBase.Columns("t11_dt_modifica")
            Me.columnt11_dt_cancellazione = MyBase.Columns("t11_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt11_id_fornitore = New Global.System.Data.DataColumn("t11_id_fornitore", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_id_fornitore)
            Me.columnt11_cod_fornitore = New Global.System.Data.DataColumn("t11_cod_fornitore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_cod_fornitore)
            Me.columnt11_descrizione = New Global.System.Data.DataColumn("t11_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_descrizione)
            Me.columnt11_telefono = New Global.System.Data.DataColumn("t11_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_telefono)
            Me.columnt11_note = New Global.System.Data.DataColumn("t11_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_note)
            Me.columnt11_dt_creazione = New Global.System.Data.DataColumn("t11_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_creazione)
            Me.columnt11_dt_modifica = New Global.System.Data.DataColumn("t11_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_modifica)
            Me.columnt11_dt_cancellazione = New Global.System.Data.DataColumn("t11_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt11_id_fornitore}, true))
            Me.columnt11_id_fornitore.AutoIncrement = true
            Me.columnt11_id_fornitore.AllowDBNull = false
            Me.columnt11_id_fornitore.ReadOnly = true
            Me.columnt11_id_fornitore.Unique = true
            Me.columnt11_cod_fornitore.MaxLength = 20
            Me.columnt11_descrizione.MaxLength = 255
            Me.columnt11_telefono.MaxLength = 20
            Me.columnt11_note.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt11_fornitoriRow() As t11_fornitoriRow
            Return CType(Me.NewRow,t11_fornitoriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t11_fornitoriRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t11_fornitoriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t11_fornitoriRowChangedEvent) Is Nothing) Then
                RaiseEvent t11_fornitoriRowChanged(Me, New t11_fornitoriRowChangeEvent(CType(e.Row,t11_fornitoriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t11_fornitoriRowChangingEvent) Is Nothing) Then
                RaiseEvent t11_fornitoriRowChanging(Me, New t11_fornitoriRowChangeEvent(CType(e.Row,t11_fornitoriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t11_fornitoriRowDeletedEvent) Is Nothing) Then
                RaiseEvent t11_fornitoriRowDeleted(Me, New t11_fornitoriRowChangeEvent(CType(e.Row,t11_fornitoriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t11_fornitoriRowDeletingEvent) Is Nothing) Then
                RaiseEvent t11_fornitoriRowDeleting(Me, New t11_fornitoriRowChangeEvent(CType(e.Row,t11_fornitoriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet11_fornitoriRow(ByVal row As t11_fornitoriRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t11_fornitoriDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t14_clientiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt14_id_cliente As Global.System.Data.DataColumn
        
        Private columnt14_cod_cliente As Global.System.Data.DataColumn
        
        Private columnt14_descrizione As Global.System.Data.DataColumn
        
        Private columnt14_telefono As Global.System.Data.DataColumn
        
        Private columnt14_note As Global.System.Data.DataColumn
        
        Private columnt14_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt14_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt14_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t14_clienti"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_id_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_id_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_cod_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_cod_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t14_clientiRow
            Get
                Return CType(Me.Rows(index),t14_clientiRow)
            End Get
        End Property
        
        Public Event t14_clientiRowChanging As t14_clientiRowChangeEventHandler
        
        Public Event t14_clientiRowChanged As t14_clientiRowChangeEventHandler
        
        Public Event t14_clientiRowDeleting As t14_clientiRowChangeEventHandler
        
        Public Event t14_clientiRowDeleted As t14_clientiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt14_clientiRow(ByVal row As t14_clientiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt14_clientiRow(ByVal t14_cod_cliente As String, ByVal t14_descrizione As String, ByVal t14_telefono As String, ByVal t14_note As String, ByVal t14_dt_creazione As Date, ByVal t14_dt_modifica As Date, ByVal t14_dt_cancellazione As Date) As t14_clientiRow
            Dim rowt14_clientiRow As t14_clientiRow = CType(Me.NewRow,t14_clientiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t14_cod_cliente, t14_descrizione, t14_telefono, t14_note, t14_dt_creazione, t14_dt_modifica, t14_dt_cancellazione}
            rowt14_clientiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt14_clientiRow)
            Return rowt14_clientiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt14_id_cliente(ByVal t14_id_cliente As Integer) As t14_clientiRow
            Return CType(Me.Rows.Find(New Object() {t14_id_cliente}),t14_clientiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t14_clientiDataTable = CType(MyBase.Clone,t14_clientiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t14_clientiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt14_id_cliente = MyBase.Columns("t14_id_cliente")
            Me.columnt14_cod_cliente = MyBase.Columns("t14_cod_cliente")
            Me.columnt14_descrizione = MyBase.Columns("t14_descrizione")
            Me.columnt14_telefono = MyBase.Columns("t14_telefono")
            Me.columnt14_note = MyBase.Columns("t14_note")
            Me.columnt14_dt_creazione = MyBase.Columns("t14_dt_creazione")
            Me.columnt14_dt_modifica = MyBase.Columns("t14_dt_modifica")
            Me.columnt14_dt_cancellazione = MyBase.Columns("t14_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt14_id_cliente = New Global.System.Data.DataColumn("t14_id_cliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_id_cliente)
            Me.columnt14_cod_cliente = New Global.System.Data.DataColumn("t14_cod_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_cod_cliente)
            Me.columnt14_descrizione = New Global.System.Data.DataColumn("t14_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_descrizione)
            Me.columnt14_telefono = New Global.System.Data.DataColumn("t14_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_telefono)
            Me.columnt14_note = New Global.System.Data.DataColumn("t14_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_note)
            Me.columnt14_dt_creazione = New Global.System.Data.DataColumn("t14_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_creazione)
            Me.columnt14_dt_modifica = New Global.System.Data.DataColumn("t14_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_modifica)
            Me.columnt14_dt_cancellazione = New Global.System.Data.DataColumn("t14_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt14_id_cliente}, true))
            Me.columnt14_id_cliente.AutoIncrement = true
            Me.columnt14_id_cliente.AllowDBNull = false
            Me.columnt14_id_cliente.ReadOnly = true
            Me.columnt14_id_cliente.Unique = true
            Me.columnt14_cod_cliente.MaxLength = 20
            Me.columnt14_descrizione.MaxLength = 255
            Me.columnt14_telefono.MaxLength = 20
            Me.columnt14_note.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt14_clientiRow() As t14_clientiRow
            Return CType(Me.NewRow,t14_clientiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t14_clientiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t14_clientiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t14_clientiRowChangedEvent) Is Nothing) Then
                RaiseEvent t14_clientiRowChanged(Me, New t14_clientiRowChangeEvent(CType(e.Row,t14_clientiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t14_clientiRowChangingEvent) Is Nothing) Then
                RaiseEvent t14_clientiRowChanging(Me, New t14_clientiRowChangeEvent(CType(e.Row,t14_clientiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t14_clientiRowDeletedEvent) Is Nothing) Then
                RaiseEvent t14_clientiRowDeleted(Me, New t14_clientiRowChangeEvent(CType(e.Row,t14_clientiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t14_clientiRowDeletingEvent) Is Nothing) Then
                RaiseEvent t14_clientiRowDeleting(Me, New t14_clientiRowChangeEvent(CType(e.Row,t14_clientiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet14_clientiRow(ByVal row As t14_clientiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t14_clientiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t15_causali_ordini_forDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt15_id_causale_ordine_for As Global.System.Data.DataColumn
        
        Private columnt15_cod_causale_ordine_for As Global.System.Data.DataColumn
        
        Private columnt15_descrizione As Global.System.Data.DataColumn
        
        Private columnt15_tipo_azione As Global.System.Data.DataColumn
        
        Private columnt15_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt15_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt15_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t15_causali_ordini_for"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_id_causale_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_id_causale_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_cod_causale_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_cod_causale_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_tipo_azioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_tipo_azione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t15_causali_ordini_forRow
            Get
                Return CType(Me.Rows(index),t15_causali_ordini_forRow)
            End Get
        End Property
        
        Public Event t15_causali_ordini_forRowChanging As t15_causali_ordini_forRowChangeEventHandler
        
        Public Event t15_causali_ordini_forRowChanged As t15_causali_ordini_forRowChangeEventHandler
        
        Public Event t15_causali_ordini_forRowDeleting As t15_causali_ordini_forRowChangeEventHandler
        
        Public Event t15_causali_ordini_forRowDeleted As t15_causali_ordini_forRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt15_causali_ordini_forRow(ByVal row As t15_causali_ordini_forRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt15_causali_ordini_forRow(ByVal t15_cod_causale_ordine_for As String, ByVal t15_descrizione As String, ByVal t15_tipo_azione As String, ByVal t15_dt_creazione As Date, ByVal t15_dt_modifica As Date, ByVal t15_dt_cancellazione As Date) As t15_causali_ordini_forRow
            Dim rowt15_causali_ordini_forRow As t15_causali_ordini_forRow = CType(Me.NewRow,t15_causali_ordini_forRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t15_cod_causale_ordine_for, t15_descrizione, t15_tipo_azione, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione}
            rowt15_causali_ordini_forRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt15_causali_ordini_forRow)
            Return rowt15_causali_ordini_forRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt15_id_causale_ordine_for(ByVal t15_id_causale_ordine_for As Integer) As t15_causali_ordini_forRow
            Return CType(Me.Rows.Find(New Object() {t15_id_causale_ordine_for}),t15_causali_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t15_causali_ordini_forDataTable = CType(MyBase.Clone,t15_causali_ordini_forDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t15_causali_ordini_forDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt15_id_causale_ordine_for = MyBase.Columns("t15_id_causale_ordine_for")
            Me.columnt15_cod_causale_ordine_for = MyBase.Columns("t15_cod_causale_ordine_for")
            Me.columnt15_descrizione = MyBase.Columns("t15_descrizione")
            Me.columnt15_tipo_azione = MyBase.Columns("t15_tipo_azione")
            Me.columnt15_dt_creazione = MyBase.Columns("t15_dt_creazione")
            Me.columnt15_dt_modifica = MyBase.Columns("t15_dt_modifica")
            Me.columnt15_dt_cancellazione = MyBase.Columns("t15_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt15_id_causale_ordine_for = New Global.System.Data.DataColumn("t15_id_causale_ordine_for", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_id_causale_ordine_for)
            Me.columnt15_cod_causale_ordine_for = New Global.System.Data.DataColumn("t15_cod_causale_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_cod_causale_ordine_for)
            Me.columnt15_descrizione = New Global.System.Data.DataColumn("t15_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_descrizione)
            Me.columnt15_tipo_azione = New Global.System.Data.DataColumn("t15_tipo_azione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_tipo_azione)
            Me.columnt15_dt_creazione = New Global.System.Data.DataColumn("t15_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_creazione)
            Me.columnt15_dt_modifica = New Global.System.Data.DataColumn("t15_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_modifica)
            Me.columnt15_dt_cancellazione = New Global.System.Data.DataColumn("t15_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt15_id_causale_ordine_for}, true))
            Me.columnt15_id_causale_ordine_for.AutoIncrement = true
            Me.columnt15_id_causale_ordine_for.AllowDBNull = false
            Me.columnt15_id_causale_ordine_for.ReadOnly = true
            Me.columnt15_id_causale_ordine_for.Unique = true
            Me.columnt15_cod_causale_ordine_for.MaxLength = 20
            Me.columnt15_descrizione.MaxLength = 50
            Me.columnt15_tipo_azione.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt15_causali_ordini_forRow() As t15_causali_ordini_forRow
            Return CType(Me.NewRow,t15_causali_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t15_causali_ordini_forRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t15_causali_ordini_forRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t15_causali_ordini_forRowChangedEvent) Is Nothing) Then
                RaiseEvent t15_causali_ordini_forRowChanged(Me, New t15_causali_ordini_forRowChangeEvent(CType(e.Row,t15_causali_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t15_causali_ordini_forRowChangingEvent) Is Nothing) Then
                RaiseEvent t15_causali_ordini_forRowChanging(Me, New t15_causali_ordini_forRowChangeEvent(CType(e.Row,t15_causali_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t15_causali_ordini_forRowDeletedEvent) Is Nothing) Then
                RaiseEvent t15_causali_ordini_forRowDeleted(Me, New t15_causali_ordini_forRowChangeEvent(CType(e.Row,t15_causali_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t15_causali_ordini_forRowDeletingEvent) Is Nothing) Then
                RaiseEvent t15_causali_ordini_forRowDeleting(Me, New t15_causali_ordini_forRowChangeEvent(CType(e.Row,t15_causali_ordini_forRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet15_causali_ordini_forRow(ByVal row As t15_causali_ordini_forRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t15_causali_ordini_forDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t21_articoli_macchineDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt21_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt21_id_macchina_t05 As Global.System.Data.DataColumn
        
        Private columnt21_consumo As Global.System.Data.DataColumn
        
        Private columnt21_posizione As Global.System.Data.DataColumn
        
        Private columnt21_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt21_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt21_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t21_articoli_macchine"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_id_macchina_t05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_id_macchina_t05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_consumoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_consumo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t21_articoli_macchineRow
            Get
                Return CType(Me.Rows(index),t21_articoli_macchineRow)
            End Get
        End Property
        
        Public Event t21_articoli_macchineRowChanging As t21_articoli_macchineRowChangeEventHandler
        
        Public Event t21_articoli_macchineRowChanged As t21_articoli_macchineRowChangeEventHandler
        
        Public Event t21_articoli_macchineRowDeleting As t21_articoli_macchineRowChangeEventHandler
        
        Public Event t21_articoli_macchineRowDeleted As t21_articoli_macchineRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt21_articoli_macchineRow(ByVal row As t21_articoli_macchineRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt21_articoli_macchineRow(ByVal parentt20_articoliRowByFK_t21_articoli_macchine_t20_articoli As t20_articoliRow, ByVal parentt05_macchineRowByFK_t21_articoli_macchine_t05_macchine As t05_macchineRow, ByVal t21_consumo As Decimal, ByVal t21_posizione As Integer, ByVal t21_dt_creazione As Date, ByVal t21_dt_modifica As Date, ByVal t21_dt_cancellazione As Date) As t21_articoli_macchineRow
            Dim rowt21_articoli_macchineRow As t21_articoli_macchineRow = CType(Me.NewRow,t21_articoli_macchineRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, t21_consumo, t21_posizione, t21_dt_creazione, t21_dt_modifica, t21_dt_cancellazione}
            If (Not (parentt20_articoliRowByFK_t21_articoli_macchine_t20_articoli) Is Nothing) Then
                columnValuesArray(0) = parentt20_articoliRowByFK_t21_articoli_macchine_t20_articoli(0)
            End If
            If (Not (parentt05_macchineRowByFK_t21_articoli_macchine_t05_macchine) Is Nothing) Then
                columnValuesArray(1) = parentt05_macchineRowByFK_t21_articoli_macchine_t05_macchine(0)
            End If
            rowt21_articoli_macchineRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt21_articoli_macchineRow)
            Return rowt21_articoli_macchineRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt21_id_articolo_t20t21_id_macchina_t05(ByVal t21_id_articolo_t20 As Integer, ByVal t21_id_macchina_t05 As Integer) As t21_articoli_macchineRow
            Return CType(Me.Rows.Find(New Object() {t21_id_articolo_t20, t21_id_macchina_t05}),t21_articoli_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t21_articoli_macchineDataTable = CType(MyBase.Clone,t21_articoli_macchineDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t21_articoli_macchineDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt21_id_articolo_t20 = MyBase.Columns("t21_id_articolo_t20")
            Me.columnt21_id_macchina_t05 = MyBase.Columns("t21_id_macchina_t05")
            Me.columnt21_consumo = MyBase.Columns("t21_consumo")
            Me.columnt21_posizione = MyBase.Columns("t21_posizione")
            Me.columnt21_dt_creazione = MyBase.Columns("t21_dt_creazione")
            Me.columnt21_dt_modifica = MyBase.Columns("t21_dt_modifica")
            Me.columnt21_dt_cancellazione = MyBase.Columns("t21_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt21_id_articolo_t20 = New Global.System.Data.DataColumn("t21_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_id_articolo_t20)
            Me.columnt21_id_macchina_t05 = New Global.System.Data.DataColumn("t21_id_macchina_t05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_id_macchina_t05)
            Me.columnt21_consumo = New Global.System.Data.DataColumn("t21_consumo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_consumo)
            Me.columnt21_posizione = New Global.System.Data.DataColumn("t21_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_posizione)
            Me.columnt21_dt_creazione = New Global.System.Data.DataColumn("t21_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_dt_creazione)
            Me.columnt21_dt_modifica = New Global.System.Data.DataColumn("t21_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_dt_modifica)
            Me.columnt21_dt_cancellazione = New Global.System.Data.DataColumn("t21_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt21_id_articolo_t20, Me.columnt21_id_macchina_t05}, true))
            Me.columnt21_id_articolo_t20.AllowDBNull = false
            Me.columnt21_id_macchina_t05.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt21_articoli_macchineRow() As t21_articoli_macchineRow
            Return CType(Me.NewRow,t21_articoli_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t21_articoli_macchineRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t21_articoli_macchineRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t21_articoli_macchineRowChangedEvent) Is Nothing) Then
                RaiseEvent t21_articoli_macchineRowChanged(Me, New t21_articoli_macchineRowChangeEvent(CType(e.Row,t21_articoli_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t21_articoli_macchineRowChangingEvent) Is Nothing) Then
                RaiseEvent t21_articoli_macchineRowChanging(Me, New t21_articoli_macchineRowChangeEvent(CType(e.Row,t21_articoli_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t21_articoli_macchineRowDeletedEvent) Is Nothing) Then
                RaiseEvent t21_articoli_macchineRowDeleted(Me, New t21_articoli_macchineRowChangeEvent(CType(e.Row,t21_articoli_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t21_articoli_macchineRowDeletingEvent) Is Nothing) Then
                RaiseEvent t21_articoli_macchineRowDeleting(Me, New t21_articoli_macchineRowChangeEvent(CType(e.Row,t21_articoli_macchineRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet21_articoli_macchineRow(ByVal row As t21_articoli_macchineRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t21_articoli_macchineDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t22_articoli_articoliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt22_id_articolo_padre_t20 As Global.System.Data.DataColumn
        
        Private columnt22_consumo As Global.System.Data.DataColumn
        
        Private columnt22_posizione As Global.System.Data.DataColumn
        
        Private columnt22_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt22_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt22_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t22_articoli_articoli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_padre_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_padre_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_consumoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_consumo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t22_articoli_articoliRow
            Get
                Return CType(Me.Rows(index),t22_articoli_articoliRow)
            End Get
        End Property
        
        Public Event t22_articoli_articoliRowChanging As t22_articoli_articoliRowChangeEventHandler
        
        Public Event t22_articoli_articoliRowChanged As t22_articoli_articoliRowChangeEventHandler
        
        Public Event t22_articoli_articoliRowDeleting As t22_articoli_articoliRowChangeEventHandler
        
        Public Event t22_articoli_articoliRowDeleted As t22_articoli_articoliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt22_articoli_articoliRow(ByVal row As t22_articoli_articoliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt22_articoli_articoliRow(ByVal parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli As t20_articoliRow, ByVal parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli1 As t20_articoliRow, ByVal t22_consumo As Decimal, ByVal t22_posizione As Integer, ByVal t22_dt_creazione As Date, ByVal t22_dt_modifica As Date, ByVal t22_dt_cancellazione As Date) As t22_articoli_articoliRow
            Dim rowt22_articoli_articoliRow As t22_articoli_articoliRow = CType(Me.NewRow,t22_articoli_articoliRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, t22_consumo, t22_posizione, t22_dt_creazione, t22_dt_modifica, t22_dt_cancellazione}
            If (Not (parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli) Is Nothing) Then
                columnValuesArray(0) = parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli(0)
            End If
            If (Not (parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli1) Is Nothing) Then
                columnValuesArray(1) = parentt20_articoliRowByFK_t22_articoli_articoli_t20_articoli1(0)
            End If
            rowt22_articoli_articoliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt22_articoli_articoliRow)
            Return rowt22_articoli_articoliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t22_articoli_articoliDataTable = CType(MyBase.Clone,t22_articoli_articoliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t22_articoli_articoliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnt22_id_articolo_padre_t20 = MyBase.Columns("t22_id_articolo_padre_t20")
            Me.columnt22_consumo = MyBase.Columns("t22_consumo")
            Me.columnt22_posizione = MyBase.Columns("t22_posizione")
            Me.columnt22_dt_creazione = MyBase.Columns("t22_dt_creazione")
            Me.columnt22_dt_modifica = MyBase.Columns("t22_dt_modifica")
            Me.columnt22_dt_cancellazione = MyBase.Columns("t22_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnt22_id_articolo_padre_t20 = New Global.System.Data.DataColumn("t22_id_articolo_padre_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_padre_t20)
            Me.columnt22_consumo = New Global.System.Data.DataColumn("t22_consumo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_consumo)
            Me.columnt22_posizione = New Global.System.Data.DataColumn("t22_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_posizione)
            Me.columnt22_dt_creazione = New Global.System.Data.DataColumn("t22_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_dt_creazione)
            Me.columnt22_dt_modifica = New Global.System.Data.DataColumn("t22_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_dt_modifica)
            Me.columnt22_dt_cancellazione = New Global.System.Data.DataColumn("t22_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_dt_cancellazione)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt22_articoli_articoliRow() As t22_articoli_articoliRow
            Return CType(Me.NewRow,t22_articoli_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t22_articoli_articoliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t22_articoli_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t22_articoli_articoliRowChangedEvent) Is Nothing) Then
                RaiseEvent t22_articoli_articoliRowChanged(Me, New t22_articoli_articoliRowChangeEvent(CType(e.Row,t22_articoli_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t22_articoli_articoliRowChangingEvent) Is Nothing) Then
                RaiseEvent t22_articoli_articoliRowChanging(Me, New t22_articoli_articoliRowChangeEvent(CType(e.Row,t22_articoli_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t22_articoli_articoliRowDeletedEvent) Is Nothing) Then
                RaiseEvent t22_articoli_articoliRowDeleted(Me, New t22_articoli_articoliRowChangeEvent(CType(e.Row,t22_articoli_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t22_articoli_articoliRowDeletingEvent) Is Nothing) Then
                RaiseEvent t22_articoli_articoliRowDeleting(Me, New t22_articoli_articoliRowChangeEvent(CType(e.Row,t22_articoli_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet22_articoli_articoliRow(ByVal row As t22_articoli_articoliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t22_articoli_articoliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t25_matricoleDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt25_id_matricola As Global.System.Data.DataColumn
        
        Private columnt25_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt25_cod_matricola As Global.System.Data.DataColumn
        
        Private columnt25_descrizione As Global.System.Data.DataColumn
        
        Private columnt25_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt25_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t25_matricole"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_id_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_id_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_cod_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_cod_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t25_matricoleRow
            Get
                Return CType(Me.Rows(index),t25_matricoleRow)
            End Get
        End Property
        
        Public Event t25_matricoleRowChanging As t25_matricoleRowChangeEventHandler
        
        Public Event t25_matricoleRowChanged As t25_matricoleRowChangeEventHandler
        
        Public Event t25_matricoleRowDeleting As t25_matricoleRowChangeEventHandler
        
        Public Event t25_matricoleRowDeleted As t25_matricoleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt25_matricoleRow(ByVal row As t25_matricoleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt25_matricoleRow(ByVal parentt20_articoliRowByFK_t25_matricole_t20_articoli As t20_articoliRow, ByVal t25_cod_matricola As String, ByVal t25_descrizione As String, ByVal t25_dt_creazione As Date, ByVal t25_dt_cancellazione As Date) As t25_matricoleRow
            Dim rowt25_matricoleRow As t25_matricoleRow = CType(Me.NewRow,t25_matricoleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, t25_cod_matricola, t25_descrizione, t25_dt_creazione, t25_dt_cancellazione}
            If (Not (parentt20_articoliRowByFK_t25_matricole_t20_articoli) Is Nothing) Then
                columnValuesArray(1) = parentt20_articoliRowByFK_t25_matricole_t20_articoli(0)
            End If
            rowt25_matricoleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt25_matricoleRow)
            Return rowt25_matricoleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt25_cod_matricola(ByVal t25_cod_matricola As String) As t25_matricoleRow
            Return CType(Me.Rows.Find(New Object() {t25_cod_matricola}),t25_matricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t25_matricoleDataTable = CType(MyBase.Clone,t25_matricoleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t25_matricoleDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt25_id_matricola = MyBase.Columns("t25_id_matricola")
            Me.columnt25_id_articolo_t20 = MyBase.Columns("t25_id_articolo_t20")
            Me.columnt25_cod_matricola = MyBase.Columns("t25_cod_matricola")
            Me.columnt25_descrizione = MyBase.Columns("t25_descrizione")
            Me.columnt25_dt_creazione = MyBase.Columns("t25_dt_creazione")
            Me.columnt25_dt_cancellazione = MyBase.Columns("t25_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt25_id_matricola = New Global.System.Data.DataColumn("t25_id_matricola", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_id_matricola)
            Me.columnt25_id_articolo_t20 = New Global.System.Data.DataColumn("t25_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_id_articolo_t20)
            Me.columnt25_cod_matricola = New Global.System.Data.DataColumn("t25_cod_matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_cod_matricola)
            Me.columnt25_descrizione = New Global.System.Data.DataColumn("t25_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_descrizione)
            Me.columnt25_dt_creazione = New Global.System.Data.DataColumn("t25_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_dt_creazione)
            Me.columnt25_dt_cancellazione = New Global.System.Data.DataColumn("t25_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt25_cod_matricola}, true))
            Me.columnt25_id_matricola.AutoIncrement = true
            Me.columnt25_id_matricola.AllowDBNull = false
            Me.columnt25_id_matricola.ReadOnly = true
            Me.columnt25_cod_matricola.AllowDBNull = false
            Me.columnt25_cod_matricola.Unique = true
            Me.columnt25_cod_matricola.MaxLength = 50
            Me.columnt25_descrizione.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt25_matricoleRow() As t25_matricoleRow
            Return CType(Me.NewRow,t25_matricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t25_matricoleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t25_matricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t25_matricoleRowChangedEvent) Is Nothing) Then
                RaiseEvent t25_matricoleRowChanged(Me, New t25_matricoleRowChangeEvent(CType(e.Row,t25_matricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t25_matricoleRowChangingEvent) Is Nothing) Then
                RaiseEvent t25_matricoleRowChanging(Me, New t25_matricoleRowChangeEvent(CType(e.Row,t25_matricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t25_matricoleRowDeletedEvent) Is Nothing) Then
                RaiseEvent t25_matricoleRowDeleted(Me, New t25_matricoleRowChangeEvent(CType(e.Row,t25_matricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t25_matricoleRowDeletingEvent) Is Nothing) Then
                RaiseEvent t25_matricoleRowDeleting(Me, New t25_matricoleRowChangeEvent(CType(e.Row,t25_matricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet25_matricoleRow(ByVal row As t25_matricoleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t25_matricoleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t26_formule_prezziDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt26_id_formula As Global.System.Data.DataColumn
        
        Private columnt26_cod_formula As Global.System.Data.DataColumn
        
        Private columnt26_descrizione As Global.System.Data.DataColumn
        
        Private columnt26_formula_da As Global.System.Data.DataColumn
        
        Private columnt26_formula_a As Global.System.Data.DataColumn
        
        Private columnt26_prezzo_fisso As Global.System.Data.DataColumn
        
        Private columnt26_fattore As Global.System.Data.DataColumn
        
        Private columnt26_arrotondamento As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t26_formule_prezzi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_id_formulaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_id_formula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_cod_formulaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_cod_formula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_formula_daColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_formula_da
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_formula_aColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_formula_a
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_prezzo_fissoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_prezzo_fisso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_fattoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_fattore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t26_arrotondamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt26_arrotondamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t26_formule_prezziRow
            Get
                Return CType(Me.Rows(index),t26_formule_prezziRow)
            End Get
        End Property
        
        Public Event t26_formule_prezziRowChanging As t26_formule_prezziRowChangeEventHandler
        
        Public Event t26_formule_prezziRowChanged As t26_formule_prezziRowChangeEventHandler
        
        Public Event t26_formule_prezziRowDeleting As t26_formule_prezziRowChangeEventHandler
        
        Public Event t26_formule_prezziRowDeleted As t26_formule_prezziRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt26_formule_prezziRow(ByVal row As t26_formule_prezziRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt26_formule_prezziRow(ByVal t26_cod_formula As String, ByVal t26_descrizione As String, ByVal t26_formula_da As Decimal, ByVal t26_formula_a As Decimal, ByVal t26_prezzo_fisso As Decimal, ByVal t26_fattore As Decimal, ByVal t26_arrotondamento As Decimal) As t26_formule_prezziRow
            Dim rowt26_formule_prezziRow As t26_formule_prezziRow = CType(Me.NewRow,t26_formule_prezziRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t26_cod_formula, t26_descrizione, t26_formula_da, t26_formula_a, t26_prezzo_fisso, t26_fattore, t26_arrotondamento}
            rowt26_formule_prezziRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt26_formule_prezziRow)
            Return rowt26_formule_prezziRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt26_id_formula(ByVal t26_id_formula As Integer) As t26_formule_prezziRow
            Return CType(Me.Rows.Find(New Object() {t26_id_formula}),t26_formule_prezziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t26_formule_prezziDataTable = CType(MyBase.Clone,t26_formule_prezziDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t26_formule_prezziDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt26_id_formula = MyBase.Columns("t26_id_formula")
            Me.columnt26_cod_formula = MyBase.Columns("t26_cod_formula")
            Me.columnt26_descrizione = MyBase.Columns("t26_descrizione")
            Me.columnt26_formula_da = MyBase.Columns("t26_formula_da")
            Me.columnt26_formula_a = MyBase.Columns("t26_formula_a")
            Me.columnt26_prezzo_fisso = MyBase.Columns("t26_prezzo_fisso")
            Me.columnt26_fattore = MyBase.Columns("t26_fattore")
            Me.columnt26_arrotondamento = MyBase.Columns("t26_arrotondamento")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt26_id_formula = New Global.System.Data.DataColumn("t26_id_formula", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_id_formula)
            Me.columnt26_cod_formula = New Global.System.Data.DataColumn("t26_cod_formula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_cod_formula)
            Me.columnt26_descrizione = New Global.System.Data.DataColumn("t26_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_descrizione)
            Me.columnt26_formula_da = New Global.System.Data.DataColumn("t26_formula_da", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_formula_da)
            Me.columnt26_formula_a = New Global.System.Data.DataColumn("t26_formula_a", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_formula_a)
            Me.columnt26_prezzo_fisso = New Global.System.Data.DataColumn("t26_prezzo_fisso", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_prezzo_fisso)
            Me.columnt26_fattore = New Global.System.Data.DataColumn("t26_fattore", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_fattore)
            Me.columnt26_arrotondamento = New Global.System.Data.DataColumn("t26_arrotondamento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt26_arrotondamento)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt26_id_formula}, true))
            Me.columnt26_id_formula.AutoIncrement = true
            Me.columnt26_id_formula.AllowDBNull = false
            Me.columnt26_id_formula.ReadOnly = true
            Me.columnt26_id_formula.Unique = true
            Me.columnt26_cod_formula.MaxLength = 50
            Me.columnt26_descrizione.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt26_formule_prezziRow() As t26_formule_prezziRow
            Return CType(Me.NewRow,t26_formule_prezziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t26_formule_prezziRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t26_formule_prezziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t26_formule_prezziRowChangedEvent) Is Nothing) Then
                RaiseEvent t26_formule_prezziRowChanged(Me, New t26_formule_prezziRowChangeEvent(CType(e.Row,t26_formule_prezziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t26_formule_prezziRowChangingEvent) Is Nothing) Then
                RaiseEvent t26_formule_prezziRowChanging(Me, New t26_formule_prezziRowChangeEvent(CType(e.Row,t26_formule_prezziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t26_formule_prezziRowDeletedEvent) Is Nothing) Then
                RaiseEvent t26_formule_prezziRowDeleted(Me, New t26_formule_prezziRowChangeEvent(CType(e.Row,t26_formule_prezziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t26_formule_prezziRowDeletingEvent) Is Nothing) Then
                RaiseEvent t26_formule_prezziRowDeleting(Me, New t26_formule_prezziRowChangeEvent(CType(e.Row,t26_formule_prezziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet26_formule_prezziRow(ByVal row As t26_formule_prezziRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t26_formule_prezziDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t27_versioneDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnVersion_Major As Global.System.Data.DataColumn
        
        Private columnVersion_Minor As Global.System.Data.DataColumn
        
        Private columnVersion_Build As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t27_versione"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Version_MajorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion_Major
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Version_MinorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion_Minor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Version_BuildColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion_Build
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t27_versioneRow
            Get
                Return CType(Me.Rows(index),t27_versioneRow)
            End Get
        End Property
        
        Public Event t27_versioneRowChanging As t27_versioneRowChangeEventHandler
        
        Public Event t27_versioneRowChanged As t27_versioneRowChangeEventHandler
        
        Public Event t27_versioneRowDeleting As t27_versioneRowChangeEventHandler
        
        Public Event t27_versioneRowDeleted As t27_versioneRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt27_versioneRow(ByVal row As t27_versioneRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt27_versioneRow(ByVal Version_Major As Integer, ByVal Version_Minor As Integer, ByVal Version_Build As Integer) As t27_versioneRow
            Dim rowt27_versioneRow As t27_versioneRow = CType(Me.NewRow,t27_versioneRow)
            Dim columnValuesArray() As Object = New Object() {Version_Major, Version_Minor, Version_Build}
            rowt27_versioneRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt27_versioneRow)
            Return rowt27_versioneRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t27_versioneDataTable = CType(MyBase.Clone,t27_versioneDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t27_versioneDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnVersion_Major = MyBase.Columns("Version_Major")
            Me.columnVersion_Minor = MyBase.Columns("Version_Minor")
            Me.columnVersion_Build = MyBase.Columns("Version_Build")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnVersion_Major = New Global.System.Data.DataColumn("Version_Major", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion_Major)
            Me.columnVersion_Minor = New Global.System.Data.DataColumn("Version_Minor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion_Minor)
            Me.columnVersion_Build = New Global.System.Data.DataColumn("Version_Build", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion_Build)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt27_versioneRow() As t27_versioneRow
            Return CType(Me.NewRow,t27_versioneRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t27_versioneRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t27_versioneRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t27_versioneRowChangedEvent) Is Nothing) Then
                RaiseEvent t27_versioneRowChanged(Me, New t27_versioneRowChangeEvent(CType(e.Row,t27_versioneRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t27_versioneRowChangingEvent) Is Nothing) Then
                RaiseEvent t27_versioneRowChanging(Me, New t27_versioneRowChangeEvent(CType(e.Row,t27_versioneRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t27_versioneRowDeletedEvent) Is Nothing) Then
                RaiseEvent t27_versioneRowDeleted(Me, New t27_versioneRowChangeEvent(CType(e.Row,t27_versioneRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t27_versioneRowDeletingEvent) Is Nothing) Then
                RaiseEvent t27_versioneRowDeleting(Me, New t27_versioneRowChangeEvent(CType(e.Row,t27_versioneRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet27_versioneRow(ByVal row As t27_versioneRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t27_versioneDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class viewElencoIstanzeSempliceDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt06_id_istanza_macchina As Global.System.Data.DataColumn
        
        Private columnt06_descrizione As Global.System.Data.DataColumn
        
        Private columnt06_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt06_id_macchina_t05 As Global.System.Data.DataColumn
        
        Private columnt06_quantita As Global.System.Data.DataColumn
        
        Private columnt06_id_stato_istanza_t07 As Global.System.Data.DataColumn
        
        Private columnt06_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt06_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt06_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnANNO As Global.System.Data.DataColumn
        
        Private columnt07_id_stato_istanza As Global.System.Data.DataColumn
        
        Private columnt07_descrizione As Global.System.Data.DataColumn
        
        Private columnt07_posizione As Global.System.Data.DataColumn
        
        Private columnt07_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt07_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt07_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt05_id_macchina As Global.System.Data.DataColumn
        
        Private columnt05_cod_macchina As Global.System.Data.DataColumn
        
        Private columnt05_descrizione As Global.System.Data.DataColumn
        
        Private columnt05_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt05_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt05_dt_cancellazione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "viewElencoIstanzeSemplice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_istanza_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_istanza_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_macchina_t05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_macchina_t05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_quantitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_quantita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_stato_istanza_t07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_stato_istanza_t07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_id_stato_istanzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_id_stato_istanza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t07_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt07_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_id_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_id_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_cod_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_cod_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t05_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt05_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As viewElencoIstanzeSempliceRow
            Get
                Return CType(Me.Rows(index),viewElencoIstanzeSempliceRow)
            End Get
        End Property
        
        Public Event viewElencoIstanzeSempliceRowChanging As viewElencoIstanzeSempliceRowChangeEventHandler
        
        Public Event viewElencoIstanzeSempliceRowChanged As viewElencoIstanzeSempliceRowChangeEventHandler
        
        Public Event viewElencoIstanzeSempliceRowDeleting As viewElencoIstanzeSempliceRowChangeEventHandler
        
        Public Event viewElencoIstanzeSempliceRowDeleted As viewElencoIstanzeSempliceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddviewElencoIstanzeSempliceRow(ByVal row As viewElencoIstanzeSempliceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddviewElencoIstanzeSempliceRow( _
                    ByVal t06_id_istanza_macchina As Integer,  _
                    ByVal t06_descrizione As String,  _
                    ByVal t06_dt_consegna As Date,  _
                    ByVal t06_id_macchina_t05 As Integer,  _
                    ByVal t06_quantita As Short,  _
                    ByVal t06_id_stato_istanza_t07 As String,  _
                    ByVal t06_dt_creazione As Date,  _
                    ByVal t06_dt_modifica As Date,  _
                    ByVal t06_dt_cancellazione As Date,  _
                    ByVal ANNO As Integer,  _
                    ByVal t07_id_stato_istanza As String,  _
                    ByVal t07_descrizione As String,  _
                    ByVal t07_posizione As Byte,  _
                    ByVal t07_dt_creazione As Date,  _
                    ByVal t07_dt_modifica As Date,  _
                    ByVal t07_dt_cancellazione As Date,  _
                    ByVal t05_id_macchina As Integer,  _
                    ByVal t05_cod_macchina As String,  _
                    ByVal t05_descrizione As String,  _
                    ByVal t05_dt_creazione As Date,  _
                    ByVal t05_dt_modifica As Date,  _
                    ByVal t05_dt_cancellazione As Date) As viewElencoIstanzeSempliceRow
            Dim rowviewElencoIstanzeSempliceRow As viewElencoIstanzeSempliceRow = CType(Me.NewRow,viewElencoIstanzeSempliceRow)
            Dim columnValuesArray() As Object = New Object() {t06_id_istanza_macchina, t06_descrizione, t06_dt_consegna, t06_id_macchina_t05, t06_quantita, t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_modifica, t06_dt_cancellazione, ANNO, t07_id_stato_istanza, t07_descrizione, t07_posizione, t07_dt_creazione, t07_dt_modifica, t07_dt_cancellazione, t05_id_macchina, t05_cod_macchina, t05_descrizione, t05_dt_creazione, t05_dt_modifica, t05_dt_cancellazione}
            rowviewElencoIstanzeSempliceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowviewElencoIstanzeSempliceRow)
            Return rowviewElencoIstanzeSempliceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt06_id_istanza_macchinat07_id_stato_istanzat05_id_macchina(ByVal t06_id_istanza_macchina As Integer, ByVal t07_id_stato_istanza As String, ByVal t05_id_macchina As Integer) As viewElencoIstanzeSempliceRow
            Return CType(Me.Rows.Find(New Object() {t06_id_istanza_macchina, t07_id_stato_istanza, t05_id_macchina}),viewElencoIstanzeSempliceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As viewElencoIstanzeSempliceDataTable = CType(MyBase.Clone,viewElencoIstanzeSempliceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New viewElencoIstanzeSempliceDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt06_id_istanza_macchina = MyBase.Columns("t06_id_istanza_macchina")
            Me.columnt06_descrizione = MyBase.Columns("t06_descrizione")
            Me.columnt06_dt_consegna = MyBase.Columns("t06_dt_consegna")
            Me.columnt06_id_macchina_t05 = MyBase.Columns("t06_id_macchina_t05")
            Me.columnt06_quantita = MyBase.Columns("t06_quantita")
            Me.columnt06_id_stato_istanza_t07 = MyBase.Columns("t06_id_stato_istanza_t07")
            Me.columnt06_dt_creazione = MyBase.Columns("t06_dt_creazione")
            Me.columnt06_dt_modifica = MyBase.Columns("t06_dt_modifica")
            Me.columnt06_dt_cancellazione = MyBase.Columns("t06_dt_cancellazione")
            Me.columnANNO = MyBase.Columns("ANNO")
            Me.columnt07_id_stato_istanza = MyBase.Columns("t07_id_stato_istanza")
            Me.columnt07_descrizione = MyBase.Columns("t07_descrizione")
            Me.columnt07_posizione = MyBase.Columns("t07_posizione")
            Me.columnt07_dt_creazione = MyBase.Columns("t07_dt_creazione")
            Me.columnt07_dt_modifica = MyBase.Columns("t07_dt_modifica")
            Me.columnt07_dt_cancellazione = MyBase.Columns("t07_dt_cancellazione")
            Me.columnt05_id_macchina = MyBase.Columns("t05_id_macchina")
            Me.columnt05_cod_macchina = MyBase.Columns("t05_cod_macchina")
            Me.columnt05_descrizione = MyBase.Columns("t05_descrizione")
            Me.columnt05_dt_creazione = MyBase.Columns("t05_dt_creazione")
            Me.columnt05_dt_modifica = MyBase.Columns("t05_dt_modifica")
            Me.columnt05_dt_cancellazione = MyBase.Columns("t05_dt_cancellazione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt06_id_istanza_macchina = New Global.System.Data.DataColumn("t06_id_istanza_macchina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_istanza_macchina)
            Me.columnt06_descrizione = New Global.System.Data.DataColumn("t06_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_descrizione)
            Me.columnt06_dt_consegna = New Global.System.Data.DataColumn("t06_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_consegna)
            Me.columnt06_id_macchina_t05 = New Global.System.Data.DataColumn("t06_id_macchina_t05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_macchina_t05)
            Me.columnt06_quantita = New Global.System.Data.DataColumn("t06_quantita", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_quantita)
            Me.columnt06_id_stato_istanza_t07 = New Global.System.Data.DataColumn("t06_id_stato_istanza_t07", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_stato_istanza_t07)
            Me.columnt06_dt_creazione = New Global.System.Data.DataColumn("t06_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_creazione)
            Me.columnt06_dt_modifica = New Global.System.Data.DataColumn("t06_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_modifica)
            Me.columnt06_dt_cancellazione = New Global.System.Data.DataColumn("t06_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_dt_cancellazione)
            Me.columnANNO = New Global.System.Data.DataColumn("ANNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANNO)
            Me.columnt07_id_stato_istanza = New Global.System.Data.DataColumn("t07_id_stato_istanza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_id_stato_istanza)
            Me.columnt07_descrizione = New Global.System.Data.DataColumn("t07_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_descrizione)
            Me.columnt07_posizione = New Global.System.Data.DataColumn("t07_posizione", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_posizione)
            Me.columnt07_dt_creazione = New Global.System.Data.DataColumn("t07_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_creazione)
            Me.columnt07_dt_modifica = New Global.System.Data.DataColumn("t07_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_modifica)
            Me.columnt07_dt_cancellazione = New Global.System.Data.DataColumn("t07_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt07_dt_cancellazione)
            Me.columnt05_id_macchina = New Global.System.Data.DataColumn("t05_id_macchina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_id_macchina)
            Me.columnt05_cod_macchina = New Global.System.Data.DataColumn("t05_cod_macchina", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_cod_macchina)
            Me.columnt05_descrizione = New Global.System.Data.DataColumn("t05_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_descrizione)
            Me.columnt05_dt_creazione = New Global.System.Data.DataColumn("t05_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_creazione)
            Me.columnt05_dt_modifica = New Global.System.Data.DataColumn("t05_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_modifica)
            Me.columnt05_dt_cancellazione = New Global.System.Data.DataColumn("t05_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt05_dt_cancellazione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt06_id_istanza_macchina, Me.columnt07_id_stato_istanza, Me.columnt05_id_macchina}, true))
            Me.columnt06_id_istanza_macchina.AllowDBNull = false
            Me.columnt06_descrizione.MaxLength = 255
            Me.columnt06_id_stato_istanza_t07.AllowDBNull = false
            Me.columnt06_id_stato_istanza_t07.MaxLength = 1
            Me.columnANNO.ReadOnly = true
            Me.columnt07_id_stato_istanza.AllowDBNull = false
            Me.columnt07_id_stato_istanza.MaxLength = 1
            Me.columnt07_descrizione.MaxLength = 64
            Me.columnt05_id_macchina.AllowDBNull = false
            Me.columnt05_cod_macchina.MaxLength = 20
            Me.columnt05_descrizione.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewviewElencoIstanzeSempliceRow() As viewElencoIstanzeSempliceRow
            Return CType(Me.NewRow,viewElencoIstanzeSempliceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New viewElencoIstanzeSempliceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(viewElencoIstanzeSempliceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.viewElencoIstanzeSempliceRowChangedEvent) Is Nothing) Then
                RaiseEvent viewElencoIstanzeSempliceRowChanged(Me, New viewElencoIstanzeSempliceRowChangeEvent(CType(e.Row,viewElencoIstanzeSempliceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.viewElencoIstanzeSempliceRowChangingEvent) Is Nothing) Then
                RaiseEvent viewElencoIstanzeSempliceRowChanging(Me, New viewElencoIstanzeSempliceRowChangeEvent(CType(e.Row,viewElencoIstanzeSempliceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.viewElencoIstanzeSempliceRowDeletedEvent) Is Nothing) Then
                RaiseEvent viewElencoIstanzeSempliceRowDeleted(Me, New viewElencoIstanzeSempliceRowChangeEvent(CType(e.Row,viewElencoIstanzeSempliceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.viewElencoIstanzeSempliceRowDeletingEvent) Is Nothing) Then
                RaiseEvent viewElencoIstanzeSempliceRowDeleting(Me, New viewElencoIstanzeSempliceRowChangeEvent(CType(e.Row,viewElencoIstanzeSempliceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveviewElencoIstanzeSempliceRow(ByVal row As viewElencoIstanzeSempliceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "viewElencoIstanzeSempliceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class viewTestateOrdiniCliConStatoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt12_id_testata_ordine_cli As Global.System.Data.DataColumn
        
        Private columnt12_cod_testata_ordine_cli As Global.System.Data.DataColumn
        
        Private columnt12_descrizione As Global.System.Data.DataColumn
        
        Private columnt12_id_cliente_t14 As Global.System.Data.DataColumn
        
        Private columnt12_dt_ordine As Global.System.Data.DataColumn
        
        Private columnt12_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt12_tipo_ordine As Global.System.Data.DataColumn
        
        Private columnt12_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt12_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt12_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt14_id_cliente As Global.System.Data.DataColumn
        
        Private columnt14_cod_cliente As Global.System.Data.DataColumn
        
        Private columnt14_descrizione As Global.System.Data.DataColumn
        
        Private columnt14_telefono As Global.System.Data.DataColumn
        
        Private columnt14_note As Global.System.Data.DataColumn
        
        Private columnt14_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt14_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt14_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnANNO As Global.System.Data.DataColumn
        
        Private columnt12_stato_testata_ordine_cli As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "viewTestateOrdiniCliConStato"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_id_testata_ordine_cliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_id_testata_ordine_cli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_cod_testata_ordine_cliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_cod_testata_ordine_cli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_id_cliente_t14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_id_cliente_t14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_dt_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_dt_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_tipo_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_tipo_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_id_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_id_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_cod_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_cod_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t14_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt14_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t12_stato_testata_ordine_cliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt12_stato_testata_ordine_cli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As viewTestateOrdiniCliConStatoRow
            Get
                Return CType(Me.Rows(index),viewTestateOrdiniCliConStatoRow)
            End Get
        End Property
        
        Public Event viewTestateOrdiniCliConStatoRowChanging As viewTestateOrdiniCliConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniCliConStatoRowChanged As viewTestateOrdiniCliConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniCliConStatoRowDeleting As viewTestateOrdiniCliConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniCliConStatoRowDeleted As viewTestateOrdiniCliConStatoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddviewTestateOrdiniCliConStatoRow(ByVal row As viewTestateOrdiniCliConStatoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddviewTestateOrdiniCliConStatoRow( _
                    ByVal t12_id_testata_ordine_cli As Integer,  _
                    ByVal t12_cod_testata_ordine_cli As String,  _
                    ByVal t12_descrizione As String,  _
                    ByVal t12_id_cliente_t14 As Integer,  _
                    ByVal t12_dt_ordine As Date,  _
                    ByVal t12_dt_consegna As Date,  _
                    ByVal t12_tipo_ordine As String,  _
                    ByVal t12_dt_creazione As Date,  _
                    ByVal t12_dt_modifica As Date,  _
                    ByVal t12_dt_cancellazione As Date,  _
                    ByVal t14_id_cliente As Integer,  _
                    ByVal t14_cod_cliente As String,  _
                    ByVal t14_descrizione As String,  _
                    ByVal t14_telefono As String,  _
                    ByVal t14_note As String,  _
                    ByVal t14_dt_creazione As Date,  _
                    ByVal t14_dt_modifica As Date,  _
                    ByVal t14_dt_cancellazione As Date,  _
                    ByVal ANNO As Integer,  _
                    ByVal t12_stato_testata_ordine_cli As String) As viewTestateOrdiniCliConStatoRow
            Dim rowviewTestateOrdiniCliConStatoRow As viewTestateOrdiniCliConStatoRow = CType(Me.NewRow,viewTestateOrdiniCliConStatoRow)
            Dim columnValuesArray() As Object = New Object() {t12_id_testata_ordine_cli, t12_cod_testata_ordine_cli, t12_descrizione, t12_id_cliente_t14, t12_dt_ordine, t12_dt_consegna, t12_tipo_ordine, t12_dt_creazione, t12_dt_modifica, t12_dt_cancellazione, t14_id_cliente, t14_cod_cliente, t14_descrizione, t14_telefono, t14_note, t14_dt_creazione, t14_dt_modifica, t14_dt_cancellazione, ANNO, t12_stato_testata_ordine_cli}
            rowviewTestateOrdiniCliConStatoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowviewTestateOrdiniCliConStatoRow)
            Return rowviewTestateOrdiniCliConStatoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As viewTestateOrdiniCliConStatoDataTable = CType(MyBase.Clone,viewTestateOrdiniCliConStatoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New viewTestateOrdiniCliConStatoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt12_id_testata_ordine_cli = MyBase.Columns("t12_id_testata_ordine_cli")
            Me.columnt12_cod_testata_ordine_cli = MyBase.Columns("t12_cod_testata_ordine_cli")
            Me.columnt12_descrizione = MyBase.Columns("t12_descrizione")
            Me.columnt12_id_cliente_t14 = MyBase.Columns("t12_id_cliente_t14")
            Me.columnt12_dt_ordine = MyBase.Columns("t12_dt_ordine")
            Me.columnt12_dt_consegna = MyBase.Columns("t12_dt_consegna")
            Me.columnt12_tipo_ordine = MyBase.Columns("t12_tipo_ordine")
            Me.columnt12_dt_creazione = MyBase.Columns("t12_dt_creazione")
            Me.columnt12_dt_modifica = MyBase.Columns("t12_dt_modifica")
            Me.columnt12_dt_cancellazione = MyBase.Columns("t12_dt_cancellazione")
            Me.columnt14_id_cliente = MyBase.Columns("t14_id_cliente")
            Me.columnt14_cod_cliente = MyBase.Columns("t14_cod_cliente")
            Me.columnt14_descrizione = MyBase.Columns("t14_descrizione")
            Me.columnt14_telefono = MyBase.Columns("t14_telefono")
            Me.columnt14_note = MyBase.Columns("t14_note")
            Me.columnt14_dt_creazione = MyBase.Columns("t14_dt_creazione")
            Me.columnt14_dt_modifica = MyBase.Columns("t14_dt_modifica")
            Me.columnt14_dt_cancellazione = MyBase.Columns("t14_dt_cancellazione")
            Me.columnANNO = MyBase.Columns("ANNO")
            Me.columnt12_stato_testata_ordine_cli = MyBase.Columns("t12_stato_testata_ordine_cli")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt12_id_testata_ordine_cli = New Global.System.Data.DataColumn("t12_id_testata_ordine_cli", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_id_testata_ordine_cli)
            Me.columnt12_cod_testata_ordine_cli = New Global.System.Data.DataColumn("t12_cod_testata_ordine_cli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_cod_testata_ordine_cli)
            Me.columnt12_descrizione = New Global.System.Data.DataColumn("t12_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_descrizione)
            Me.columnt12_id_cliente_t14 = New Global.System.Data.DataColumn("t12_id_cliente_t14", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_id_cliente_t14)
            Me.columnt12_dt_ordine = New Global.System.Data.DataColumn("t12_dt_ordine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_dt_ordine)
            Me.columnt12_dt_consegna = New Global.System.Data.DataColumn("t12_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_dt_consegna)
            Me.columnt12_tipo_ordine = New Global.System.Data.DataColumn("t12_tipo_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_tipo_ordine)
            Me.columnt12_dt_creazione = New Global.System.Data.DataColumn("t12_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_dt_creazione)
            Me.columnt12_dt_modifica = New Global.System.Data.DataColumn("t12_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_dt_modifica)
            Me.columnt12_dt_cancellazione = New Global.System.Data.DataColumn("t12_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_dt_cancellazione)
            Me.columnt14_id_cliente = New Global.System.Data.DataColumn("t14_id_cliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_id_cliente)
            Me.columnt14_cod_cliente = New Global.System.Data.DataColumn("t14_cod_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_cod_cliente)
            Me.columnt14_descrizione = New Global.System.Data.DataColumn("t14_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_descrizione)
            Me.columnt14_telefono = New Global.System.Data.DataColumn("t14_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_telefono)
            Me.columnt14_note = New Global.System.Data.DataColumn("t14_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_note)
            Me.columnt14_dt_creazione = New Global.System.Data.DataColumn("t14_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_creazione)
            Me.columnt14_dt_modifica = New Global.System.Data.DataColumn("t14_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_modifica)
            Me.columnt14_dt_cancellazione = New Global.System.Data.DataColumn("t14_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt14_dt_cancellazione)
            Me.columnANNO = New Global.System.Data.DataColumn("ANNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANNO)
            Me.columnt12_stato_testata_ordine_cli = New Global.System.Data.DataColumn("t12_stato_testata_ordine_cli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt12_stato_testata_ordine_cli)
            Me.columnt12_id_testata_ordine_cli.AllowDBNull = false
            Me.columnt12_cod_testata_ordine_cli.MaxLength = 20
            Me.columnt12_descrizione.MaxLength = 255
            Me.columnt12_tipo_ordine.MaxLength = 20
            Me.columnt14_cod_cliente.MaxLength = 20
            Me.columnt14_descrizione.MaxLength = 255
            Me.columnt14_telefono.MaxLength = 20
            Me.columnt14_note.MaxLength = 2147483647
            Me.columnt12_stato_testata_ordine_cli.AllowDBNull = false
            Me.columnt12_stato_testata_ordine_cli.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewviewTestateOrdiniCliConStatoRow() As viewTestateOrdiniCliConStatoRow
            Return CType(Me.NewRow,viewTestateOrdiniCliConStatoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New viewTestateOrdiniCliConStatoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(viewTestateOrdiniCliConStatoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.viewTestateOrdiniCliConStatoRowChangedEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniCliConStatoRowChanged(Me, New viewTestateOrdiniCliConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniCliConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.viewTestateOrdiniCliConStatoRowChangingEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniCliConStatoRowChanging(Me, New viewTestateOrdiniCliConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniCliConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.viewTestateOrdiniCliConStatoRowDeletedEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniCliConStatoRowDeleted(Me, New viewTestateOrdiniCliConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniCliConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.viewTestateOrdiniCliConStatoRowDeletingEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniCliConStatoRowDeleting(Me, New viewTestateOrdiniCliConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniCliConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveviewTestateOrdiniCliConStatoRow(ByVal row As viewTestateOrdiniCliConStatoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "viewTestateOrdiniCliConStatoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class viewTestateOrdiniConStatoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt08_id_testata_ordine_for As Global.System.Data.DataColumn
        
        Private columnt08_cod_testata_ordine_for As Global.System.Data.DataColumn
        
        Private columnt08_descrizione As Global.System.Data.DataColumn
        
        Private columnt08_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt08_dt_ordine As Global.System.Data.DataColumn
        
        Private columnt08_dt_consegna As Global.System.Data.DataColumn
        
        Private columnt08_tipo_ordine As Global.System.Data.DataColumn
        
        Private columnt08_id_causale_ordine_for_t15 As Global.System.Data.DataColumn
        
        Private columnt08_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt08_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt08_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt15_id_causale_ordine_for As Global.System.Data.DataColumn
        
        Private columnt15_cod_causale_ordine_for As Global.System.Data.DataColumn
        
        Private columnt15_descrizione As Global.System.Data.DataColumn
        
        Private columnt15_tipo_azione As Global.System.Data.DataColumn
        
        Private columnt15_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt15_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt15_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt11_id_fornitore As Global.System.Data.DataColumn
        
        Private columnt11_cod_fornitore As Global.System.Data.DataColumn
        
        Private columnt11_descrizione As Global.System.Data.DataColumn
        
        Private columnt11_telefono As Global.System.Data.DataColumn
        
        Private columnt11_note As Global.System.Data.DataColumn
        
        Private columnt11_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt11_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt11_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnANNO As Global.System.Data.DataColumn
        
        Private columnt08_stato_testata_ordine_for As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "viewTestateOrdiniConStato"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_testata_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_testata_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_cod_testata_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_cod_testata_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_tipo_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_tipo_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_id_causale_ordine_for_t15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_id_causale_ordine_for_t15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_id_causale_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_id_causale_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_cod_causale_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_cod_causale_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_tipo_azioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_tipo_azione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t15_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt15_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_id_fornitoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_id_fornitore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_cod_fornitoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_cod_fornitore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t11_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt11_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t08_stato_testata_ordine_forColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt08_stato_testata_ordine_for
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As viewTestateOrdiniConStatoRow
            Get
                Return CType(Me.Rows(index),viewTestateOrdiniConStatoRow)
            End Get
        End Property
        
        Public Event viewTestateOrdiniConStatoRowChanging As viewTestateOrdiniConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniConStatoRowChanged As viewTestateOrdiniConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniConStatoRowDeleting As viewTestateOrdiniConStatoRowChangeEventHandler
        
        Public Event viewTestateOrdiniConStatoRowDeleted As viewTestateOrdiniConStatoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddviewTestateOrdiniConStatoRow(ByVal row As viewTestateOrdiniConStatoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddviewTestateOrdiniConStatoRow( _
                    ByVal t08_id_testata_ordine_for As Integer,  _
                    ByVal t08_cod_testata_ordine_for As String,  _
                    ByVal t08_descrizione As String,  _
                    ByVal t08_id_fornitore_t11 As Integer,  _
                    ByVal t08_dt_ordine As Date,  _
                    ByVal t08_dt_consegna As Date,  _
                    ByVal t08_tipo_ordine As String,  _
                    ByVal t08_id_causale_ordine_for_t15 As Integer,  _
                    ByVal t08_dt_creazione As Date,  _
                    ByVal t08_dt_modifica As Date,  _
                    ByVal t08_dt_cancellazione As Date,  _
                    ByVal t15_id_causale_ordine_for As Integer,  _
                    ByVal t15_cod_causale_ordine_for As String,  _
                    ByVal t15_descrizione As String,  _
                    ByVal t15_tipo_azione As String,  _
                    ByVal t15_dt_creazione As Date,  _
                    ByVal t15_dt_modifica As Date,  _
                    ByVal t15_dt_cancellazione As Date,  _
                    ByVal t11_id_fornitore As Integer,  _
                    ByVal t11_cod_fornitore As String,  _
                    ByVal t11_descrizione As String,  _
                    ByVal t11_telefono As String,  _
                    ByVal t11_note As String,  _
                    ByVal t11_dt_creazione As Date,  _
                    ByVal t11_dt_modifica As Date,  _
                    ByVal t11_dt_cancellazione As Date,  _
                    ByVal ANNO As Integer,  _
                    ByVal t08_stato_testata_ordine_for As String) As viewTestateOrdiniConStatoRow
            Dim rowviewTestateOrdiniConStatoRow As viewTestateOrdiniConStatoRow = CType(Me.NewRow,viewTestateOrdiniConStatoRow)
            Dim columnValuesArray() As Object = New Object() {t08_id_testata_ordine_for, t08_cod_testata_ordine_for, t08_descrizione, t08_id_fornitore_t11, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine, t08_id_causale_ordine_for_t15, t08_dt_creazione, t08_dt_modifica, t08_dt_cancellazione, t15_id_causale_ordine_for, t15_cod_causale_ordine_for, t15_descrizione, t15_tipo_azione, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione, t11_id_fornitore, t11_cod_fornitore, t11_descrizione, t11_telefono, t11_note, t11_dt_creazione, t11_dt_modifica, t11_dt_cancellazione, ANNO, t08_stato_testata_ordine_for}
            rowviewTestateOrdiniConStatoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowviewTestateOrdiniConStatoRow)
            Return rowviewTestateOrdiniConStatoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As viewTestateOrdiniConStatoDataTable = CType(MyBase.Clone,viewTestateOrdiniConStatoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New viewTestateOrdiniConStatoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt08_id_testata_ordine_for = MyBase.Columns("t08_id_testata_ordine_for")
            Me.columnt08_cod_testata_ordine_for = MyBase.Columns("t08_cod_testata_ordine_for")
            Me.columnt08_descrizione = MyBase.Columns("t08_descrizione")
            Me.columnt08_id_fornitore_t11 = MyBase.Columns("t08_id_fornitore_t11")
            Me.columnt08_dt_ordine = MyBase.Columns("t08_dt_ordine")
            Me.columnt08_dt_consegna = MyBase.Columns("t08_dt_consegna")
            Me.columnt08_tipo_ordine = MyBase.Columns("t08_tipo_ordine")
            Me.columnt08_id_causale_ordine_for_t15 = MyBase.Columns("t08_id_causale_ordine_for_t15")
            Me.columnt08_dt_creazione = MyBase.Columns("t08_dt_creazione")
            Me.columnt08_dt_modifica = MyBase.Columns("t08_dt_modifica")
            Me.columnt08_dt_cancellazione = MyBase.Columns("t08_dt_cancellazione")
            Me.columnt15_id_causale_ordine_for = MyBase.Columns("t15_id_causale_ordine_for")
            Me.columnt15_cod_causale_ordine_for = MyBase.Columns("t15_cod_causale_ordine_for")
            Me.columnt15_descrizione = MyBase.Columns("t15_descrizione")
            Me.columnt15_tipo_azione = MyBase.Columns("t15_tipo_azione")
            Me.columnt15_dt_creazione = MyBase.Columns("t15_dt_creazione")
            Me.columnt15_dt_modifica = MyBase.Columns("t15_dt_modifica")
            Me.columnt15_dt_cancellazione = MyBase.Columns("t15_dt_cancellazione")
            Me.columnt11_id_fornitore = MyBase.Columns("t11_id_fornitore")
            Me.columnt11_cod_fornitore = MyBase.Columns("t11_cod_fornitore")
            Me.columnt11_descrizione = MyBase.Columns("t11_descrizione")
            Me.columnt11_telefono = MyBase.Columns("t11_telefono")
            Me.columnt11_note = MyBase.Columns("t11_note")
            Me.columnt11_dt_creazione = MyBase.Columns("t11_dt_creazione")
            Me.columnt11_dt_modifica = MyBase.Columns("t11_dt_modifica")
            Me.columnt11_dt_cancellazione = MyBase.Columns("t11_dt_cancellazione")
            Me.columnANNO = MyBase.Columns("ANNO")
            Me.columnt08_stato_testata_ordine_for = MyBase.Columns("t08_stato_testata_ordine_for")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt08_id_testata_ordine_for = New Global.System.Data.DataColumn("t08_id_testata_ordine_for", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_testata_ordine_for)
            Me.columnt08_cod_testata_ordine_for = New Global.System.Data.DataColumn("t08_cod_testata_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_cod_testata_ordine_for)
            Me.columnt08_descrizione = New Global.System.Data.DataColumn("t08_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_descrizione)
            Me.columnt08_id_fornitore_t11 = New Global.System.Data.DataColumn("t08_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_fornitore_t11)
            Me.columnt08_dt_ordine = New Global.System.Data.DataColumn("t08_dt_ordine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_ordine)
            Me.columnt08_dt_consegna = New Global.System.Data.DataColumn("t08_dt_consegna", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_consegna)
            Me.columnt08_tipo_ordine = New Global.System.Data.DataColumn("t08_tipo_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_tipo_ordine)
            Me.columnt08_id_causale_ordine_for_t15 = New Global.System.Data.DataColumn("t08_id_causale_ordine_for_t15", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_id_causale_ordine_for_t15)
            Me.columnt08_dt_creazione = New Global.System.Data.DataColumn("t08_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_creazione)
            Me.columnt08_dt_modifica = New Global.System.Data.DataColumn("t08_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_modifica)
            Me.columnt08_dt_cancellazione = New Global.System.Data.DataColumn("t08_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_dt_cancellazione)
            Me.columnt15_id_causale_ordine_for = New Global.System.Data.DataColumn("t15_id_causale_ordine_for", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_id_causale_ordine_for)
            Me.columnt15_cod_causale_ordine_for = New Global.System.Data.DataColumn("t15_cod_causale_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_cod_causale_ordine_for)
            Me.columnt15_descrizione = New Global.System.Data.DataColumn("t15_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_descrizione)
            Me.columnt15_tipo_azione = New Global.System.Data.DataColumn("t15_tipo_azione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_tipo_azione)
            Me.columnt15_dt_creazione = New Global.System.Data.DataColumn("t15_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_creazione)
            Me.columnt15_dt_modifica = New Global.System.Data.DataColumn("t15_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_modifica)
            Me.columnt15_dt_cancellazione = New Global.System.Data.DataColumn("t15_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt15_dt_cancellazione)
            Me.columnt11_id_fornitore = New Global.System.Data.DataColumn("t11_id_fornitore", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_id_fornitore)
            Me.columnt11_cod_fornitore = New Global.System.Data.DataColumn("t11_cod_fornitore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_cod_fornitore)
            Me.columnt11_descrizione = New Global.System.Data.DataColumn("t11_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_descrizione)
            Me.columnt11_telefono = New Global.System.Data.DataColumn("t11_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_telefono)
            Me.columnt11_note = New Global.System.Data.DataColumn("t11_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_note)
            Me.columnt11_dt_creazione = New Global.System.Data.DataColumn("t11_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_creazione)
            Me.columnt11_dt_modifica = New Global.System.Data.DataColumn("t11_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_modifica)
            Me.columnt11_dt_cancellazione = New Global.System.Data.DataColumn("t11_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt11_dt_cancellazione)
            Me.columnANNO = New Global.System.Data.DataColumn("ANNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANNO)
            Me.columnt08_stato_testata_ordine_for = New Global.System.Data.DataColumn("t08_stato_testata_ordine_for", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt08_stato_testata_ordine_for)
            Me.columnt08_id_testata_ordine_for.AllowDBNull = false
            Me.columnt08_cod_testata_ordine_for.MaxLength = 20
            Me.columnt08_descrizione.MaxLength = 255
            Me.columnt08_tipo_ordine.MaxLength = 20
            Me.columnt15_cod_causale_ordine_for.MaxLength = 20
            Me.columnt15_descrizione.MaxLength = 50
            Me.columnt15_tipo_azione.MaxLength = 1
            Me.columnt11_cod_fornitore.MaxLength = 20
            Me.columnt11_descrizione.MaxLength = 255
            Me.columnt11_telefono.MaxLength = 20
            Me.columnt11_note.MaxLength = 2147483647
            Me.columnt08_stato_testata_ordine_for.AllowDBNull = false
            Me.columnt08_stato_testata_ordine_for.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewviewTestateOrdiniConStatoRow() As viewTestateOrdiniConStatoRow
            Return CType(Me.NewRow,viewTestateOrdiniConStatoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New viewTestateOrdiniConStatoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(viewTestateOrdiniConStatoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.viewTestateOrdiniConStatoRowChangedEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniConStatoRowChanged(Me, New viewTestateOrdiniConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.viewTestateOrdiniConStatoRowChangingEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniConStatoRowChanging(Me, New viewTestateOrdiniConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.viewTestateOrdiniConStatoRowDeletedEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniConStatoRowDeleted(Me, New viewTestateOrdiniConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.viewTestateOrdiniConStatoRowDeletingEvent) Is Nothing) Then
                RaiseEvent viewTestateOrdiniConStatoRowDeleting(Me, New viewTestateOrdiniConStatoRowChangeEvent(CType(e.Row,viewTestateOrdiniConStatoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveviewTestateOrdiniConStatoRow(ByVal row As viewTestateOrdiniConStatoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "viewTestateOrdiniConStatoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dvArticoliConMatricoleDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt25_cod_matricola As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dvArticoliConMatricole"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_cod_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_cod_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dvArticoliConMatricoleRow
            Get
                Return CType(Me.Rows(index),dvArticoliConMatricoleRow)
            End Get
        End Property
        
        Public Event dvArticoliConMatricoleRowChanging As dvArticoliConMatricoleRowChangeEventHandler
        
        Public Event dvArticoliConMatricoleRowChanged As dvArticoliConMatricoleRowChangeEventHandler
        
        Public Event dvArticoliConMatricoleRowDeleting As dvArticoliConMatricoleRowChangeEventHandler
        
        Public Event dvArticoliConMatricoleRowDeleted As dvArticoliConMatricoleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AdddvArticoliConMatricoleRow(ByVal row As dvArticoliConMatricoleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AdddvArticoliConMatricoleRow(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Decimal, ByVal t25_cod_matricola As String, ByVal t20_dt_cancellazione As Date, ByVal t20_is_ricambio As Boolean) As dvArticoliConMatricoleRow
            Dim rowdvArticoliConMatricoleRow As dvArticoliConMatricoleRow = CType(Me.NewRow,dvArticoliConMatricoleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t20_cod_articolo, t20_descrizione, t20_prezzo, t25_cod_matricola, t20_dt_cancellazione, t20_is_ricambio}
            rowdvArticoliConMatricoleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdvArticoliConMatricoleRow)
            Return rowdvArticoliConMatricoleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt20_id_articolot25_cod_matricola(ByVal t20_id_articolo As Integer, ByVal t25_cod_matricola As String) As dvArticoliConMatricoleRow
            Return CType(Me.Rows.Find(New Object() {t20_id_articolo, t25_cod_matricola}),dvArticoliConMatricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dvArticoliConMatricoleDataTable = CType(MyBase.Clone,dvArticoliConMatricoleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dvArticoliConMatricoleDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt25_cod_matricola = MyBase.Columns("t25_cod_matricola")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt25_cod_matricola = New Global.System.Data.DataColumn("t25_cod_matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_cod_matricola)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt20_id_articolo, Me.columnt25_cod_matricola}, true))
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt25_cod_matricola.AllowDBNull = false
            Me.columnt25_cod_matricola.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewdvArticoliConMatricoleRow() As dvArticoliConMatricoleRow
            Return CType(Me.NewRow,dvArticoliConMatricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dvArticoliConMatricoleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dvArticoliConMatricoleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dvArticoliConMatricoleRowChangedEvent) Is Nothing) Then
                RaiseEvent dvArticoliConMatricoleRowChanged(Me, New dvArticoliConMatricoleRowChangeEvent(CType(e.Row,dvArticoliConMatricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dvArticoliConMatricoleRowChangingEvent) Is Nothing) Then
                RaiseEvent dvArticoliConMatricoleRowChanging(Me, New dvArticoliConMatricoleRowChangeEvent(CType(e.Row,dvArticoliConMatricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dvArticoliConMatricoleRowDeletedEvent) Is Nothing) Then
                RaiseEvent dvArticoliConMatricoleRowDeleted(Me, New dvArticoliConMatricoleRowChangeEvent(CType(e.Row,dvArticoliConMatricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dvArticoliConMatricoleRowDeletingEvent) Is Nothing) Then
                RaiseEvent dvArticoliConMatricoleRowDeleting(Me, New dvArticoliConMatricoleRowChangeEvent(CType(e.Row,dvArticoliConMatricoleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovedvArticoliConMatricoleRow(ByVal row As dvArticoliConMatricoleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dvArticoliConMatricoleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t28_testate_ordini_cliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt28_id As Global.System.Data.DataColumn
        
        Private columnt28_cod As Global.System.Data.DataColumn
        
        Private columnt28_descrizione As Global.System.Data.DataColumn
        
        Private columnt28_commessa As Global.System.Data.DataColumn
        
        Private columnt28_commessa_del As Global.System.Data.DataColumn
        
        Private columnt28_consegna As Global.System.Data.DataColumn
        
        Private columnt28_cliente As Global.System.Data.DataColumn
        
        Private columnt28_cliente2 As Global.System.Data.DataColumn
        
        Private columnt28_telefono As Global.System.Data.DataColumn
        
        Private columnt28_rif_reda As Global.System.Data.DataColumn
        
        Private columnt28_vendita As Global.System.Data.DataColumn
        
        Private columnt28_riparazione As Global.System.Data.DataColumn
        
        Private columnt28_completamento_fornitura As Global.System.Data.DataColumn
        
        Private columnt28_aspetto_esteriore As Global.System.Data.DataColumn
        
        Private columnt28_misure As Global.System.Data.DataColumn
        
        Private columnt28_peso As Global.System.Data.DataColumn
        
        Private columnt28_rif_ordine As Global.System.Data.DataColumn
        
        Private columnt28_note As Global.System.Data.DataColumn
        
        Private columnt28_spedizione As Global.System.Data.DataColumn
        
        Private columnt28_porto As Global.System.Data.DataColumn
        
        Private columnt28_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt28_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt28_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt28_stato_testata_ordine As Global.System.Data.DataColumn
        
        Private columnt28_data_evasione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t28_testate_ordini_cli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_codColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_commessaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_commessa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_commessa_delColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_commessa_del
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_cliente2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cliente2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_rif_redaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_rif_reda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_venditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_vendita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_riparazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_riparazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_completamento_fornituraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_completamento_fornitura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_aspetto_esterioreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_aspetto_esteriore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_misureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_misure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_pesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_peso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_rif_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_rif_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_spedizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_spedizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_portoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_porto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_stato_testata_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_stato_testata_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_data_evasioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_data_evasione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t28_testate_ordini_cliRow
            Get
                Return CType(Me.Rows(index),t28_testate_ordini_cliRow)
            End Get
        End Property
        
        Public Event t28_testate_ordini_cliRowChanging As t28_testate_ordini_cliRowChangeEventHandler
        
        Public Event t28_testate_ordini_cliRowChanged As t28_testate_ordini_cliRowChangeEventHandler
        
        Public Event t28_testate_ordini_cliRowDeleting As t28_testate_ordini_cliRowChangeEventHandler
        
        Public Event t28_testate_ordini_cliRowDeleted As t28_testate_ordini_cliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt28_testate_ordini_cliRow(ByVal row As t28_testate_ordini_cliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt28_testate_ordini_cliRow( _
                    ByVal t28_cod As String,  _
                    ByVal t28_descrizione As String,  _
                    ByVal t28_commessa As String,  _
                    ByVal t28_commessa_del As Date,  _
                    ByVal t28_consegna As String,  _
                    ByVal t28_cliente As String,  _
                    ByVal t28_cliente2 As String,  _
                    ByVal t28_telefono As String,  _
                    ByVal t28_rif_reda As String,  _
                    ByVal t28_vendita As Boolean,  _
                    ByVal t28_riparazione As Boolean,  _
                    ByVal t28_completamento_fornitura As Boolean,  _
                    ByVal t28_aspetto_esteriore As String,  _
                    ByVal t28_misure As String,  _
                    ByVal t28_peso As String,  _
                    ByVal t28_rif_ordine As String,  _
                    ByVal t28_note As String,  _
                    ByVal t28_spedizione As String,  _
                    ByVal t28_porto As String,  _
                    ByVal t28_dt_creazione As Date,  _
                    ByVal t28_dt_modifica() As Byte,  _
                    ByVal t28_dt_cancellazione As Date,  _
                    ByVal t28_stato_testata_ordine As String,  _
                    ByVal t28_data_evasione As Date) As t28_testate_ordini_cliRow
            Dim rowt28_testate_ordini_cliRow As t28_testate_ordini_cliRow = CType(Me.NewRow,t28_testate_ordini_cliRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t28_cod, t28_descrizione, t28_commessa, t28_commessa_del, t28_consegna, t28_cliente, t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita, t28_riparazione, t28_completamento_fornitura, t28_aspetto_esteriore, t28_misure, t28_peso, t28_rif_ordine, t28_note, t28_spedizione, t28_porto, t28_dt_creazione, t28_dt_modifica, t28_dt_cancellazione, t28_stato_testata_ordine, t28_data_evasione}
            rowt28_testate_ordini_cliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt28_testate_ordini_cliRow)
            Return rowt28_testate_ordini_cliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt28_id(ByVal t28_id As Integer) As t28_testate_ordini_cliRow
            Return CType(Me.Rows.Find(New Object() {t28_id}),t28_testate_ordini_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t28_testate_ordini_cliDataTable = CType(MyBase.Clone,t28_testate_ordini_cliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t28_testate_ordini_cliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt28_id = MyBase.Columns("t28_id")
            Me.columnt28_cod = MyBase.Columns("t28_cod")
            Me.columnt28_descrizione = MyBase.Columns("t28_descrizione")
            Me.columnt28_commessa = MyBase.Columns("t28_commessa")
            Me.columnt28_commessa_del = MyBase.Columns("t28_commessa_del")
            Me.columnt28_consegna = MyBase.Columns("t28_consegna")
            Me.columnt28_cliente = MyBase.Columns("t28_cliente")
            Me.columnt28_cliente2 = MyBase.Columns("t28_cliente2")
            Me.columnt28_telefono = MyBase.Columns("t28_telefono")
            Me.columnt28_rif_reda = MyBase.Columns("t28_rif_reda")
            Me.columnt28_vendita = MyBase.Columns("t28_vendita")
            Me.columnt28_riparazione = MyBase.Columns("t28_riparazione")
            Me.columnt28_completamento_fornitura = MyBase.Columns("t28_completamento_fornitura")
            Me.columnt28_aspetto_esteriore = MyBase.Columns("t28_aspetto_esteriore")
            Me.columnt28_misure = MyBase.Columns("t28_misure")
            Me.columnt28_peso = MyBase.Columns("t28_peso")
            Me.columnt28_rif_ordine = MyBase.Columns("t28_rif_ordine")
            Me.columnt28_note = MyBase.Columns("t28_note")
            Me.columnt28_spedizione = MyBase.Columns("t28_spedizione")
            Me.columnt28_porto = MyBase.Columns("t28_porto")
            Me.columnt28_dt_creazione = MyBase.Columns("t28_dt_creazione")
            Me.columnt28_dt_modifica = MyBase.Columns("t28_dt_modifica")
            Me.columnt28_dt_cancellazione = MyBase.Columns("t28_dt_cancellazione")
            Me.columnt28_stato_testata_ordine = MyBase.Columns("t28_stato_testata_ordine")
            Me.columnt28_data_evasione = MyBase.Columns("t28_data_evasione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt28_id = New Global.System.Data.DataColumn("t28_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_id)
            Me.columnt28_cod = New Global.System.Data.DataColumn("t28_cod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cod)
            Me.columnt28_descrizione = New Global.System.Data.DataColumn("t28_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_descrizione)
            Me.columnt28_commessa = New Global.System.Data.DataColumn("t28_commessa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_commessa)
            Me.columnt28_commessa_del = New Global.System.Data.DataColumn("t28_commessa_del", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_commessa_del)
            Me.columnt28_consegna = New Global.System.Data.DataColumn("t28_consegna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_consegna)
            Me.columnt28_cliente = New Global.System.Data.DataColumn("t28_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cliente)
            Me.columnt28_cliente2 = New Global.System.Data.DataColumn("t28_cliente2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cliente2)
            Me.columnt28_telefono = New Global.System.Data.DataColumn("t28_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_telefono)
            Me.columnt28_rif_reda = New Global.System.Data.DataColumn("t28_rif_reda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_rif_reda)
            Me.columnt28_vendita = New Global.System.Data.DataColumn("t28_vendita", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_vendita)
            Me.columnt28_riparazione = New Global.System.Data.DataColumn("t28_riparazione", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_riparazione)
            Me.columnt28_completamento_fornitura = New Global.System.Data.DataColumn("t28_completamento_fornitura", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_completamento_fornitura)
            Me.columnt28_aspetto_esteriore = New Global.System.Data.DataColumn("t28_aspetto_esteriore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_aspetto_esteriore)
            Me.columnt28_misure = New Global.System.Data.DataColumn("t28_misure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_misure)
            Me.columnt28_peso = New Global.System.Data.DataColumn("t28_peso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_peso)
            Me.columnt28_rif_ordine = New Global.System.Data.DataColumn("t28_rif_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_rif_ordine)
            Me.columnt28_note = New Global.System.Data.DataColumn("t28_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_note)
            Me.columnt28_spedizione = New Global.System.Data.DataColumn("t28_spedizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_spedizione)
            Me.columnt28_porto = New Global.System.Data.DataColumn("t28_porto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_porto)
            Me.columnt28_dt_creazione = New Global.System.Data.DataColumn("t28_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_creazione)
            Me.columnt28_dt_modifica = New Global.System.Data.DataColumn("t28_dt_modifica", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_modifica)
            Me.columnt28_dt_cancellazione = New Global.System.Data.DataColumn("t28_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_cancellazione)
            Me.columnt28_stato_testata_ordine = New Global.System.Data.DataColumn("t28_stato_testata_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_stato_testata_ordine)
            Me.columnt28_data_evasione = New Global.System.Data.DataColumn("t28_data_evasione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_data_evasione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt28_id}, true))
            Me.columnt28_id.AutoIncrement = true
            Me.columnt28_id.AllowDBNull = false
            Me.columnt28_id.ReadOnly = true
            Me.columnt28_id.Unique = true
            Me.columnt28_cod.MaxLength = 20
            Me.columnt28_descrizione.MaxLength = 255
            Me.columnt28_commessa.MaxLength = 50
            Me.columnt28_consegna.MaxLength = 50
            Me.columnt28_cliente.MaxLength = 255
            Me.columnt28_cliente2.MaxLength = 255
            Me.columnt28_telefono.MaxLength = 50
            Me.columnt28_rif_reda.MaxLength = 255
            Me.columnt28_aspetto_esteriore.MaxLength = 50
            Me.columnt28_misure.MaxLength = 50
            Me.columnt28_peso.MaxLength = 50
            Me.columnt28_rif_ordine.MaxLength = 50
            Me.columnt28_note.MaxLength = 255
            Me.columnt28_spedizione.MaxLength = 50
            Me.columnt28_porto.MaxLength = 50
            Me.columnt28_dt_modifica.ReadOnly = true
            Me.columnt28_stato_testata_ordine.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt28_testate_ordini_cliRow() As t28_testate_ordini_cliRow
            Return CType(Me.NewRow,t28_testate_ordini_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t28_testate_ordini_cliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t28_testate_ordini_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t28_testate_ordini_cliRowChangedEvent) Is Nothing) Then
                RaiseEvent t28_testate_ordini_cliRowChanged(Me, New t28_testate_ordini_cliRowChangeEvent(CType(e.Row,t28_testate_ordini_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t28_testate_ordini_cliRowChangingEvent) Is Nothing) Then
                RaiseEvent t28_testate_ordini_cliRowChanging(Me, New t28_testate_ordini_cliRowChangeEvent(CType(e.Row,t28_testate_ordini_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t28_testate_ordini_cliRowDeletedEvent) Is Nothing) Then
                RaiseEvent t28_testate_ordini_cliRowDeleted(Me, New t28_testate_ordini_cliRowChangeEvent(CType(e.Row,t28_testate_ordini_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t28_testate_ordini_cliRowDeletingEvent) Is Nothing) Then
                RaiseEvent t28_testate_ordini_cliRowDeleting(Me, New t28_testate_ordini_cliRowChangeEvent(CType(e.Row,t28_testate_ordini_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet28_testate_ordini_cliRow(ByVal row As t28_testate_ordini_cliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t28_testate_ordini_cliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t29_righe_ordine_cliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt29_id As Global.System.Data.DataColumn
        
        Private columnt29_id_testata_t28 As Global.System.Data.DataColumn
        
        Private columnt29_cod As Global.System.Data.DataColumn
        
        Private columnt29_descrizione As Global.System.Data.DataColumn
        
        Private columnt29_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt29_matricola As Global.System.Data.DataColumn
        
        Private columnt29_qt_ordinata As Global.System.Data.DataColumn
        
        Private columnt29_prezzo_uni As Global.System.Data.DataColumn
        
        Private columnt29_prezzo_tota As Global.System.Data.DataColumn
        
        Private columnt29_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt29_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt29_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt29_stato_riga_ordine As Global.System.Data.DataColumn
        
        Private columnt29_qt_evasa As Global.System.Data.DataColumn
        
        Private columnt29_data_evasione As Global.System.Data.DataColumn
        
        Private columnt29_posizione As Global.System.Data.DataColumn
        
        Private columnt29_descrizione_commerciale_it As Global.System.Data.DataColumn
        
        Private columnt29_descrizione_commerciale_en As Global.System.Data.DataColumn
        
        Private columnt29_descrizione_commerciale_es As Global.System.Data.DataColumn
        
        Private columnt29_descrizione_commerciale_fr As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t29_righe_ordine_cli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_id_testata_t28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id_testata_t28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_codColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_cod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_qt_ordinataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_qt_ordinata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_prezzo_uniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_prezzo_uni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_prezzo_totaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_prezzo_tota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_stato_riga_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_stato_riga_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_qt_evasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_qt_evasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_data_evasioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_data_evasione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizione_commerciale_itColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione_commerciale_it
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizione_commerciale_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione_commerciale_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizione_commerciale_esColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione_commerciale_es
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizione_commerciale_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione_commerciale_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t29_righe_ordine_cliRow
            Get
                Return CType(Me.Rows(index),t29_righe_ordine_cliRow)
            End Get
        End Property
        
        Public Event t29_righe_ordine_cliRowChanging As t29_righe_ordine_cliRowChangeEventHandler
        
        Public Event t29_righe_ordine_cliRowChanged As t29_righe_ordine_cliRowChangeEventHandler
        
        Public Event t29_righe_ordine_cliRowDeleting As t29_righe_ordine_cliRowChangeEventHandler
        
        Public Event t29_righe_ordine_cliRowDeleted As t29_righe_ordine_cliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt29_righe_ordine_cliRow(ByVal row As t29_righe_ordine_cliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt29_righe_ordine_cliRow( _
                    ByVal parentt28_testate_ordini_cliRowByFK_t29_righe_ordine_cli_t28_testate_ordini_cli As t28_testate_ordini_cliRow,  _
                    ByVal t29_cod As String,  _
                    ByVal t29_descrizione As String,  _
                    ByVal parentt20_articoliRowByFK_t29_righe_ordine_cli_t20_articoli As t20_articoliRow,  _
                    ByVal t29_matricola As String,  _
                    ByVal t29_qt_ordinata As Decimal,  _
                    ByVal t29_prezzo_uni As Decimal,  _
                    ByVal t29_prezzo_tota As Decimal,  _
                    ByVal t29_dt_creazione As Date,  _
                    ByVal t29_dt_modifica() As Byte,  _
                    ByVal t29_dt_cancellazione As Date,  _
                    ByVal t29_stato_riga_ordine As String,  _
                    ByVal t29_qt_evasa As Decimal,  _
                    ByVal t29_data_evasione As Date,  _
                    ByVal t29_posizione As Integer,  _
                    ByVal t29_descrizione_commerciale_it As String,  _
                    ByVal t29_descrizione_commerciale_en As String,  _
                    ByVal t29_descrizione_commerciale_es As String,  _
                    ByVal t29_descrizione_commerciale_fr As String) As t29_righe_ordine_cliRow
            Dim rowt29_righe_ordine_cliRow As t29_righe_ordine_cliRow = CType(Me.NewRow,t29_righe_ordine_cliRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, t29_cod, t29_descrizione, Nothing, t29_matricola, t29_qt_ordinata, t29_prezzo_uni, t29_prezzo_tota, t29_dt_creazione, t29_dt_modifica, t29_dt_cancellazione, t29_stato_riga_ordine, t29_qt_evasa, t29_data_evasione, t29_posizione, t29_descrizione_commerciale_it, t29_descrizione_commerciale_en, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr}
            If (Not (parentt28_testate_ordini_cliRowByFK_t29_righe_ordine_cli_t28_testate_ordini_cli) Is Nothing) Then
                columnValuesArray(1) = parentt28_testate_ordini_cliRowByFK_t29_righe_ordine_cli_t28_testate_ordini_cli(0)
            End If
            If (Not (parentt20_articoliRowByFK_t29_righe_ordine_cli_t20_articoli) Is Nothing) Then
                columnValuesArray(4) = parentt20_articoliRowByFK_t29_righe_ordine_cli_t20_articoli(0)
            End If
            rowt29_righe_ordine_cliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt29_righe_ordine_cliRow)
            Return rowt29_righe_ordine_cliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt29_id(ByVal t29_id As Integer) As t29_righe_ordine_cliRow
            Return CType(Me.Rows.Find(New Object() {t29_id}),t29_righe_ordine_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t29_righe_ordine_cliDataTable = CType(MyBase.Clone,t29_righe_ordine_cliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t29_righe_ordine_cliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt29_id = MyBase.Columns("t29_id")
            Me.columnt29_id_testata_t28 = MyBase.Columns("t29_id_testata_t28")
            Me.columnt29_cod = MyBase.Columns("t29_cod")
            Me.columnt29_descrizione = MyBase.Columns("t29_descrizione")
            Me.columnt29_id_articolo_t20 = MyBase.Columns("t29_id_articolo_t20")
            Me.columnt29_matricola = MyBase.Columns("t29_matricola")
            Me.columnt29_qt_ordinata = MyBase.Columns("t29_qt_ordinata")
            Me.columnt29_prezzo_uni = MyBase.Columns("t29_prezzo_uni")
            Me.columnt29_prezzo_tota = MyBase.Columns("t29_prezzo_tota")
            Me.columnt29_dt_creazione = MyBase.Columns("t29_dt_creazione")
            Me.columnt29_dt_modifica = MyBase.Columns("t29_dt_modifica")
            Me.columnt29_dt_cancellazione = MyBase.Columns("t29_dt_cancellazione")
            Me.columnt29_stato_riga_ordine = MyBase.Columns("t29_stato_riga_ordine")
            Me.columnt29_qt_evasa = MyBase.Columns("t29_qt_evasa")
            Me.columnt29_data_evasione = MyBase.Columns("t29_data_evasione")
            Me.columnt29_posizione = MyBase.Columns("t29_posizione")
            Me.columnt29_descrizione_commerciale_it = MyBase.Columns("t29_descrizione_commerciale_it")
            Me.columnt29_descrizione_commerciale_en = MyBase.Columns("t29_descrizione_commerciale_en")
            Me.columnt29_descrizione_commerciale_es = MyBase.Columns("t29_descrizione_commerciale_es")
            Me.columnt29_descrizione_commerciale_fr = MyBase.Columns("t29_descrizione_commerciale_fr")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt29_id = New Global.System.Data.DataColumn("t29_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id)
            Me.columnt29_id_testata_t28 = New Global.System.Data.DataColumn("t29_id_testata_t28", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id_testata_t28)
            Me.columnt29_cod = New Global.System.Data.DataColumn("t29_cod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_cod)
            Me.columnt29_descrizione = New Global.System.Data.DataColumn("t29_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione)
            Me.columnt29_id_articolo_t20 = New Global.System.Data.DataColumn("t29_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id_articolo_t20)
            Me.columnt29_matricola = New Global.System.Data.DataColumn("t29_matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_matricola)
            Me.columnt29_qt_ordinata = New Global.System.Data.DataColumn("t29_qt_ordinata", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_qt_ordinata)
            Me.columnt29_prezzo_uni = New Global.System.Data.DataColumn("t29_prezzo_uni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_prezzo_uni)
            Me.columnt29_prezzo_tota = New Global.System.Data.DataColumn("t29_prezzo_tota", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_prezzo_tota)
            Me.columnt29_dt_creazione = New Global.System.Data.DataColumn("t29_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_creazione)
            Me.columnt29_dt_modifica = New Global.System.Data.DataColumn("t29_dt_modifica", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_modifica)
            Me.columnt29_dt_cancellazione = New Global.System.Data.DataColumn("t29_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_cancellazione)
            Me.columnt29_stato_riga_ordine = New Global.System.Data.DataColumn("t29_stato_riga_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_stato_riga_ordine)
            Me.columnt29_qt_evasa = New Global.System.Data.DataColumn("t29_qt_evasa", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_qt_evasa)
            Me.columnt29_data_evasione = New Global.System.Data.DataColumn("t29_data_evasione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_data_evasione)
            Me.columnt29_posizione = New Global.System.Data.DataColumn("t29_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_posizione)
            Me.columnt29_descrizione_commerciale_it = New Global.System.Data.DataColumn("t29_descrizione_commerciale_it", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione_commerciale_it)
            Me.columnt29_descrizione_commerciale_en = New Global.System.Data.DataColumn("t29_descrizione_commerciale_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione_commerciale_en)
            Me.columnt29_descrizione_commerciale_es = New Global.System.Data.DataColumn("t29_descrizione_commerciale_es", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione_commerciale_es)
            Me.columnt29_descrizione_commerciale_fr = New Global.System.Data.DataColumn("t29_descrizione_commerciale_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione_commerciale_fr)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt29_id}, true))
            Me.columnt29_id.AutoIncrement = true
            Me.columnt29_id.AllowDBNull = false
            Me.columnt29_id.ReadOnly = true
            Me.columnt29_id.Unique = true
            Me.columnt29_cod.MaxLength = 20
            Me.columnt29_descrizione.MaxLength = 255
            Me.columnt29_matricola.MaxLength = 50
            Me.columnt29_dt_modifica.ReadOnly = true
            Me.columnt29_stato_riga_ordine.MaxLength = 1
            Me.columnt29_descrizione_commerciale_it.MaxLength = 4000
            Me.columnt29_descrizione_commerciale_en.MaxLength = 4000
            Me.columnt29_descrizione_commerciale_es.MaxLength = 4000
            Me.columnt29_descrizione_commerciale_fr.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt29_righe_ordine_cliRow() As t29_righe_ordine_cliRow
            Return CType(Me.NewRow,t29_righe_ordine_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t29_righe_ordine_cliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t29_righe_ordine_cliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t29_righe_ordine_cliRowChangedEvent) Is Nothing) Then
                RaiseEvent t29_righe_ordine_cliRowChanged(Me, New t29_righe_ordine_cliRowChangeEvent(CType(e.Row,t29_righe_ordine_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t29_righe_ordine_cliRowChangingEvent) Is Nothing) Then
                RaiseEvent t29_righe_ordine_cliRowChanging(Me, New t29_righe_ordine_cliRowChangeEvent(CType(e.Row,t29_righe_ordine_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t29_righe_ordine_cliRowDeletedEvent) Is Nothing) Then
                RaiseEvent t29_righe_ordine_cliRowDeleted(Me, New t29_righe_ordine_cliRowChangeEvent(CType(e.Row,t29_righe_ordine_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t29_righe_ordine_cliRowDeletingEvent) Is Nothing) Then
                RaiseEvent t29_righe_ordine_cliRowDeleting(Me, New t29_righe_ordine_cliRowChangeEvent(CType(e.Row,t29_righe_ordine_cliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet29_righe_ordine_cliRow(ByVal row As t29_righe_ordine_cliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t29_righe_ordine_cliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t20_articoliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt20_qt_disponibile As Global.System.Data.DataColumn
        
        Private columnt20_lotto_riordino As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnt20_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt20_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt20_prezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnt20_timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t20_articoli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_qt_disponibileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_qt_disponibile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_lotto_riordinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_lotto_riordino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_timestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t20_articoliRow
            Get
                Return CType(Me.Rows(index),t20_articoliRow)
            End Get
        End Property
        
        Public Event t20_articoliRowChanging As t20_articoliRowChangeEventHandler
        
        Public Event t20_articoliRowChanged As t20_articoliRowChangeEventHandler
        
        Public Event t20_articoliRowDeleting As t20_articoliRowChangeEventHandler
        
        Public Event t20_articoliRowDeleted As t20_articoliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt20_articoliRow(ByVal row As t20_articoliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt20_articoliRow(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Decimal, ByVal t20_qt_disponibile As Decimal, ByVal t20_lotto_riordino As Decimal, ByVal t20_is_gruppo As Boolean, ByVal t20_dt_creazione As Date, ByVal t20_dt_modifica As Date, ByVal t20_dt_cancellazione As Date, ByVal t20_id_fornitore_t11 As Integer, ByVal t20_prezzo_forzato As Decimal, ByVal t20_is_ricambio As Boolean, ByVal t20_timestamp() As Byte) As t20_articoliRow
            Dim rowt20_articoliRow As t20_articoliRow = CType(Me.NewRow,t20_articoliRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio, t20_timestamp}
            rowt20_articoliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt20_articoliRow)
            Return rowt20_articoliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt20_id_articolo(ByVal t20_id_articolo As Integer) As t20_articoliRow
            Return CType(Me.Rows.Find(New Object() {t20_id_articolo}),t20_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t20_articoliDataTable = CType(MyBase.Clone,t20_articoliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t20_articoliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt20_qt_disponibile = MyBase.Columns("t20_qt_disponibile")
            Me.columnt20_lotto_riordino = MyBase.Columns("t20_lotto_riordino")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnt20_dt_creazione = MyBase.Columns("t20_dt_creazione")
            Me.columnt20_dt_modifica = MyBase.Columns("t20_dt_modifica")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_id_fornitore_t11 = MyBase.Columns("t20_id_fornitore_t11")
            Me.columnt20_prezzo_forzato = MyBase.Columns("t20_prezzo_forzato")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnt20_timestamp = MyBase.Columns("t20_timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt20_qt_disponibile = New Global.System.Data.DataColumn("t20_qt_disponibile", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_qt_disponibile)
            Me.columnt20_lotto_riordino = New Global.System.Data.DataColumn("t20_lotto_riordino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_lotto_riordino)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnt20_dt_creazione = New Global.System.Data.DataColumn("t20_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_creazione)
            Me.columnt20_dt_modifica = New Global.System.Data.DataColumn("t20_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_modifica)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_id_fornitore_t11 = New Global.System.Data.DataColumn("t20_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_fornitore_t11)
            Me.columnt20_prezzo_forzato = New Global.System.Data.DataColumn("t20_prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo_forzato)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnt20_timestamp = New Global.System.Data.DataColumn("t20_timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_timestamp)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt20_id_articolo}, true))
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_id_articolo.Unique = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt20_timestamp.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt20_articoliRow() As t20_articoliRow
            Return CType(Me.NewRow,t20_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t20_articoliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t20_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t20_articoliRowChangedEvent) Is Nothing) Then
                RaiseEvent t20_articoliRowChanged(Me, New t20_articoliRowChangeEvent(CType(e.Row,t20_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t20_articoliRowChangingEvent) Is Nothing) Then
                RaiseEvent t20_articoliRowChanging(Me, New t20_articoliRowChangeEvent(CType(e.Row,t20_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t20_articoliRowDeletedEvent) Is Nothing) Then
                RaiseEvent t20_articoliRowDeleted(Me, New t20_articoliRowChangeEvent(CType(e.Row,t20_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t20_articoliRowDeletingEvent) Is Nothing) Then
                RaiseEvent t20_articoliRowDeleting(Me, New t20_articoliRowChangeEvent(CType(e.Row,t20_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet20_articoliRow(ByVal row As t20_articoliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t20_articoliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class v01_articoliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt20_qt_disponibile As Global.System.Data.DataColumn
        
        Private columnt20_lotto_riordino As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnt20_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt20_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt20_prezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnt20_timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "v01_articoli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_qt_disponibileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_qt_disponibile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_lotto_riordinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_lotto_riordino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_timestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As v01_articoliRow
            Get
                Return CType(Me.Rows(index),v01_articoliRow)
            End Get
        End Property
        
        Public Event v01_articoliRowChanging As v01_articoliRowChangeEventHandler
        
        Public Event v01_articoliRowChanged As v01_articoliRowChangeEventHandler
        
        Public Event v01_articoliRowDeleting As v01_articoliRowChangeEventHandler
        
        Public Event v01_articoliRowDeleted As v01_articoliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addv01_articoliRow(ByVal row As v01_articoliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addv01_articoliRow(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Decimal, ByVal t20_qt_disponibile As Decimal, ByVal t20_lotto_riordino As Decimal, ByVal t20_is_gruppo As Boolean, ByVal t20_dt_creazione As Date, ByVal t20_dt_modifica As Date, ByVal t20_dt_cancellazione As Date, ByVal t20_id_fornitore_t11 As Integer, ByVal t20_prezzo_forzato As Decimal, ByVal t20_is_ricambio As Boolean, ByVal t20_timestamp() As Byte) As v01_articoliRow
            Dim rowv01_articoliRow As v01_articoliRow = CType(Me.NewRow,v01_articoliRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio, t20_timestamp}
            rowv01_articoliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowv01_articoliRow)
            Return rowv01_articoliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt20_id_articolo(ByVal t20_id_articolo As Integer) As v01_articoliRow
            Return CType(Me.Rows.Find(New Object() {t20_id_articolo}),v01_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As v01_articoliDataTable = CType(MyBase.Clone,v01_articoliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New v01_articoliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt20_qt_disponibile = MyBase.Columns("t20_qt_disponibile")
            Me.columnt20_lotto_riordino = MyBase.Columns("t20_lotto_riordino")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnt20_dt_creazione = MyBase.Columns("t20_dt_creazione")
            Me.columnt20_dt_modifica = MyBase.Columns("t20_dt_modifica")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_id_fornitore_t11 = MyBase.Columns("t20_id_fornitore_t11")
            Me.columnt20_prezzo_forzato = MyBase.Columns("t20_prezzo_forzato")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnt20_timestamp = MyBase.Columns("t20_timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt20_qt_disponibile = New Global.System.Data.DataColumn("t20_qt_disponibile", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_qt_disponibile)
            Me.columnt20_lotto_riordino = New Global.System.Data.DataColumn("t20_lotto_riordino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_lotto_riordino)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnt20_dt_creazione = New Global.System.Data.DataColumn("t20_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_creazione)
            Me.columnt20_dt_modifica = New Global.System.Data.DataColumn("t20_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_modifica)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_id_fornitore_t11 = New Global.System.Data.DataColumn("t20_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_fornitore_t11)
            Me.columnt20_prezzo_forzato = New Global.System.Data.DataColumn("t20_prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo_forzato)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnt20_timestamp = New Global.System.Data.DataColumn("t20_timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_timestamp)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt20_id_articolo}, true))
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_id_articolo.Unique = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt20_timestamp.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newv01_articoliRow() As v01_articoliRow
            Return CType(Me.NewRow,v01_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New v01_articoliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(v01_articoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.v01_articoliRowChangedEvent) Is Nothing) Then
                RaiseEvent v01_articoliRowChanged(Me, New v01_articoliRowChangeEvent(CType(e.Row,v01_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.v01_articoliRowChangingEvent) Is Nothing) Then
                RaiseEvent v01_articoliRowChanging(Me, New v01_articoliRowChangeEvent(CType(e.Row,v01_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.v01_articoliRowDeletedEvent) Is Nothing) Then
                RaiseEvent v01_articoliRowDeleted(Me, New v01_articoliRowChangeEvent(CType(e.Row,v01_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.v01_articoliRowDeletingEvent) Is Nothing) Then
                RaiseEvent v01_articoliRowDeleting(Me, New v01_articoliRowChangeEvent(CType(e.Row,v01_articoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removev01_articoliRow(ByVal row As v01_articoliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "v01_articoliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class v03_gruppiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt20_qt_disponibile As Global.System.Data.DataColumn
        
        Private columnt20_lotto_riordino As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnt20_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt20_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt20_prezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnt20_timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "v03_gruppi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_qt_disponibileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_qt_disponibile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_lotto_riordinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_lotto_riordino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_timestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As v03_gruppiRow
            Get
                Return CType(Me.Rows(index),v03_gruppiRow)
            End Get
        End Property
        
        Public Event v03_gruppiRowChanging As v03_gruppiRowChangeEventHandler
        
        Public Event v03_gruppiRowChanged As v03_gruppiRowChangeEventHandler
        
        Public Event v03_gruppiRowDeleting As v03_gruppiRowChangeEventHandler
        
        Public Event v03_gruppiRowDeleted As v03_gruppiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addv03_gruppiRow(ByVal row As v03_gruppiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addv03_gruppiRow(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Decimal, ByVal t20_qt_disponibile As Decimal, ByVal t20_lotto_riordino As Decimal, ByVal t20_is_gruppo As Boolean, ByVal t20_dt_creazione As Date, ByVal t20_dt_modifica As Date, ByVal t20_dt_cancellazione As Date, ByVal t20_id_fornitore_t11 As Integer, ByVal t20_prezzo_forzato As Decimal, ByVal t20_is_ricambio As Boolean, ByVal t20_timestamp() As Byte) As v03_gruppiRow
            Dim rowv03_gruppiRow As v03_gruppiRow = CType(Me.NewRow,v03_gruppiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio, t20_timestamp}
            rowv03_gruppiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowv03_gruppiRow)
            Return rowv03_gruppiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt20_id_articolo(ByVal t20_id_articolo As Integer) As v03_gruppiRow
            Return CType(Me.Rows.Find(New Object() {t20_id_articolo}),v03_gruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As v03_gruppiDataTable = CType(MyBase.Clone,v03_gruppiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New v03_gruppiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt20_qt_disponibile = MyBase.Columns("t20_qt_disponibile")
            Me.columnt20_lotto_riordino = MyBase.Columns("t20_lotto_riordino")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnt20_dt_creazione = MyBase.Columns("t20_dt_creazione")
            Me.columnt20_dt_modifica = MyBase.Columns("t20_dt_modifica")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_id_fornitore_t11 = MyBase.Columns("t20_id_fornitore_t11")
            Me.columnt20_prezzo_forzato = MyBase.Columns("t20_prezzo_forzato")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnt20_timestamp = MyBase.Columns("t20_timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt20_qt_disponibile = New Global.System.Data.DataColumn("t20_qt_disponibile", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_qt_disponibile)
            Me.columnt20_lotto_riordino = New Global.System.Data.DataColumn("t20_lotto_riordino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_lotto_riordino)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnt20_dt_creazione = New Global.System.Data.DataColumn("t20_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_creazione)
            Me.columnt20_dt_modifica = New Global.System.Data.DataColumn("t20_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_modifica)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_id_fornitore_t11 = New Global.System.Data.DataColumn("t20_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_fornitore_t11)
            Me.columnt20_prezzo_forzato = New Global.System.Data.DataColumn("t20_prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo_forzato)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnt20_timestamp = New Global.System.Data.DataColumn("t20_timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_timestamp)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt20_id_articolo}, true))
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_id_articolo.Unique = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt20_timestamp.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newv03_gruppiRow() As v03_gruppiRow
            Return CType(Me.NewRow,v03_gruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New v03_gruppiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(v03_gruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.v03_gruppiRowChangedEvent) Is Nothing) Then
                RaiseEvent v03_gruppiRowChanged(Me, New v03_gruppiRowChangeEvent(CType(e.Row,v03_gruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.v03_gruppiRowChangingEvent) Is Nothing) Then
                RaiseEvent v03_gruppiRowChanging(Me, New v03_gruppiRowChangeEvent(CType(e.Row,v03_gruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.v03_gruppiRowDeletedEvent) Is Nothing) Then
                RaiseEvent v03_gruppiRowDeleted(Me, New v03_gruppiRowChangeEvent(CType(e.Row,v03_gruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.v03_gruppiRowDeletingEvent) Is Nothing) Then
                RaiseEvent v03_gruppiRowDeleting(Me, New v03_gruppiRowChangeEvent(CType(e.Row,v03_gruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removev03_gruppiRow(ByVal row As v03_gruppiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "v03_gruppiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ListinoRicambiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt25_cod_matricola As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnt20_prezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione_commerciale_it As Global.System.Data.DataColumn
        
        Private columnt20_descrizione_commerciale_en As Global.System.Data.DataColumn
        
        Private columnt20_descrizione_commerciale_es As Global.System.Data.DataColumn
        
        Private columnt20_descrizione_commerciale_fr As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ListinoRicambi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t25_cod_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt25_cod_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizione_commerciale_itColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione_commerciale_it
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizione_commerciale_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione_commerciale_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizione_commerciale_esColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione_commerciale_es
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizione_commerciale_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione_commerciale_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ListinoRicambiRow
            Get
                Return CType(Me.Rows(index),ListinoRicambiRow)
            End Get
        End Property
        
        Public Event ListinoRicambiRowChanging As ListinoRicambiRowChangeEventHandler
        
        Public Event ListinoRicambiRowChanged As ListinoRicambiRowChangeEventHandler
        
        Public Event ListinoRicambiRowDeleting As ListinoRicambiRowChangeEventHandler
        
        Public Event ListinoRicambiRowDeleted As ListinoRicambiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddListinoRicambiRow(ByVal row As ListinoRicambiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddListinoRicambiRow(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t25_cod_matricola As String, ByVal t20_is_ricambio As Boolean, ByVal t20_prezzo_forzato As Decimal, ByVal t20_dt_cancellazione As Date, ByVal t20_prezzo As Decimal, ByVal t20_descrizione_commerciale_it As String, ByVal t20_descrizione_commerciale_en As String, ByVal t20_descrizione_commerciale_es As String, ByVal t20_descrizione_commerciale_fr As String) As ListinoRicambiRow
            Dim rowListinoRicambiRow As ListinoRicambiRow = CType(Me.NewRow,ListinoRicambiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t20_cod_articolo, t20_descrizione, t25_cod_matricola, t20_is_ricambio, t20_prezzo_forzato, t20_dt_cancellazione, t20_prezzo, t20_descrizione_commerciale_it, t20_descrizione_commerciale_en, t20_descrizione_commerciale_es, t20_descrizione_commerciale_fr}
            rowListinoRicambiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowListinoRicambiRow)
            Return rowListinoRicambiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt25_cod_matricolat20_id_articolo(ByVal t25_cod_matricola As String, ByVal t20_id_articolo As Integer) As ListinoRicambiRow
            Return CType(Me.Rows.Find(New Object() {t25_cod_matricola, t20_id_articolo}),ListinoRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ListinoRicambiDataTable = CType(MyBase.Clone,ListinoRicambiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ListinoRicambiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt25_cod_matricola = MyBase.Columns("t25_cod_matricola")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnt20_prezzo_forzato = MyBase.Columns("t20_prezzo_forzato")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt20_descrizione_commerciale_it = MyBase.Columns("t20_descrizione_commerciale_it")
            Me.columnt20_descrizione_commerciale_en = MyBase.Columns("t20_descrizione_commerciale_en")
            Me.columnt20_descrizione_commerciale_es = MyBase.Columns("t20_descrizione_commerciale_es")
            Me.columnt20_descrizione_commerciale_fr = MyBase.Columns("t20_descrizione_commerciale_fr")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt25_cod_matricola = New Global.System.Data.DataColumn("t25_cod_matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt25_cod_matricola)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnt20_prezzo_forzato = New Global.System.Data.DataColumn("t20_prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo_forzato)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt20_descrizione_commerciale_it = New Global.System.Data.DataColumn("t20_descrizione_commerciale_it", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione_commerciale_it)
            Me.columnt20_descrizione_commerciale_en = New Global.System.Data.DataColumn("t20_descrizione_commerciale_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione_commerciale_en)
            Me.columnt20_descrizione_commerciale_es = New Global.System.Data.DataColumn("t20_descrizione_commerciale_es", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione_commerciale_es)
            Me.columnt20_descrizione_commerciale_fr = New Global.System.Data.DataColumn("t20_descrizione_commerciale_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione_commerciale_fr)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt25_cod_matricola, Me.columnt20_id_articolo}, true))
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt25_cod_matricola.AllowDBNull = false
            Me.columnt25_cod_matricola.MaxLength = 50
            Me.columnt20_descrizione_commerciale_it.MaxLength = 4000
            Me.columnt20_descrizione_commerciale_en.MaxLength = 4000
            Me.columnt20_descrizione_commerciale_es.MaxLength = 4000
            Me.columnt20_descrizione_commerciale_fr.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewListinoRicambiRow() As ListinoRicambiRow
            Return CType(Me.NewRow,ListinoRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ListinoRicambiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ListinoRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ListinoRicambiRowChangedEvent) Is Nothing) Then
                RaiseEvent ListinoRicambiRowChanged(Me, New ListinoRicambiRowChangeEvent(CType(e.Row,ListinoRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ListinoRicambiRowChangingEvent) Is Nothing) Then
                RaiseEvent ListinoRicambiRowChanging(Me, New ListinoRicambiRowChangeEvent(CType(e.Row,ListinoRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ListinoRicambiRowDeletedEvent) Is Nothing) Then
                RaiseEvent ListinoRicambiRowDeleted(Me, New ListinoRicambiRowChangeEvent(CType(e.Row,ListinoRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ListinoRicambiRowDeletingEvent) Is Nothing) Then
                RaiseEvent ListinoRicambiRowDeleting(Me, New ListinoRicambiRowChangeEvent(CType(e.Row,ListinoRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveListinoRicambiRow(ByVal row As ListinoRicambiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ListinoRicambiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t28_anniDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnAnni As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t28_anni"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t28_anniRow
            Get
                Return CType(Me.Rows(index),t28_anniRow)
            End Get
        End Property
        
        Public Event t28_anniRowChanging As t28_anniRowChangeEventHandler
        
        Public Event t28_anniRowChanged As t28_anniRowChangeEventHandler
        
        Public Event t28_anniRowDeleting As t28_anniRowChangeEventHandler
        
        Public Event t28_anniRowDeleted As t28_anniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt28_anniRow(ByVal row As t28_anniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt28_anniRow(ByVal Anni As Integer) As t28_anniRow
            Dim rowt28_anniRow As t28_anniRow = CType(Me.NewRow,t28_anniRow)
            Dim columnValuesArray() As Object = New Object() {Anni}
            rowt28_anniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowt28_anniRow)
            Return rowt28_anniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As t28_anniDataTable = CType(MyBase.Clone,t28_anniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New t28_anniDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnAnni = MyBase.Columns("Anni")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnAnni = New Global.System.Data.DataColumn("Anni", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnni)
            Me.columnAnni.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt28_anniRow() As t28_anniRow
            Return CType(Me.NewRow,t28_anniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New t28_anniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(t28_anniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t28_anniRowChangedEvent) Is Nothing) Then
                RaiseEvent t28_anniRowChanged(Me, New t28_anniRowChangeEvent(CType(e.Row,t28_anniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t28_anniRowChangingEvent) Is Nothing) Then
                RaiseEvent t28_anniRowChanging(Me, New t28_anniRowChangeEvent(CType(e.Row,t28_anniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t28_anniRowDeletedEvent) Is Nothing) Then
                RaiseEvent t28_anniRowDeleted(Me, New t28_anniRowChangeEvent(CType(e.Row,t28_anniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t28_anniRowDeletingEvent) Is Nothing) Then
                RaiseEvent t28_anniRowDeleting(Me, New t28_anniRowChangeEvent(CType(e.Row,t28_anniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet28_anniRow(ByVal row As t28_anniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t28_anniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RigheOrdiniRicambiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt28_id As Global.System.Data.DataColumn
        
        Private columnt28_cod As Global.System.Data.DataColumn
        
        Private columnt28_descrizione As Global.System.Data.DataColumn
        
        Private columnt28_commessa As Global.System.Data.DataColumn
        
        Private columnt28_commessa_del As Global.System.Data.DataColumn
        
        Private columnt28_consegna As Global.System.Data.DataColumn
        
        Private columnt28_cliente As Global.System.Data.DataColumn
        
        Private columnt28_cliente2 As Global.System.Data.DataColumn
        
        Private columnt28_telefono As Global.System.Data.DataColumn
        
        Private columnt28_rif_reda As Global.System.Data.DataColumn
        
        Private columnt28_vendita As Global.System.Data.DataColumn
        
        Private columnt28_riparazione As Global.System.Data.DataColumn
        
        Private columnt28_completamento_fornitura As Global.System.Data.DataColumn
        
        Private columnt28_aspetto_esteriore As Global.System.Data.DataColumn
        
        Private columnt28_misure As Global.System.Data.DataColumn
        
        Private columnt28_peso As Global.System.Data.DataColumn
        
        Private columnt28_rif_ordine As Global.System.Data.DataColumn
        
        Private columnt28_note As Global.System.Data.DataColumn
        
        Private columnt28_spedizione As Global.System.Data.DataColumn
        
        Private columnt28_porto As Global.System.Data.DataColumn
        
        Private columnt28_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt28_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt28_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt28_stato_testata_ordine As Global.System.Data.DataColumn
        
        Private columnt28_data_evasione As Global.System.Data.DataColumn
        
        Private columnt29_id As Global.System.Data.DataColumn
        
        Private columnt29_id_testata_t28 As Global.System.Data.DataColumn
        
        Private columnt29_cod As Global.System.Data.DataColumn
        
        Private columnt29_descrizione As Global.System.Data.DataColumn
        
        Private columnt29_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt29_matricola As Global.System.Data.DataColumn
        
        Private columnt29_qt_ordinata As Global.System.Data.DataColumn
        
        Private columnt29_prezzo_uni As Global.System.Data.DataColumn
        
        Private columnt29_prezzo_tota As Global.System.Data.DataColumn
        
        Private columnt29_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt29_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt29_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt29_stato_riga_ordine As Global.System.Data.DataColumn
        
        Private columnt29_qt_evasa As Global.System.Data.DataColumn
        
        Private columnt29_data_evasione As Global.System.Data.DataColumn
        
        Private columnt29_posizione As Global.System.Data.DataColumn
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_prezzo As Global.System.Data.DataColumn
        
        Private columnt20_qt_disponibile As Global.System.Data.DataColumn
        
        Private columnt20_lotto_riordino As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnt20_dt_creazione As Global.System.Data.DataColumn
        
        Private columnt20_dt_modifica As Global.System.Data.DataColumn
        
        Private columnt20_dt_cancellazione As Global.System.Data.DataColumn
        
        Private columnt20_id_fornitore_t11 As Global.System.Data.DataColumn
        
        Private columnt20_prezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnt20_timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RigheOrdiniRicambi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_codColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_commessaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_commessa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_commessa_delColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_commessa_del
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_consegnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_consegna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_cliente2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_cliente2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_telefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_rif_redaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_rif_reda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_venditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_vendita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_riparazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_riparazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_completamento_fornituraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_completamento_fornitura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_aspetto_esterioreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_aspetto_esteriore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_misureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_misure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_pesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_peso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_rif_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_rif_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_spedizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_spedizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_portoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_porto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_stato_testata_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_stato_testata_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t28_data_evasioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt28_data_evasione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_id_testata_t28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id_testata_t28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_codColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_cod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_matricolaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_matricola
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_qt_ordinataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_qt_ordinata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_prezzo_uniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_prezzo_uni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_prezzo_totaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_prezzo_tota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_stato_riga_ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_stato_riga_ordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_qt_evasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_qt_evasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_data_evasioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_data_evasione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t29_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt29_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_qt_disponibileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_qt_disponibile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_lotto_riordinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_lotto_riordino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_modificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_modifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_dt_cancellazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_dt_cancellazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_fornitore_t11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_fornitore_t11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_prezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_timestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RigheOrdiniRicambiRow
            Get
                Return CType(Me.Rows(index),RigheOrdiniRicambiRow)
            End Get
        End Property
        
        Public Event RigheOrdiniRicambiRowChanging As RigheOrdiniRicambiRowChangeEventHandler
        
        Public Event RigheOrdiniRicambiRowChanged As RigheOrdiniRicambiRowChangeEventHandler
        
        Public Event RigheOrdiniRicambiRowDeleting As RigheOrdiniRicambiRowChangeEventHandler
        
        Public Event RigheOrdiniRicambiRowDeleted As RigheOrdiniRicambiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRigheOrdiniRicambiRow(ByVal row As RigheOrdiniRicambiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRigheOrdiniRicambiRow( _
                    ByVal t28_cod As String,  _
                    ByVal t28_descrizione As String,  _
                    ByVal t28_commessa As String,  _
                    ByVal t28_commessa_del As Date,  _
                    ByVal t28_consegna As String,  _
                    ByVal t28_cliente As String,  _
                    ByVal t28_cliente2 As String,  _
                    ByVal t28_telefono As String,  _
                    ByVal t28_rif_reda As String,  _
                    ByVal t28_vendita As Boolean,  _
                    ByVal t28_riparazione As Boolean,  _
                    ByVal t28_completamento_fornitura As Boolean,  _
                    ByVal t28_aspetto_esteriore As String,  _
                    ByVal t28_misure As String,  _
                    ByVal t28_peso As String,  _
                    ByVal t28_rif_ordine As String,  _
                    ByVal t28_note As String,  _
                    ByVal t28_spedizione As String,  _
                    ByVal t28_porto As String,  _
                    ByVal t28_dt_creazione As Date,  _
                    ByVal t28_dt_modifica() As Byte,  _
                    ByVal t28_dt_cancellazione As Date,  _
                    ByVal t28_stato_testata_ordine As String,  _
                    ByVal t28_data_evasione As Date,  _
                    ByVal t29_id_testata_t28 As Integer,  _
                    ByVal t29_cod As String,  _
                    ByVal t29_descrizione As String,  _
                    ByVal t29_id_articolo_t20 As Integer,  _
                    ByVal t29_matricola As String,  _
                    ByVal t29_qt_ordinata As Decimal,  _
                    ByVal t29_prezzo_uni As Decimal,  _
                    ByVal t29_prezzo_tota As Decimal,  _
                    ByVal t29_dt_creazione As Date,  _
                    ByVal t29_dt_modifica() As Byte,  _
                    ByVal t29_dt_cancellazione As Date,  _
                    ByVal t29_stato_riga_ordine As String,  _
                    ByVal t29_qt_evasa As Decimal,  _
                    ByVal t29_data_evasione As Date,  _
                    ByVal t29_posizione As Integer,  _
                    ByVal t20_cod_articolo As String,  _
                    ByVal t20_descrizione As String,  _
                    ByVal t20_prezzo As Decimal,  _
                    ByVal t20_qt_disponibile As Decimal,  _
                    ByVal t20_lotto_riordino As Decimal,  _
                    ByVal t20_is_gruppo As Boolean,  _
                    ByVal t20_dt_creazione As Date,  _
                    ByVal t20_dt_modifica As Date,  _
                    ByVal t20_dt_cancellazione As Date,  _
                    ByVal t20_id_fornitore_t11 As Integer,  _
                    ByVal t20_prezzo_forzato As Decimal,  _
                    ByVal t20_is_ricambio As Boolean,  _
                    ByVal t20_timestamp() As Byte) As RigheOrdiniRicambiRow
            Dim rowRigheOrdiniRicambiRow As RigheOrdiniRicambiRow = CType(Me.NewRow,RigheOrdiniRicambiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, t28_cod, t28_descrizione, t28_commessa, t28_commessa_del, t28_consegna, t28_cliente, t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita, t28_riparazione, t28_completamento_fornitura, t28_aspetto_esteriore, t28_misure, t28_peso, t28_rif_ordine, t28_note, t28_spedizione, t28_porto, t28_dt_creazione, t28_dt_modifica, t28_dt_cancellazione, t28_stato_testata_ordine, t28_data_evasione, Nothing, t29_id_testata_t28, t29_cod, t29_descrizione, t29_id_articolo_t20, t29_matricola, t29_qt_ordinata, t29_prezzo_uni, t29_prezzo_tota, t29_dt_creazione, t29_dt_modifica, t29_dt_cancellazione, t29_stato_riga_ordine, t29_qt_evasa, t29_data_evasione, t29_posizione, Nothing, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio, t20_timestamp}
            rowRigheOrdiniRicambiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRigheOrdiniRicambiRow)
            Return rowRigheOrdiniRicambiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt28_idt29_idt20_id_articolo(ByVal t28_id As Integer, ByVal t29_id As Integer, ByVal t20_id_articolo As Integer) As RigheOrdiniRicambiRow
            Return CType(Me.Rows.Find(New Object() {t28_id, t29_id, t20_id_articolo}),RigheOrdiniRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RigheOrdiniRicambiDataTable = CType(MyBase.Clone,RigheOrdiniRicambiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RigheOrdiniRicambiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt28_id = MyBase.Columns("t28_id")
            Me.columnt28_cod = MyBase.Columns("t28_cod")
            Me.columnt28_descrizione = MyBase.Columns("t28_descrizione")
            Me.columnt28_commessa = MyBase.Columns("t28_commessa")
            Me.columnt28_commessa_del = MyBase.Columns("t28_commessa_del")
            Me.columnt28_consegna = MyBase.Columns("t28_consegna")
            Me.columnt28_cliente = MyBase.Columns("t28_cliente")
            Me.columnt28_cliente2 = MyBase.Columns("t28_cliente2")
            Me.columnt28_telefono = MyBase.Columns("t28_telefono")
            Me.columnt28_rif_reda = MyBase.Columns("t28_rif_reda")
            Me.columnt28_vendita = MyBase.Columns("t28_vendita")
            Me.columnt28_riparazione = MyBase.Columns("t28_riparazione")
            Me.columnt28_completamento_fornitura = MyBase.Columns("t28_completamento_fornitura")
            Me.columnt28_aspetto_esteriore = MyBase.Columns("t28_aspetto_esteriore")
            Me.columnt28_misure = MyBase.Columns("t28_misure")
            Me.columnt28_peso = MyBase.Columns("t28_peso")
            Me.columnt28_rif_ordine = MyBase.Columns("t28_rif_ordine")
            Me.columnt28_note = MyBase.Columns("t28_note")
            Me.columnt28_spedizione = MyBase.Columns("t28_spedizione")
            Me.columnt28_porto = MyBase.Columns("t28_porto")
            Me.columnt28_dt_creazione = MyBase.Columns("t28_dt_creazione")
            Me.columnt28_dt_modifica = MyBase.Columns("t28_dt_modifica")
            Me.columnt28_dt_cancellazione = MyBase.Columns("t28_dt_cancellazione")
            Me.columnt28_stato_testata_ordine = MyBase.Columns("t28_stato_testata_ordine")
            Me.columnt28_data_evasione = MyBase.Columns("t28_data_evasione")
            Me.columnt29_id = MyBase.Columns("t29_id")
            Me.columnt29_id_testata_t28 = MyBase.Columns("t29_id_testata_t28")
            Me.columnt29_cod = MyBase.Columns("t29_cod")
            Me.columnt29_descrizione = MyBase.Columns("t29_descrizione")
            Me.columnt29_id_articolo_t20 = MyBase.Columns("t29_id_articolo_t20")
            Me.columnt29_matricola = MyBase.Columns("t29_matricola")
            Me.columnt29_qt_ordinata = MyBase.Columns("t29_qt_ordinata")
            Me.columnt29_prezzo_uni = MyBase.Columns("t29_prezzo_uni")
            Me.columnt29_prezzo_tota = MyBase.Columns("t29_prezzo_tota")
            Me.columnt29_dt_creazione = MyBase.Columns("t29_dt_creazione")
            Me.columnt29_dt_modifica = MyBase.Columns("t29_dt_modifica")
            Me.columnt29_dt_cancellazione = MyBase.Columns("t29_dt_cancellazione")
            Me.columnt29_stato_riga_ordine = MyBase.Columns("t29_stato_riga_ordine")
            Me.columnt29_qt_evasa = MyBase.Columns("t29_qt_evasa")
            Me.columnt29_data_evasione = MyBase.Columns("t29_data_evasione")
            Me.columnt29_posizione = MyBase.Columns("t29_posizione")
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_prezzo = MyBase.Columns("t20_prezzo")
            Me.columnt20_qt_disponibile = MyBase.Columns("t20_qt_disponibile")
            Me.columnt20_lotto_riordino = MyBase.Columns("t20_lotto_riordino")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnt20_dt_creazione = MyBase.Columns("t20_dt_creazione")
            Me.columnt20_dt_modifica = MyBase.Columns("t20_dt_modifica")
            Me.columnt20_dt_cancellazione = MyBase.Columns("t20_dt_cancellazione")
            Me.columnt20_id_fornitore_t11 = MyBase.Columns("t20_id_fornitore_t11")
            Me.columnt20_prezzo_forzato = MyBase.Columns("t20_prezzo_forzato")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnt20_timestamp = MyBase.Columns("t20_timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt28_id = New Global.System.Data.DataColumn("t28_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_id)
            Me.columnt28_cod = New Global.System.Data.DataColumn("t28_cod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cod)
            Me.columnt28_descrizione = New Global.System.Data.DataColumn("t28_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_descrizione)
            Me.columnt28_commessa = New Global.System.Data.DataColumn("t28_commessa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_commessa)
            Me.columnt28_commessa_del = New Global.System.Data.DataColumn("t28_commessa_del", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_commessa_del)
            Me.columnt28_consegna = New Global.System.Data.DataColumn("t28_consegna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_consegna)
            Me.columnt28_cliente = New Global.System.Data.DataColumn("t28_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cliente)
            Me.columnt28_cliente2 = New Global.System.Data.DataColumn("t28_cliente2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_cliente2)
            Me.columnt28_telefono = New Global.System.Data.DataColumn("t28_telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_telefono)
            Me.columnt28_rif_reda = New Global.System.Data.DataColumn("t28_rif_reda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_rif_reda)
            Me.columnt28_vendita = New Global.System.Data.DataColumn("t28_vendita", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_vendita)
            Me.columnt28_riparazione = New Global.System.Data.DataColumn("t28_riparazione", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_riparazione)
            Me.columnt28_completamento_fornitura = New Global.System.Data.DataColumn("t28_completamento_fornitura", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_completamento_fornitura)
            Me.columnt28_aspetto_esteriore = New Global.System.Data.DataColumn("t28_aspetto_esteriore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_aspetto_esteriore)
            Me.columnt28_misure = New Global.System.Data.DataColumn("t28_misure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_misure)
            Me.columnt28_peso = New Global.System.Data.DataColumn("t28_peso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_peso)
            Me.columnt28_rif_ordine = New Global.System.Data.DataColumn("t28_rif_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_rif_ordine)
            Me.columnt28_note = New Global.System.Data.DataColumn("t28_note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_note)
            Me.columnt28_spedizione = New Global.System.Data.DataColumn("t28_spedizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_spedizione)
            Me.columnt28_porto = New Global.System.Data.DataColumn("t28_porto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_porto)
            Me.columnt28_dt_creazione = New Global.System.Data.DataColumn("t28_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_creazione)
            Me.columnt28_dt_modifica = New Global.System.Data.DataColumn("t28_dt_modifica", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_modifica)
            Me.columnt28_dt_cancellazione = New Global.System.Data.DataColumn("t28_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_dt_cancellazione)
            Me.columnt28_stato_testata_ordine = New Global.System.Data.DataColumn("t28_stato_testata_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_stato_testata_ordine)
            Me.columnt28_data_evasione = New Global.System.Data.DataColumn("t28_data_evasione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt28_data_evasione)
            Me.columnt29_id = New Global.System.Data.DataColumn("t29_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id)
            Me.columnt29_id_testata_t28 = New Global.System.Data.DataColumn("t29_id_testata_t28", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id_testata_t28)
            Me.columnt29_cod = New Global.System.Data.DataColumn("t29_cod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_cod)
            Me.columnt29_descrizione = New Global.System.Data.DataColumn("t29_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_descrizione)
            Me.columnt29_id_articolo_t20 = New Global.System.Data.DataColumn("t29_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_id_articolo_t20)
            Me.columnt29_matricola = New Global.System.Data.DataColumn("t29_matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_matricola)
            Me.columnt29_qt_ordinata = New Global.System.Data.DataColumn("t29_qt_ordinata", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_qt_ordinata)
            Me.columnt29_prezzo_uni = New Global.System.Data.DataColumn("t29_prezzo_uni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_prezzo_uni)
            Me.columnt29_prezzo_tota = New Global.System.Data.DataColumn("t29_prezzo_tota", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_prezzo_tota)
            Me.columnt29_dt_creazione = New Global.System.Data.DataColumn("t29_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_creazione)
            Me.columnt29_dt_modifica = New Global.System.Data.DataColumn("t29_dt_modifica", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_modifica)
            Me.columnt29_dt_cancellazione = New Global.System.Data.DataColumn("t29_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_dt_cancellazione)
            Me.columnt29_stato_riga_ordine = New Global.System.Data.DataColumn("t29_stato_riga_ordine", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_stato_riga_ordine)
            Me.columnt29_qt_evasa = New Global.System.Data.DataColumn("t29_qt_evasa", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_qt_evasa)
            Me.columnt29_data_evasione = New Global.System.Data.DataColumn("t29_data_evasione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_data_evasione)
            Me.columnt29_posizione = New Global.System.Data.DataColumn("t29_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt29_posizione)
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_prezzo = New Global.System.Data.DataColumn("t20_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo)
            Me.columnt20_qt_disponibile = New Global.System.Data.DataColumn("t20_qt_disponibile", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_qt_disponibile)
            Me.columnt20_lotto_riordino = New Global.System.Data.DataColumn("t20_lotto_riordino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_lotto_riordino)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnt20_dt_creazione = New Global.System.Data.DataColumn("t20_dt_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_creazione)
            Me.columnt20_dt_modifica = New Global.System.Data.DataColumn("t20_dt_modifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_modifica)
            Me.columnt20_dt_cancellazione = New Global.System.Data.DataColumn("t20_dt_cancellazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_dt_cancellazione)
            Me.columnt20_id_fornitore_t11 = New Global.System.Data.DataColumn("t20_id_fornitore_t11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_fornitore_t11)
            Me.columnt20_prezzo_forzato = New Global.System.Data.DataColumn("t20_prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_prezzo_forzato)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnt20_timestamp = New Global.System.Data.DataColumn("t20_timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_timestamp)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt28_id, Me.columnt29_id, Me.columnt20_id_articolo}, true))
            Me.columnt28_id.AutoIncrement = true
            Me.columnt28_id.AllowDBNull = false
            Me.columnt28_id.ReadOnly = true
            Me.columnt28_cod.MaxLength = 20
            Me.columnt28_descrizione.MaxLength = 255
            Me.columnt28_commessa.MaxLength = 50
            Me.columnt28_consegna.MaxLength = 50
            Me.columnt28_cliente.MaxLength = 255
            Me.columnt28_cliente2.MaxLength = 255
            Me.columnt28_telefono.MaxLength = 50
            Me.columnt28_rif_reda.MaxLength = 255
            Me.columnt28_aspetto_esteriore.MaxLength = 50
            Me.columnt28_misure.MaxLength = 50
            Me.columnt28_peso.MaxLength = 50
            Me.columnt28_rif_ordine.MaxLength = 50
            Me.columnt28_note.MaxLength = 255
            Me.columnt28_spedizione.MaxLength = 50
            Me.columnt28_porto.MaxLength = 50
            Me.columnt28_dt_modifica.ReadOnly = true
            Me.columnt28_stato_testata_ordine.MaxLength = 1
            Me.columnt29_id.AutoIncrement = true
            Me.columnt29_id.AllowDBNull = false
            Me.columnt29_id.ReadOnly = true
            Me.columnt29_cod.MaxLength = 20
            Me.columnt29_descrizione.MaxLength = 255
            Me.columnt29_matricola.MaxLength = 50
            Me.columnt29_dt_modifica.ReadOnly = true
            Me.columnt29_stato_riga_ordine.MaxLength = 1
            Me.columnt20_id_articolo.AutoIncrement = true
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.ReadOnly = true
            Me.columnt20_cod_articolo.MaxLength = 20
            Me.columnt20_descrizione.MaxLength = 255
            Me.columnt20_timestamp.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRigheOrdiniRicambiRow() As RigheOrdiniRicambiRow
            Return CType(Me.NewRow,RigheOrdiniRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RigheOrdiniRicambiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RigheOrdiniRicambiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RigheOrdiniRicambiRowChangedEvent) Is Nothing) Then
                RaiseEvent RigheOrdiniRicambiRowChanged(Me, New RigheOrdiniRicambiRowChangeEvent(CType(e.Row,RigheOrdiniRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RigheOrdiniRicambiRowChangingEvent) Is Nothing) Then
                RaiseEvent RigheOrdiniRicambiRowChanging(Me, New RigheOrdiniRicambiRowChangeEvent(CType(e.Row,RigheOrdiniRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RigheOrdiniRicambiRowDeletedEvent) Is Nothing) Then
                RaiseEvent RigheOrdiniRicambiRowDeleted(Me, New RigheOrdiniRicambiRowChangeEvent(CType(e.Row,RigheOrdiniRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RigheOrdiniRicambiRowDeletingEvent) Is Nothing) Then
                RaiseEvent RigheOrdiniRicambiRowDeleting(Me, New RigheOrdiniRicambiRowChangeEvent(CType(e.Row,RigheOrdiniRicambiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRigheOrdiniRicambiRow(ByVal row As RigheOrdiniRicambiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RigheOrdiniRicambiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class viewTreeIstanzeMacchineTotaliArticoliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnconsumo_totale As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "viewTreeIstanzeMacchineTotaliArticoli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property consumo_totaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumo_totale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As viewTreeIstanzeMacchineTotaliArticoliRow
            Get
                Return CType(Me.Rows(index),viewTreeIstanzeMacchineTotaliArticoliRow)
            End Get
        End Property
        
        Public Event viewTreeIstanzeMacchineTotaliArticoliRowChanging As viewTreeIstanzeMacchineTotaliArticoliRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliArticoliRowChanged As viewTreeIstanzeMacchineTotaliArticoliRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliArticoliRowDeleting As viewTreeIstanzeMacchineTotaliArticoliRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliArticoliRowDeleted As viewTreeIstanzeMacchineTotaliArticoliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddviewTreeIstanzeMacchineTotaliArticoliRow(ByVal row As viewTreeIstanzeMacchineTotaliArticoliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddviewTreeIstanzeMacchineTotaliArticoliRow(ByVal t22_id_articolo_t20 As Integer, ByVal consumo_totale As Decimal) As viewTreeIstanzeMacchineTotaliArticoliRow
            Dim rowviewTreeIstanzeMacchineTotaliArticoliRow As viewTreeIstanzeMacchineTotaliArticoliRow = CType(Me.NewRow,viewTreeIstanzeMacchineTotaliArticoliRow)
            Dim columnValuesArray() As Object = New Object() {t22_id_articolo_t20, consumo_totale}
            rowviewTreeIstanzeMacchineTotaliArticoliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowviewTreeIstanzeMacchineTotaliArticoliRow)
            Return rowviewTreeIstanzeMacchineTotaliArticoliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As viewTreeIstanzeMacchineTotaliArticoliDataTable = CType(MyBase.Clone,viewTreeIstanzeMacchineTotaliArticoliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New viewTreeIstanzeMacchineTotaliArticoliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnconsumo_totale = MyBase.Columns("consumo_totale")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnconsumo_totale = New Global.System.Data.DataColumn("consumo_totale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumo_totale)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsSituazioneArticoliKey4", New Global.System.Data.DataColumn() {Me.columnt22_id_articolo_t20}, false))
            Me.columnt22_id_articolo_t20.AllowDBNull = false
            Me.columnt22_id_articolo_t20.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewviewTreeIstanzeMacchineTotaliArticoliRow() As viewTreeIstanzeMacchineTotaliArticoliRow
            Return CType(Me.NewRow,viewTreeIstanzeMacchineTotaliArticoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New viewTreeIstanzeMacchineTotaliArticoliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(viewTreeIstanzeMacchineTotaliArticoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliArticoliRowChangedEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliArticoliRowChanged(Me, New viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliArticoliRowChangingEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliArticoliRowChanging(Me, New viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliArticoliRowDeletedEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliArticoliRowDeleted(Me, New viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliArticoliRowDeletingEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliArticoliRowDeleting(Me, New viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveviewTreeIstanzeMacchineTotaliArticoliRow(ByVal row As viewTreeIstanzeMacchineTotaliArticoliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "viewTreeIstanzeMacchineTotaliArticoliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class viewTreeIstanzeMacchineTotaliGruppiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnconsumo_totale As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "viewTreeIstanzeMacchineTotaliGruppi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property consumo_totaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumo_totale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As viewTreeIstanzeMacchineTotaliGruppiRow
            Get
                Return CType(Me.Rows(index),viewTreeIstanzeMacchineTotaliGruppiRow)
            End Get
        End Property
        
        Public Event viewTreeIstanzeMacchineTotaliGruppiRowChanging As viewTreeIstanzeMacchineTotaliGruppiRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliGruppiRowChanged As viewTreeIstanzeMacchineTotaliGruppiRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliGruppiRowDeleting As viewTreeIstanzeMacchineTotaliGruppiRowChangeEventHandler
        
        Public Event viewTreeIstanzeMacchineTotaliGruppiRowDeleted As viewTreeIstanzeMacchineTotaliGruppiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddviewTreeIstanzeMacchineTotaliGruppiRow(ByVal row As viewTreeIstanzeMacchineTotaliGruppiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddviewTreeIstanzeMacchineTotaliGruppiRow(ByVal t22_id_articolo_t20 As Integer, ByVal consumo_totale As Decimal) As viewTreeIstanzeMacchineTotaliGruppiRow
            Dim rowviewTreeIstanzeMacchineTotaliGruppiRow As viewTreeIstanzeMacchineTotaliGruppiRow = CType(Me.NewRow,viewTreeIstanzeMacchineTotaliGruppiRow)
            Dim columnValuesArray() As Object = New Object() {t22_id_articolo_t20, consumo_totale}
            rowviewTreeIstanzeMacchineTotaliGruppiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowviewTreeIstanzeMacchineTotaliGruppiRow)
            Return rowviewTreeIstanzeMacchineTotaliGruppiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As viewTreeIstanzeMacchineTotaliGruppiDataTable = CType(MyBase.Clone,viewTreeIstanzeMacchineTotaliGruppiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New viewTreeIstanzeMacchineTotaliGruppiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnconsumo_totale = MyBase.Columns("consumo_totale")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnconsumo_totale = New Global.System.Data.DataColumn("consumo_totale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumo_totale)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsSituazioneArticoliKey5", New Global.System.Data.DataColumn() {Me.columnt22_id_articolo_t20}, false))
            Me.columnt22_id_articolo_t20.AllowDBNull = false
            Me.columnt22_id_articolo_t20.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewviewTreeIstanzeMacchineTotaliGruppiRow() As viewTreeIstanzeMacchineTotaliGruppiRow
            Return CType(Me.NewRow,viewTreeIstanzeMacchineTotaliGruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New viewTreeIstanzeMacchineTotaliGruppiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(viewTreeIstanzeMacchineTotaliGruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliGruppiRowChangedEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliGruppiRowChanged(Me, New viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliGruppiRowChangingEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliGruppiRowChanging(Me, New viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliGruppiRowDeletedEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliGruppiRowDeleted(Me, New viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.viewTreeIstanzeMacchineTotaliGruppiRowDeletingEvent) Is Nothing) Then
                RaiseEvent viewTreeIstanzeMacchineTotaliGruppiRowDeleting(Me, New viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent(CType(e.Row,viewTreeIstanzeMacchineTotaliGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveviewTreeIstanzeMacchineTotaliGruppiRow(ByVal row As viewTreeIstanzeMacchineTotaliGruppiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "viewTreeIstanzeMacchineTotaliGruppiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ufn_GetQuantitaOrdinataArticoloDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt09_qt_ordinata As Global.System.Data.DataColumn
        
        Private columnt09_qt_evasa As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ufn_GetQuantitaOrdinataArticolo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_qt_ordinataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_qt_ordinata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t09_qt_evasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt09_qt_evasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ufn_GetQuantitaOrdinataArticoloRow
            Get
                Return CType(Me.Rows(index),ufn_GetQuantitaOrdinataArticoloRow)
            End Get
        End Property
        
        Public Event ufn_GetQuantitaOrdinataArticoloRowChanging As ufn_GetQuantitaOrdinataArticoloRowChangeEventHandler
        
        Public Event ufn_GetQuantitaOrdinataArticoloRowChanged As ufn_GetQuantitaOrdinataArticoloRowChangeEventHandler
        
        Public Event ufn_GetQuantitaOrdinataArticoloRowDeleting As ufn_GetQuantitaOrdinataArticoloRowChangeEventHandler
        
        Public Event ufn_GetQuantitaOrdinataArticoloRowDeleted As ufn_GetQuantitaOrdinataArticoloRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addufn_GetQuantitaOrdinataArticoloRow(ByVal row As ufn_GetQuantitaOrdinataArticoloRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addufn_GetQuantitaOrdinataArticoloRow(ByVal t22_id_articolo_t20 As Integer, ByVal t09_qt_ordinata As Decimal, ByVal t09_qt_evasa As Decimal) As ufn_GetQuantitaOrdinataArticoloRow
            Dim rowufn_GetQuantitaOrdinataArticoloRow As ufn_GetQuantitaOrdinataArticoloRow = CType(Me.NewRow,ufn_GetQuantitaOrdinataArticoloRow)
            Dim columnValuesArray() As Object = New Object() {t22_id_articolo_t20, t09_qt_ordinata, t09_qt_evasa}
            rowufn_GetQuantitaOrdinataArticoloRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowufn_GetQuantitaOrdinataArticoloRow)
            Return rowufn_GetQuantitaOrdinataArticoloRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ufn_GetQuantitaOrdinataArticoloDataTable = CType(MyBase.Clone,ufn_GetQuantitaOrdinataArticoloDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ufn_GetQuantitaOrdinataArticoloDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnt09_qt_ordinata = MyBase.Columns("t09_qt_ordinata")
            Me.columnt09_qt_evasa = MyBase.Columns("t09_qt_evasa")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnt09_qt_ordinata = New Global.System.Data.DataColumn("t09_qt_ordinata", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_qt_ordinata)
            Me.columnt09_qt_evasa = New Global.System.Data.DataColumn("t09_qt_evasa", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt09_qt_evasa)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsSituazioneArticoliKey3", New Global.System.Data.DataColumn() {Me.columnt22_id_articolo_t20}, false))
            Me.columnt22_id_articolo_t20.AllowDBNull = false
            Me.columnt22_id_articolo_t20.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newufn_GetQuantitaOrdinataArticoloRow() As ufn_GetQuantitaOrdinataArticoloRow
            Return CType(Me.NewRow,ufn_GetQuantitaOrdinataArticoloRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ufn_GetQuantitaOrdinataArticoloRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ufn_GetQuantitaOrdinataArticoloRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ufn_GetQuantitaOrdinataArticoloRowChangedEvent) Is Nothing) Then
                RaiseEvent ufn_GetQuantitaOrdinataArticoloRowChanged(Me, New ufn_GetQuantitaOrdinataArticoloRowChangeEvent(CType(e.Row,ufn_GetQuantitaOrdinataArticoloRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ufn_GetQuantitaOrdinataArticoloRowChangingEvent) Is Nothing) Then
                RaiseEvent ufn_GetQuantitaOrdinataArticoloRowChanging(Me, New ufn_GetQuantitaOrdinataArticoloRowChangeEvent(CType(e.Row,ufn_GetQuantitaOrdinataArticoloRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ufn_GetQuantitaOrdinataArticoloRowDeletedEvent) Is Nothing) Then
                RaiseEvent ufn_GetQuantitaOrdinataArticoloRowDeleted(Me, New ufn_GetQuantitaOrdinataArticoloRowChangeEvent(CType(e.Row,ufn_GetQuantitaOrdinataArticoloRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ufn_GetQuantitaOrdinataArticoloRowDeletingEvent) Is Nothing) Then
                RaiseEvent ufn_GetQuantitaOrdinataArticoloRowDeleting(Me, New ufn_GetQuantitaOrdinataArticoloRowChangeEvent(CType(e.Row,ufn_GetQuantitaOrdinataArticoloRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeufn_GetQuantitaOrdinataArticoloRow(ByVal row As ufn_GetQuantitaOrdinataArticoloRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ufn_GetQuantitaOrdinataArticoloDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RiepilogoArticoliDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt20_id_articolo As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        Private columnt20_descrizione As Global.System.Data.DataColumn
        
        Private columnt20_qt_disponibile As Global.System.Data.DataColumn
        
        Private columnqt_ordinata_articolo As Global.System.Data.DataColumn
        
        Private columnconsumo_totale As Global.System.Data.DataColumn
        
        Private columnsituazione As Global.System.Data.DataColumn
        
        Private columnt20_lotto_riordino As Global.System.Data.DataColumn
        
        Private columnmatricole As Global.System.Data.DataColumn
        
        Private columncosto As Global.System.Data.DataColumn
        
        Private columnprezzo_calcolato As Global.System.Data.DataColumn
        
        Private columnprezzo_forzato As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnfornitore As Global.System.Data.DataColumn
        
        Private columnsituazione_senza_ordinato As Global.System.Data.DataColumn
        
        Private columnt20_is_ricambio As Global.System.Data.DataColumn
        
        Private columnqt_disponibile_in_gruppi As Global.System.Data.DataColumn
        
        Private columnsituazione_in_gruppi As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RiepilogoArticoli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_id_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_id_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_qt_disponibileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_qt_disponibile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qt_ordinata_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqt_ordinata_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property consumo_totaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumo_totale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property situazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsituazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_lotto_riordinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_lotto_riordino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property matricoleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmatricole
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prezzo_calcolatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprezzo_calcolato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prezzo_forzatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprezzo_forzato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fornitoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfornitore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property situazione_senza_ordinatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsituazione_senza_ordinato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_ricambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_ricambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qt_disponibile_in_gruppiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqt_disponibile_in_gruppi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property situazione_in_gruppiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsituazione_in_gruppi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RiepilogoArticoliRow
            Get
                Return CType(Me.Rows(index),RiepilogoArticoliRow)
            End Get
        End Property
        
        Public Event RiepilogoArticoliRowChanging As RiepilogoArticoliRowChangeEventHandler
        
        Public Event RiepilogoArticoliRowChanged As RiepilogoArticoliRowChangeEventHandler
        
        Public Event RiepilogoArticoliRowDeleting As RiepilogoArticoliRowChangeEventHandler
        
        Public Event RiepilogoArticoliRowDeleted As RiepilogoArticoliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRiepilogoArticoliRow(ByVal row As RiepilogoArticoliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRiepilogoArticoliRow( _
                    ByVal t20_id_articolo As Integer,  _
                    ByVal t20_cod_articolo As String,  _
                    ByVal t20_descrizione As String,  _
                    ByVal t20_qt_disponibile As Decimal,  _
                    ByVal qt_ordinata_articolo As Decimal,  _
                    ByVal consumo_totale As Decimal,  _
                    ByVal situazione As Decimal,  _
                    ByVal t20_lotto_riordino As Decimal,  _
                    ByVal matricole As String,  _
                    ByVal costo As Decimal,  _
                    ByVal prezzo_calcolato As Decimal,  _
                    ByVal prezzo_forzato As Decimal,  _
                    ByVal t20_is_gruppo As Boolean,  _
                    ByVal fornitore As String,  _
                    ByVal situazione_senza_ordinato As Decimal,  _
                    ByVal t20_is_ricambio As Boolean,  _
                    ByVal qt_disponibile_in_gruppi As Decimal,  _
                    ByVal situazione_in_gruppi As Decimal) As RiepilogoArticoliRow
            Dim rowRiepilogoArticoliRow As RiepilogoArticoliRow = CType(Me.NewRow,RiepilogoArticoliRow)
            Dim columnValuesArray() As Object = New Object() {t20_id_articolo, t20_cod_articolo, t20_descrizione, t20_qt_disponibile, qt_ordinata_articolo, consumo_totale, situazione, t20_lotto_riordino, matricole, costo, prezzo_calcolato, prezzo_forzato, t20_is_gruppo, fornitore, situazione_senza_ordinato, t20_is_ricambio, qt_disponibile_in_gruppi, situazione_in_gruppi}
            rowRiepilogoArticoliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRiepilogoArticoliRow)
            Return rowRiepilogoArticoliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RiepilogoArticoliDataTable = CType(MyBase.Clone,RiepilogoArticoliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RiepilogoArticoliDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt20_id_articolo = MyBase.Columns("t20_id_articolo")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
            Me.columnt20_descrizione = MyBase.Columns("t20_descrizione")
            Me.columnt20_qt_disponibile = MyBase.Columns("t20_qt_disponibile")
            Me.columnqt_ordinata_articolo = MyBase.Columns("qt_ordinata_articolo")
            Me.columnconsumo_totale = MyBase.Columns("consumo_totale")
            Me.columnsituazione = MyBase.Columns("situazione")
            Me.columnt20_lotto_riordino = MyBase.Columns("t20_lotto_riordino")
            Me.columnmatricole = MyBase.Columns("matricole")
            Me.columncosto = MyBase.Columns("costo")
            Me.columnprezzo_calcolato = MyBase.Columns("prezzo_calcolato")
            Me.columnprezzo_forzato = MyBase.Columns("prezzo_forzato")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnfornitore = MyBase.Columns("fornitore")
            Me.columnsituazione_senza_ordinato = MyBase.Columns("situazione_senza_ordinato")
            Me.columnt20_is_ricambio = MyBase.Columns("t20_is_ricambio")
            Me.columnqt_disponibile_in_gruppi = MyBase.Columns("qt_disponibile_in_gruppi")
            Me.columnsituazione_in_gruppi = MyBase.Columns("situazione_in_gruppi")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt20_id_articolo = New Global.System.Data.DataColumn("t20_id_articolo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_id_articolo)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.columnt20_descrizione = New Global.System.Data.DataColumn("t20_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_descrizione)
            Me.columnt20_qt_disponibile = New Global.System.Data.DataColumn("t20_qt_disponibile", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_qt_disponibile)
            Me.columnqt_ordinata_articolo = New Global.System.Data.DataColumn("qt_ordinata_articolo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqt_ordinata_articolo)
            Me.columnconsumo_totale = New Global.System.Data.DataColumn("consumo_totale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumo_totale)
            Me.columnsituazione = New Global.System.Data.DataColumn("situazione", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsituazione)
            Me.columnt20_lotto_riordino = New Global.System.Data.DataColumn("t20_lotto_riordino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_lotto_riordino)
            Me.columnmatricole = New Global.System.Data.DataColumn("matricole", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmatricole)
            Me.columncosto = New Global.System.Data.DataColumn("costo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncosto)
            Me.columnprezzo_calcolato = New Global.System.Data.DataColumn("prezzo_calcolato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprezzo_calcolato)
            Me.columnprezzo_forzato = New Global.System.Data.DataColumn("prezzo_forzato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprezzo_forzato)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnfornitore = New Global.System.Data.DataColumn("fornitore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfornitore)
            Me.columnsituazione_senza_ordinato = New Global.System.Data.DataColumn("situazione_senza_ordinato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsituazione_senza_ordinato)
            Me.columnt20_is_ricambio = New Global.System.Data.DataColumn("t20_is_ricambio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_ricambio)
            Me.columnqt_disponibile_in_gruppi = New Global.System.Data.DataColumn("qt_disponibile_in_gruppi", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqt_disponibile_in_gruppi)
            Me.columnsituazione_in_gruppi = New Global.System.Data.DataColumn("situazione_in_gruppi", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsituazione_in_gruppi)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsSituazioneArticoliKey6", New Global.System.Data.DataColumn() {Me.columnt20_id_articolo}, false))
            Me.columnt20_id_articolo.AllowDBNull = false
            Me.columnt20_id_articolo.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRiepilogoArticoliRow() As RiepilogoArticoliRow
            Return CType(Me.NewRow,RiepilogoArticoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RiepilogoArticoliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RiepilogoArticoliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RiepilogoArticoliRowChangedEvent) Is Nothing) Then
                RaiseEvent RiepilogoArticoliRowChanged(Me, New RiepilogoArticoliRowChangeEvent(CType(e.Row,RiepilogoArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RiepilogoArticoliRowChangingEvent) Is Nothing) Then
                RaiseEvent RiepilogoArticoliRowChanging(Me, New RiepilogoArticoliRowChangeEvent(CType(e.Row,RiepilogoArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RiepilogoArticoliRowDeletedEvent) Is Nothing) Then
                RaiseEvent RiepilogoArticoliRowDeleted(Me, New RiepilogoArticoliRowChangeEvent(CType(e.Row,RiepilogoArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RiepilogoArticoliRowDeletingEvent) Is Nothing) Then
                RaiseEvent RiepilogoArticoliRowDeleting(Me, New RiepilogoArticoliRowChangeEvent(CType(e.Row,RiepilogoArticoliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRiepilogoArticoliRow(ByVal row As RiepilogoArticoliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RiepilogoArticoliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ImpegnatiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt06_id_istanza_macchina As Global.System.Data.DataColumn
        
        Private columnt21_id_macchina_t05 As Global.System.Data.DataColumn
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnt22_id_articolo_padre_t20 As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo As Global.System.Data.DataColumn
        
        Private columnt20_is_gruppo_padre As Global.System.Data.DataColumn
        
        Private columnt22_consumo As Global.System.Data.DataColumn
        
        Private columnconsumo_calcolato As Global.System.Data.DataColumn
        
        Private columnt22_posizione As Global.System.Data.DataColumn
        
        Private columnlvl As Global.System.Data.DataColumn
        
        Private columnpath As Global.System.Data.DataColumn
        
        Private columnriga_cod As Global.System.Data.DataColumn
        
        Private columnriga_descrizione As Global.System.Data.DataColumn
        
        Private columnt06_id_stato_istanza_t07 As Global.System.Data.DataColumn
        
        Private columnimpegnato As Global.System.Data.DataColumn
        
        Private columnconsumo_effettivo As Global.System.Data.DataColumn
        
        Private columnmagazzino As Global.System.Data.DataColumn
        
        Private columnmagazzinoSufficiente As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Impegnati"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_istanza_macchinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_istanza_macchina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t21_id_macchina_t05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt21_id_macchina_t05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_padre_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_padre_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_is_gruppo_padreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_is_gruppo_padre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_consumoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_consumo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property consumo_calcolatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumo_calcolato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_posizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_posizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lvlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlvl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pathColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpath
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property riga_codColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnriga_cod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property riga_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnriga_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t06_id_stato_istanza_t07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt06_id_stato_istanza_t07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property impegnatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpegnato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property consumo_effettivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumo_effettivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property magazzinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmagazzino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property magazzinoSufficienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmagazzinoSufficiente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ImpegnatiRow
            Get
                Return CType(Me.Rows(index),ImpegnatiRow)
            End Get
        End Property
        
        Public Event ImpegnatiRowChanging As ImpegnatiRowChangeEventHandler
        
        Public Event ImpegnatiRowChanged As ImpegnatiRowChangeEventHandler
        
        Public Event ImpegnatiRowDeleting As ImpegnatiRowChangeEventHandler
        
        Public Event ImpegnatiRowDeleted As ImpegnatiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddImpegnatiRow(ByVal row As ImpegnatiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddImpegnatiRow( _
                    ByVal t06_id_istanza_macchina As Integer,  _
                    ByVal t21_id_macchina_t05 As Integer,  _
                    ByVal t22_id_articolo_t20 As Integer,  _
                    ByVal t22_id_articolo_padre_t20 As Integer,  _
                    ByVal t20_is_gruppo As Boolean,  _
                    ByVal t20_is_gruppo_padre As Boolean,  _
                    ByVal t22_consumo As Decimal,  _
                    ByVal consumo_calcolato As Decimal,  _
                    ByVal t22_posizione As Integer,  _
                    ByVal lvl As Integer,  _
                    ByVal path As String,  _
                    ByVal riga_cod As String,  _
                    ByVal riga_descrizione As String,  _
                    ByVal t06_id_stato_istanza_t07 As String,  _
                    ByVal impegnato As Decimal,  _
                    ByVal consumo_effettivo As Decimal,  _
                    ByVal magazzino As Decimal,  _
                    ByVal magazzinoSufficiente As Boolean) As ImpegnatiRow
            Dim rowImpegnatiRow As ImpegnatiRow = CType(Me.NewRow,ImpegnatiRow)
            Dim columnValuesArray() As Object = New Object() {t06_id_istanza_macchina, t21_id_macchina_t05, t22_id_articolo_t20, t22_id_articolo_padre_t20, t20_is_gruppo, t20_is_gruppo_padre, t22_consumo, consumo_calcolato, t22_posizione, lvl, path, riga_cod, riga_descrizione, t06_id_stato_istanza_t07, impegnato, consumo_effettivo, magazzino, magazzinoSufficiente}
            rowImpegnatiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowImpegnatiRow)
            Return rowImpegnatiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ImpegnatiDataTable = CType(MyBase.Clone,ImpegnatiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ImpegnatiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt06_id_istanza_macchina = MyBase.Columns("t06_id_istanza_macchina")
            Me.columnt21_id_macchina_t05 = MyBase.Columns("t21_id_macchina_t05")
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnt22_id_articolo_padre_t20 = MyBase.Columns("t22_id_articolo_padre_t20")
            Me.columnt20_is_gruppo = MyBase.Columns("t20_is_gruppo")
            Me.columnt20_is_gruppo_padre = MyBase.Columns("t20_is_gruppo_padre")
            Me.columnt22_consumo = MyBase.Columns("t22_consumo")
            Me.columnconsumo_calcolato = MyBase.Columns("consumo_calcolato")
            Me.columnt22_posizione = MyBase.Columns("t22_posizione")
            Me.columnlvl = MyBase.Columns("lvl")
            Me.columnpath = MyBase.Columns("path")
            Me.columnriga_cod = MyBase.Columns("riga_cod")
            Me.columnriga_descrizione = MyBase.Columns("riga_descrizione")
            Me.columnt06_id_stato_istanza_t07 = MyBase.Columns("t06_id_stato_istanza_t07")
            Me.columnimpegnato = MyBase.Columns("impegnato")
            Me.columnconsumo_effettivo = MyBase.Columns("consumo_effettivo")
            Me.columnmagazzino = MyBase.Columns("magazzino")
            Me.columnmagazzinoSufficiente = MyBase.Columns("magazzinoSufficiente")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt06_id_istanza_macchina = New Global.System.Data.DataColumn("t06_id_istanza_macchina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_istanza_macchina)
            Me.columnt21_id_macchina_t05 = New Global.System.Data.DataColumn("t21_id_macchina_t05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt21_id_macchina_t05)
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnt22_id_articolo_padre_t20 = New Global.System.Data.DataColumn("t22_id_articolo_padre_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_padre_t20)
            Me.columnt20_is_gruppo = New Global.System.Data.DataColumn("t20_is_gruppo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo)
            Me.columnt20_is_gruppo_padre = New Global.System.Data.DataColumn("t20_is_gruppo_padre", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_is_gruppo_padre)
            Me.columnt22_consumo = New Global.System.Data.DataColumn("t22_consumo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_consumo)
            Me.columnconsumo_calcolato = New Global.System.Data.DataColumn("consumo_calcolato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumo_calcolato)
            Me.columnt22_posizione = New Global.System.Data.DataColumn("t22_posizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_posizione)
            Me.columnlvl = New Global.System.Data.DataColumn("lvl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlvl)
            Me.columnpath = New Global.System.Data.DataColumn("path", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpath)
            Me.columnriga_cod = New Global.System.Data.DataColumn("riga_cod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnriga_cod)
            Me.columnriga_descrizione = New Global.System.Data.DataColumn("riga_descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnriga_descrizione)
            Me.columnt06_id_stato_istanza_t07 = New Global.System.Data.DataColumn("t06_id_stato_istanza_t07", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt06_id_stato_istanza_t07)
            Me.columnimpegnato = New Global.System.Data.DataColumn("impegnato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpegnato)
            Me.columnconsumo_effettivo = New Global.System.Data.DataColumn("consumo_effettivo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumo_effettivo)
            Me.columnmagazzino = New Global.System.Data.DataColumn("magazzino", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmagazzino)
            Me.columnmagazzinoSufficiente = New Global.System.Data.DataColumn("magazzinoSufficiente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmagazzinoSufficiente)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewImpegnatiRow() As ImpegnatiRow
            Return CType(Me.NewRow,ImpegnatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ImpegnatiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ImpegnatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ImpegnatiRowChangedEvent) Is Nothing) Then
                RaiseEvent ImpegnatiRowChanged(Me, New ImpegnatiRowChangeEvent(CType(e.Row,ImpegnatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ImpegnatiRowChangingEvent) Is Nothing) Then
                RaiseEvent ImpegnatiRowChanging(Me, New ImpegnatiRowChangeEvent(CType(e.Row,ImpegnatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ImpegnatiRowDeletedEvent) Is Nothing) Then
                RaiseEvent ImpegnatiRowDeleted(Me, New ImpegnatiRowChangeEvent(CType(e.Row,ImpegnatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ImpegnatiRowDeletingEvent) Is Nothing) Then
                RaiseEvent ImpegnatiRowDeleting(Me, New ImpegnatiRowChangeEvent(CType(e.Row,ImpegnatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveImpegnatiRow(ByVal row As ImpegnatiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ImpegnatiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ArticoliInGruppiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnt22_id_articolo_t20 As Global.System.Data.DataColumn
        
        Private columnqt_disponibile_in_gruppi As Global.System.Data.DataColumn
        
        Private columnt20_cod_articolo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ArticoliInGruppi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t22_id_articolo_t20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt22_id_articolo_t20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qt_disponibile_in_gruppiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqt_disponibile_in_gruppi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t20_cod_articoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt20_cod_articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ArticoliInGruppiRow
            Get
                Return CType(Me.Rows(index),ArticoliInGruppiRow)
            End Get
        End Property
        
        Public Event ArticoliInGruppiRowChanging As ArticoliInGruppiRowChangeEventHandler
        
        Public Event ArticoliInGruppiRowChanged As ArticoliInGruppiRowChangeEventHandler
        
        Public Event ArticoliInGruppiRowDeleting As ArticoliInGruppiRowChangeEventHandler
        
        Public Event ArticoliInGruppiRowDeleted As ArticoliInGruppiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddArticoliInGruppiRow(ByVal row As ArticoliInGruppiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddArticoliInGruppiRow(ByVal t22_id_articolo_t20 As Integer, ByVal qt_disponibile_in_gruppi As Decimal, ByVal t20_cod_articolo As String) As ArticoliInGruppiRow
            Dim rowArticoliInGruppiRow As ArticoliInGruppiRow = CType(Me.NewRow,ArticoliInGruppiRow)
            Dim columnValuesArray() As Object = New Object() {t22_id_articolo_t20, qt_disponibile_in_gruppi, t20_cod_articolo}
            rowArticoliInGruppiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowArticoliInGruppiRow)
            Return rowArticoliInGruppiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByt22_id_articolo_t20(ByVal t22_id_articolo_t20 As Integer) As ArticoliInGruppiRow
            Return CType(Me.Rows.Find(New Object() {t22_id_articolo_t20}),ArticoliInGruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ArticoliInGruppiDataTable = CType(MyBase.Clone,ArticoliInGruppiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ArticoliInGruppiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnt22_id_articolo_t20 = MyBase.Columns("t22_id_articolo_t20")
            Me.columnqt_disponibile_in_gruppi = MyBase.Columns("qt_disponibile_in_gruppi")
            Me.columnt20_cod_articolo = MyBase.Columns("t20_cod_articolo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnt22_id_articolo_t20 = New Global.System.Data.DataColumn("t22_id_articolo_t20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt22_id_articolo_t20)
            Me.columnqt_disponibile_in_gruppi = New Global.System.Data.DataColumn("qt_disponibile_in_gruppi", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqt_disponibile_in_gruppi)
            Me.columnt20_cod_articolo = New Global.System.Data.DataColumn("t20_cod_articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt20_cod_articolo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnt22_id_articolo_t20}, true))
            Me.columnt22_id_articolo_t20.AllowDBNull = false
            Me.columnt22_id_articolo_t20.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewArticoliInGruppiRow() As ArticoliInGruppiRow
            Return CType(Me.NewRow,ArticoliInGruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ArticoliInGruppiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ArticoliInGruppiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ArticoliInGruppiRowChangedEvent) Is Nothing) Then
                RaiseEvent ArticoliInGruppiRowChanged(Me, New ArticoliInGruppiRowChangeEvent(CType(e.Row,ArticoliInGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ArticoliInGruppiRowChangingEvent) Is Nothing) Then
                RaiseEvent ArticoliInGruppiRowChanging(Me, New ArticoliInGruppiRowChangeEvent(CType(e.Row,ArticoliInGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ArticoliInGruppiRowDeletedEvent) Is Nothing) Then
                RaiseEvent ArticoliInGruppiRowDeleted(Me, New ArticoliInGruppiRowChangeEvent(CType(e.Row,ArticoliInGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ArticoliInGruppiRowDeletingEvent) Is Nothing) Then
                RaiseEvent ArticoliInGruppiRowDeleting(Me, New ArticoliInGruppiRowChangeEvent(CType(e.Row,ArticoliInGruppiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveArticoliInGruppiRow(ByVal row As ArticoliInGruppiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GestioneProduzione2009DataSet = New GestioneProduzione2009DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ArticoliInGruppiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t05_macchineRow
        Inherits Global.System.Data.DataRow
        
        Private tablet05_macchine As t05_macchineDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet05_macchine = CType(Me.Table,t05_macchineDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_id_macchina() As Integer
            Get
                Return CType(Me(Me.tablet05_macchine.t05_id_macchinaColumn),Integer)
            End Get
            Set
                Me(Me.tablet05_macchine.t05_id_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_cod_macchina() As String
            Get
                Try 
                    Return CType(Me(Me.tablet05_macchine.t05_cod_macchinaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_cod_macchina' in table 't05_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet05_macchine.t05_cod_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet05_macchine.t05_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_descrizione' in table 't05_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet05_macchine.t05_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet05_macchine.t05_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_creazione' in table 't05_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet05_macchine.t05_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet05_macchine.t05_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_modifica' in table 't05_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet05_macchine.t05_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet05_macchine.t05_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_cancellazione' in table 't05_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet05_macchine.t05_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_cod_macchinaNull() As Boolean
            Return Me.IsNull(Me.tablet05_macchine.t05_cod_macchinaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_cod_macchinaNull()
            Me(Me.tablet05_macchine.t05_cod_macchinaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet05_macchine.t05_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_descrizioneNull()
            Me(Me.tablet05_macchine.t05_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet05_macchine.t05_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_creazioneNull()
            Me(Me.tablet05_macchine.t05_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet05_macchine.t05_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_modificaNull()
            Me(Me.tablet05_macchine.t05_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet05_macchine.t05_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_cancellazioneNull()
            Me(Me.tablet05_macchine.t05_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett06_istanze_macchineRows() As t06_istanze_macchineRow()
            If (Me.Table.ChildRelations("FK_t06_istanze_macchine_t05_macchine") Is Nothing) Then
                Return New t06_istanze_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t06_istanze_macchine_t05_macchine")),t06_istanze_macchineRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett21_articoli_macchineRows() As t21_articoli_macchineRow()
            If (Me.Table.ChildRelations("FK_t21_articoli_macchine_t05_macchine") Is Nothing) Then
                Return New t21_articoli_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t21_articoli_macchine_t05_macchine")),t21_articoli_macchineRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t06_istanze_macchineRow
        Inherits Global.System.Data.DataRow
        
        Private tablet06_istanze_macchine As t06_istanze_macchineDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet06_istanze_macchine = CType(Me.Table,t06_istanze_macchineDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_istanza_macchina() As Integer
            Get
                Return CType(Me(Me.tablet06_istanze_macchine.t06_id_istanza_macchinaColumn),Integer)
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_id_istanza_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_descrizione' in table 't06_istanze_macchine' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_consegna' in table 't06_istanze_macchine' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_macchina_t05() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_id_macchina_t05Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_id_macchina_t05' in table 't06_istanze_macchine' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_id_macchina_t05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_quantita() As Short
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_quantitaColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_quantita' in table 't06_istanze_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_quantitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_stato_istanza_t07() As String
            Get
                Return CType(Me(Me.tablet06_istanze_macchine.t06_id_stato_istanza_t07Column),String)
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_id_stato_istanza_t07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_creazione' in table 't06_istanze_macchine' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_modifica' in table 't06_istanze_macchine' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet06_istanze_macchine.t06_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_cancellazione' in table 't06_istanze_macchine' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablet06_istanze_macchine.t06_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_macchineRow() As t05_macchineRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t06_istanze_macchine_t05_macchine")),t05_macchineRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t06_istanze_macchine_t05_macchine"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_stati_istanzaRow() As t07_stati_istanzaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t06_istanze_macchine_t07_stati_istanza")),t07_stati_istanzaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t06_istanze_macchine_t07_stati_istanza"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_descrizioneNull()
            Me(Me.tablet06_istanze_macchine.t06_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_consegnaNull()
            Me(Me.tablet06_istanze_macchine.t06_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_id_macchina_t05Null() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_id_macchina_t05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_id_macchina_t05Null()
            Me(Me.tablet06_istanze_macchine.t06_id_macchina_t05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_quantitaNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_quantitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_quantitaNull()
            Me(Me.tablet06_istanze_macchine.t06_quantitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_creazioneNull()
            Me(Me.tablet06_istanze_macchine.t06_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_modificaNull()
            Me(Me.tablet06_istanze_macchine.t06_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet06_istanze_macchine.t06_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_cancellazioneNull()
            Me(Me.tablet06_istanze_macchine.t06_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t07_stati_istanzaRow
        Inherits Global.System.Data.DataRow
        
        Private tablet07_stati_istanza As t07_stati_istanzaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet07_stati_istanza = CType(Me.Table,t07_stati_istanzaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_id_stato_istanza() As String
            Get
                Return CType(Me(Me.tablet07_stati_istanza.t07_id_stato_istanzaColumn),String)
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_id_stato_istanzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet07_stati_istanza.t07_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_descrizione' in table 't07_stati_istanza' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_posizione() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablet07_stati_istanza.t07_posizioneColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_posizione' in table 't07_stati_istanza' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet07_stati_istanza.t07_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_creazione' in table 't07_stati_istanza' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet07_stati_istanza.t07_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_modifica' in table 't07_stati_istanza' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet07_stati_istanza.t07_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_cancellazione' in table 't07_stati_istanza' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet07_stati_istanza.t07_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet07_stati_istanza.t07_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_descrizioneNull()
            Me(Me.tablet07_stati_istanza.t07_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet07_stati_istanza.t07_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_posizioneNull()
            Me(Me.tablet07_stati_istanza.t07_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet07_stati_istanza.t07_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_creazioneNull()
            Me(Me.tablet07_stati_istanza.t07_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet07_stati_istanza.t07_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_modificaNull()
            Me(Me.tablet07_stati_istanza.t07_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet07_stati_istanza.t07_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_cancellazioneNull()
            Me(Me.tablet07_stati_istanza.t07_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett06_istanze_macchineRows() As t06_istanze_macchineRow()
            If (Me.Table.ChildRelations("FK_t06_istanze_macchine_t07_stati_istanza") Is Nothing) Then
                Return New t06_istanze_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t06_istanze_macchine_t07_stati_istanza")),t06_istanze_macchineRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t08_testate_ordini_forRow
        Inherits Global.System.Data.DataRow
        
        Private tablet08_testate_ordini_for As t08_testate_ordini_forDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet08_testate_ordini_for = CType(Me.Table,t08_testate_ordini_forDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_testata_ordine_for() As Integer
            Get
                Return CType(Me(Me.tablet08_testate_ordini_for.t08_id_testata_ordine_forColumn),Integer)
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_id_testata_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_cod_testata_ordine_for() As String
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_cod_testata_ordine_forColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_cod_testata_ordine_for' in table 't08_testate_ordini_fo"& _ 
                            "r' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_cod_testata_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_descrizione' in table 't08_testate_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_id_fornitore_t11' in table 't08_testate_ordini_for' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_ordine() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_dt_ordineColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_ordine' in table 't08_testate_ordini_for' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_dt_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_consegna' in table 't08_testate_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_tipo_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_tipo_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_tipo_ordine' in table 't08_testate_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_tipo_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_causale_ordine_for_t15() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_id_causale_ordine_for_t15Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_id_causale_ordine_for_t15' in table 't08_testate_ordini"& _ 
                            "_for' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_id_causale_ordine_for_t15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_creazione' in table 't08_testate_ordini_for' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_modifica' in table 't08_testate_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet08_testate_ordini_for.t08_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_cancellazione' in table 't08_testate_ordini_for' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet08_testate_ordini_for.t08_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_fornitoriRow() As t11_fornitoriRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t08_testate_ordini_for_t11_fornitori")),t11_fornitoriRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t08_testate_ordini_for_t11_fornitori"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_causali_ordini_forRow() As t15_causali_ordini_forRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t08_testate_ordini_for_t15_causali_ordini_for")),t15_causali_ordini_forRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t08_testate_ordini_for_t15_causali_ordini_for"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_cod_testata_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_cod_testata_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_cod_testata_ordine_forNull()
            Me(Me.tablet08_testate_ordini_for.t08_cod_testata_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_descrizioneNull()
            Me(Me.tablet08_testate_ordini_for.t08_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_id_fornitore_t11Null()
            Me(Me.tablet08_testate_ordini_for.t08_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_ordineNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_dt_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_ordineNull()
            Me(Me.tablet08_testate_ordini_for.t08_dt_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_consegnaNull()
            Me(Me.tablet08_testate_ordini_for.t08_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_tipo_ordineNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_tipo_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_tipo_ordineNull()
            Me(Me.tablet08_testate_ordini_for.t08_tipo_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_id_causale_ordine_for_t15Null() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_id_causale_ordine_for_t15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_id_causale_ordine_for_t15Null()
            Me(Me.tablet08_testate_ordini_for.t08_id_causale_ordine_for_t15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_creazioneNull()
            Me(Me.tablet08_testate_ordini_for.t08_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_modificaNull()
            Me(Me.tablet08_testate_ordini_for.t08_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet08_testate_ordini_for.t08_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_cancellazioneNull()
            Me(Me.tablet08_testate_ordini_for.t08_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett09_righe_ordine_forRows() As t09_righe_ordine_forRow()
            If (Me.Table.ChildRelations("FK_t09_righe_ordine_for_t08_testate_ordini_for") Is Nothing) Then
                Return New t09_righe_ordine_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t09_righe_ordine_for_t08_testate_ordini_for")),t09_righe_ordine_forRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t09_righe_ordine_forRow
        Inherits Global.System.Data.DataRow
        
        Private tablet09_righe_ordine_for As t09_righe_ordine_forDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet09_righe_ordine_for = CType(Me.Table,t09_righe_ordine_forDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_id_riga_ordine_for() As Integer
            Get
                Return CType(Me(Me.tablet09_righe_ordine_for.t09_id_riga_ordine_forColumn),Integer)
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_id_riga_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_cod_riga_ordine_for() As String
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_cod_riga_ordine_forColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_cod_riga_ordine_for' in table 't09_righe_ordine_for' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_cod_riga_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_id_testata_ordine_for_t08() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_id_testata_ordine_for_t08Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_id_testata_ordine_for_t08' in table 't09_righe_ordine_f"& _ 
                            "or' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_id_testata_ordine_for_t08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_posizione' in table 't09_righe_ordine_for' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_id_articolo_t20' in table 't09_righe_ordine_for' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_qt_ordinata() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_qt_ordinataColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_qt_ordinata' in table 't09_righe_ordine_for' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_qt_ordinataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_qt_evasa() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_qt_evasaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_qt_evasa' in table 't09_righe_ordine_for' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_qt_evasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_prezzo_uni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_prezzo_uniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_prezzo_uni' in table 't09_righe_ordine_for' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_prezzo_uniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_dt_consegna' in table 't09_righe_ordine_for' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_id_stato_riga_ordine_t10() As String
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_id_stato_riga_ordine_t10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_id_stato_riga_ordine_t10' in table 't09_righe_ordine_fo"& _ 
                            "r' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_id_stato_riga_ordine_t10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_dt_creazione' in table 't09_righe_ordine_for' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_dt_modifica' in table 't09_righe_ordine_for' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet09_righe_ordine_for.t09_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_dt_cancellazione' in table 't09_righe_ordine_for' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablet09_righe_ordine_for.t09_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_testate_ordini_forRow() As t08_testate_ordini_forRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t09_righe_ordine_for_t08_testate_ordini_for")),t08_testate_ordini_forRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t09_righe_ordine_for_t08_testate_ordini_for"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRow() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRow() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli1")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRow() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli2")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t09_righe_ordine_for_t20_articoli2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_cod_riga_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_cod_riga_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_cod_riga_ordine_forNull()
            Me(Me.tablet09_righe_ordine_for.t09_cod_riga_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_id_testata_ordine_for_t08Null() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_id_testata_ordine_for_t08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_id_testata_ordine_for_t08Null()
            Me(Me.tablet09_righe_ordine_for.t09_id_testata_ordine_for_t08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_posizioneNull()
            Me(Me.tablet09_righe_ordine_for.t09_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_id_articolo_t20Null()
            Me(Me.tablet09_righe_ordine_for.t09_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_qt_ordinataNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_qt_ordinataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_qt_ordinataNull()
            Me(Me.tablet09_righe_ordine_for.t09_qt_ordinataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_qt_evasaNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_qt_evasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_qt_evasaNull()
            Me(Me.tablet09_righe_ordine_for.t09_qt_evasaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_prezzo_uniNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_prezzo_uniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_prezzo_uniNull()
            Me(Me.tablet09_righe_ordine_for.t09_prezzo_uniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_dt_consegnaNull()
            Me(Me.tablet09_righe_ordine_for.t09_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_id_stato_riga_ordine_t10Null() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_id_stato_riga_ordine_t10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_id_stato_riga_ordine_t10Null()
            Me(Me.tablet09_righe_ordine_for.t09_id_stato_riga_ordine_t10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_dt_creazioneNull()
            Me(Me.tablet09_righe_ordine_for.t09_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_dt_modificaNull()
            Me(Me.tablet09_righe_ordine_for.t09_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet09_righe_ordine_for.t09_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_dt_cancellazioneNull()
            Me(Me.tablet09_righe_ordine_for.t09_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t10_stati_riga_ordine_forRow
        Inherits Global.System.Data.DataRow
        
        Private tablet10_stati_riga_ordine_for As t10_stati_riga_ordine_forDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet10_stati_riga_ordine_for = CType(Me.Table,t10_stati_riga_ordine_forDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t10_id_stato_riga_ordine_for() As String
            Get
                Return CType(Me(Me.tablet10_stati_riga_ordine_for.t10_id_stato_riga_ordine_forColumn),String)
            End Get
            Set
                Me(Me.tablet10_stati_riga_ordine_for.t10_id_stato_riga_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t10_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet10_stati_riga_ordine_for.t10_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't10_descrizione' in table 't10_stati_riga_ordine_for' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablet10_stati_riga_ordine_for.t10_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t10_posizione() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablet10_stati_riga_ordine_for.t10_posizioneColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't10_posizione' in table 't10_stati_riga_ordine_for' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet10_stati_riga_ordine_for.t10_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist10_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet10_stati_riga_ordine_for.t10_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett10_descrizioneNull()
            Me(Me.tablet10_stati_riga_ordine_for.t10_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist10_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet10_stati_riga_ordine_for.t10_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett10_posizioneNull()
            Me(Me.tablet10_stati_riga_ordine_for.t10_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t11_fornitoriRow
        Inherits Global.System.Data.DataRow
        
        Private tablet11_fornitori As t11_fornitoriDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet11_fornitori = CType(Me.Table,t11_fornitoriDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_id_fornitore() As Integer
            Get
                Return CType(Me(Me.tablet11_fornitori.t11_id_fornitoreColumn),Integer)
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_id_fornitoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_cod_fornitore() As String
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_cod_fornitoreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_cod_fornitore' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_cod_fornitoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_descrizione' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_telefono' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_note() As String
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_note' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_creazione' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_modifica' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet11_fornitori.t11_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_cancellazione' in table 't11_fornitori' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet11_fornitori.t11_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_cod_fornitoreNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_cod_fornitoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_cod_fornitoreNull()
            Me(Me.tablet11_fornitori.t11_cod_fornitoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_descrizioneNull()
            Me(Me.tablet11_fornitori.t11_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_telefonoNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_telefonoNull()
            Me(Me.tablet11_fornitori.t11_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_noteNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_noteNull()
            Me(Me.tablet11_fornitori.t11_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_creazioneNull()
            Me(Me.tablet11_fornitori.t11_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_modificaNull()
            Me(Me.tablet11_fornitori.t11_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet11_fornitori.t11_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_cancellazioneNull()
            Me(Me.tablet11_fornitori.t11_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett08_testate_ordini_forRows() As t08_testate_ordini_forRow()
            If (Me.Table.ChildRelations("FK_t08_testate_ordini_for_t11_fornitori") Is Nothing) Then
                Return New t08_testate_ordini_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t08_testate_ordini_for_t11_fornitori")),t08_testate_ordini_forRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t14_clientiRow
        Inherits Global.System.Data.DataRow
        
        Private tablet14_clienti As t14_clientiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet14_clienti = CType(Me.Table,t14_clientiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_id_cliente() As Integer
            Get
                Return CType(Me(Me.tablet14_clienti.t14_id_clienteColumn),Integer)
            End Get
            Set
                Me(Me.tablet14_clienti.t14_id_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_cod_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_cod_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_cod_cliente' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_cod_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_descrizione' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_telefono' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_note() As String
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_note' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_creazione' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_modifica' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet14_clienti.t14_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_cancellazione' in table 't14_clienti' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet14_clienti.t14_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_cod_clienteNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_cod_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_cod_clienteNull()
            Me(Me.tablet14_clienti.t14_cod_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_descrizioneNull()
            Me(Me.tablet14_clienti.t14_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_telefonoNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_telefonoNull()
            Me(Me.tablet14_clienti.t14_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_noteNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_noteNull()
            Me(Me.tablet14_clienti.t14_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_creazioneNull()
            Me(Me.tablet14_clienti.t14_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_modificaNull()
            Me(Me.tablet14_clienti.t14_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet14_clienti.t14_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_cancellazioneNull()
            Me(Me.tablet14_clienti.t14_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t15_causali_ordini_forRow
        Inherits Global.System.Data.DataRow
        
        Private tablet15_causali_ordini_for As t15_causali_ordini_forDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet15_causali_ordini_for = CType(Me.Table,t15_causali_ordini_forDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_id_causale_ordine_for() As Integer
            Get
                Return CType(Me(Me.tablet15_causali_ordini_for.t15_id_causale_ordine_forColumn),Integer)
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_id_causale_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_cod_causale_ordine_for() As String
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_cod_causale_ordine_forColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_cod_causale_ordine_for' in table 't15_causali_ordini_fo"& _ 
                            "r' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_cod_causale_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_descrizione' in table 't15_causali_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_tipo_azione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_tipo_azioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_tipo_azione' in table 't15_causali_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_tipo_azioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_creazione' in table 't15_causali_ordini_for' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_modifica' in table 't15_causali_ordini_for' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet15_causali_ordini_for.t15_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_cancellazione' in table 't15_causali_ordini_for' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet15_causali_ordini_for.t15_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_cod_causale_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_cod_causale_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_cod_causale_ordine_forNull()
            Me(Me.tablet15_causali_ordini_for.t15_cod_causale_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_descrizioneNull()
            Me(Me.tablet15_causali_ordini_for.t15_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_tipo_azioneNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_tipo_azioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_tipo_azioneNull()
            Me(Me.tablet15_causali_ordini_for.t15_tipo_azioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_creazioneNull()
            Me(Me.tablet15_causali_ordini_for.t15_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_modificaNull()
            Me(Me.tablet15_causali_ordini_for.t15_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet15_causali_ordini_for.t15_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_cancellazioneNull()
            Me(Me.tablet15_causali_ordini_for.t15_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett08_testate_ordini_forRows() As t08_testate_ordini_forRow()
            If (Me.Table.ChildRelations("FK_t08_testate_ordini_for_t15_causali_ordini_for") Is Nothing) Then
                Return New t08_testate_ordini_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t08_testate_ordini_for_t15_causali_ordini_for")),t08_testate_ordini_forRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t21_articoli_macchineRow
        Inherits Global.System.Data.DataRow
        
        Private tablet21_articoli_macchine As t21_articoli_macchineDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet21_articoli_macchine = CType(Me.Table,t21_articoli_macchineDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_id_articolo_t20() As Integer
            Get
                Return CType(Me(Me.tablet21_articoli_macchine.t21_id_articolo_t20Column),Integer)
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_id_macchina_t05() As Integer
            Get
                Return CType(Me(Me.tablet21_articoli_macchine.t21_id_macchina_t05Column),Integer)
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_id_macchina_t05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_consumo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet21_articoli_macchine.t21_consumoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_consumo' in table 't21_articoli_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_consumoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet21_articoli_macchine.t21_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_posizione' in table 't21_articoli_macchine' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet21_articoli_macchine.t21_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_dt_creazione' in table 't21_articoli_macchine' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet21_articoli_macchine.t21_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_dt_modifica' in table 't21_articoli_macchine' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet21_articoli_macchine.t21_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_dt_cancellazione' in table 't21_articoli_macchine' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet21_articoli_macchine.t21_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_macchineRow() As t05_macchineRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t21_articoli_macchine_t05_macchine")),t05_macchineRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t21_articoli_macchine_t05_macchine"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRow() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRow() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli1")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRow() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli2")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t21_articoli_macchine_t20_articoli2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_consumoNull() As Boolean
            Return Me.IsNull(Me.tablet21_articoli_macchine.t21_consumoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_consumoNull()
            Me(Me.tablet21_articoli_macchine.t21_consumoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet21_articoli_macchine.t21_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_posizioneNull()
            Me(Me.tablet21_articoli_macchine.t21_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet21_articoli_macchine.t21_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_dt_creazioneNull()
            Me(Me.tablet21_articoli_macchine.t21_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet21_articoli_macchine.t21_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_dt_modificaNull()
            Me(Me.tablet21_articoli_macchine.t21_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet21_articoli_macchine.t21_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_dt_cancellazioneNull()
            Me(Me.tablet21_articoli_macchine.t21_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t22_articoli_articoliRow
        Inherits Global.System.Data.DataRow
        
        Private tablet22_articoli_articoli As t22_articoli_articoliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet22_articoli_articoli = CType(Me.Table,t22_articoli_articoliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_id_articolo_t20' in table 't22_articoli_articoli' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_padre_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_id_articolo_padre_t20' in table 't22_articoli_articoli'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_consumo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_consumoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_consumo' in table 't22_articoli_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_consumoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_posizione' in table 't22_articoli_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_dt_creazione' in table 't22_articoli_articoli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_dt_modifica' in table 't22_articoli_articoli' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet22_articoli_articoli.t22_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_dt_cancellazione' in table 't22_articoli_articoli' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet22_articoli_articoli.t22_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRowByFK_t22_articoli_articoli_t20_articoli() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRowByFK_t22_articoli_articoli_t20_articoli1() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli1")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRowByFK_t22_articoli_articoli_t20_articoli2() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli2")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRowByFK_t22_articoli_articoli_t20_articoli11() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli11")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli11"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRowByFK_t22_articoli_articoli_t20_articoli3() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli3")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRowByFK_t22_articoli_articoli_t20_articoli12() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli12")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t22_articoli_articoli_t20_articoli12"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_id_articolo_t20Null()
            Me(Me.tablet22_articoli_articoli.t22_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_id_articolo_padre_t20Null() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_id_articolo_padre_t20Null()
            Me(Me.tablet22_articoli_articoli.t22_id_articolo_padre_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_consumoNull() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_consumoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_consumoNull()
            Me(Me.tablet22_articoli_articoli.t22_consumoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_posizioneNull()
            Me(Me.tablet22_articoli_articoli.t22_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_dt_creazioneNull()
            Me(Me.tablet22_articoli_articoli.t22_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_dt_modificaNull()
            Me(Me.tablet22_articoli_articoli.t22_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet22_articoli_articoli.t22_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_dt_cancellazioneNull()
            Me(Me.tablet22_articoli_articoli.t22_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t25_matricoleRow
        Inherits Global.System.Data.DataRow
        
        Private tablet25_matricole As t25_matricoleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet25_matricole = CType(Me.Table,t25_matricoleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_id_matricola() As Integer
            Get
                Return CType(Me(Me.tablet25_matricole.t25_id_matricolaColumn),Integer)
            End Get
            Set
                Me(Me.tablet25_matricole.t25_id_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet25_matricole.t25_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't25_id_articolo_t20' in table 't25_matricole' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet25_matricole.t25_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_cod_matricola() As String
            Get
                Return CType(Me(Me.tablet25_matricole.t25_cod_matricolaColumn),String)
            End Get
            Set
                Me(Me.tablet25_matricole.t25_cod_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet25_matricole.t25_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't25_descrizione' in table 't25_matricole' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet25_matricole.t25_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet25_matricole.t25_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't25_dt_creazione' in table 't25_matricole' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet25_matricole.t25_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet25_matricole.t25_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't25_dt_cancellazione' in table 't25_matricole' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet25_matricole.t25_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRow() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t25_matricole_t20_articoli")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t25_matricole_t20_articoli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRow() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t25_matricole_t20_articoli1")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t25_matricole_t20_articoli1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRow() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t25_matricole_t20_articoli2")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t25_matricole_t20_articoli2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist25_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tablet25_matricole.t25_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett25_id_articolo_t20Null()
            Me(Me.tablet25_matricole.t25_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist25_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet25_matricole.t25_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett25_descrizioneNull()
            Me(Me.tablet25_matricole.t25_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist25_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet25_matricole.t25_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett25_dt_creazioneNull()
            Me(Me.tablet25_matricole.t25_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist25_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet25_matricole.t25_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett25_dt_cancellazioneNull()
            Me(Me.tablet25_matricole.t25_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t26_formule_prezziRow
        Inherits Global.System.Data.DataRow
        
        Private tablet26_formule_prezzi As t26_formule_prezziDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet26_formule_prezzi = CType(Me.Table,t26_formule_prezziDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_id_formula() As Integer
            Get
                Return CType(Me(Me.tablet26_formule_prezzi.t26_id_formulaColumn),Integer)
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_id_formulaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_cod_formula() As String
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_cod_formulaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_cod_formula' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_cod_formulaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_descrizione' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_formula_da() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_formula_daColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_formula_da' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_formula_daColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_formula_a() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_formula_aColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_formula_a' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_formula_aColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_prezzo_fisso() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_prezzo_fissoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_prezzo_fisso' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_prezzo_fissoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_fattore() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_fattoreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_fattore' in table 't26_formule_prezzi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_fattoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t26_arrotondamento() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet26_formule_prezzi.t26_arrotondamentoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't26_arrotondamento' in table 't26_formule_prezzi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet26_formule_prezzi.t26_arrotondamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_cod_formulaNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_cod_formulaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_cod_formulaNull()
            Me(Me.tablet26_formule_prezzi.t26_cod_formulaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_descrizioneNull()
            Me(Me.tablet26_formule_prezzi.t26_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_formula_daNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_formula_daColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_formula_daNull()
            Me(Me.tablet26_formule_prezzi.t26_formula_daColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_formula_aNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_formula_aColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_formula_aNull()
            Me(Me.tablet26_formule_prezzi.t26_formula_aColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_prezzo_fissoNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_prezzo_fissoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_prezzo_fissoNull()
            Me(Me.tablet26_formule_prezzi.t26_prezzo_fissoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_fattoreNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_fattoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_fattoreNull()
            Me(Me.tablet26_formule_prezzi.t26_fattoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist26_arrotondamentoNull() As Boolean
            Return Me.IsNull(Me.tablet26_formule_prezzi.t26_arrotondamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett26_arrotondamentoNull()
            Me(Me.tablet26_formule_prezzi.t26_arrotondamentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t27_versioneRow
        Inherits Global.System.Data.DataRow
        
        Private tablet27_versione As t27_versioneDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet27_versione = CType(Me.Table,t27_versioneDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Version_Major() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet27_versione.Version_MajorColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version_Major' in table 't27_versione' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet27_versione.Version_MajorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Version_Minor() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet27_versione.Version_MinorColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version_Minor' in table 't27_versione' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet27_versione.Version_MinorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Version_Build() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet27_versione.Version_BuildColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version_Build' in table 't27_versione' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet27_versione.Version_BuildColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVersion_MajorNull() As Boolean
            Return Me.IsNull(Me.tablet27_versione.Version_MajorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVersion_MajorNull()
            Me(Me.tablet27_versione.Version_MajorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVersion_MinorNull() As Boolean
            Return Me.IsNull(Me.tablet27_versione.Version_MinorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVersion_MinorNull()
            Me(Me.tablet27_versione.Version_MinorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVersion_BuildNull() As Boolean
            Return Me.IsNull(Me.tablet27_versione.Version_BuildColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVersion_BuildNull()
            Me(Me.tablet27_versione.Version_BuildColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class viewElencoIstanzeSempliceRow
        Inherits Global.System.Data.DataRow
        
        Private tableviewElencoIstanzeSemplice As viewElencoIstanzeSempliceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableviewElencoIstanzeSemplice = CType(Me.Table,viewElencoIstanzeSempliceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_istanza_macchina() As Integer
            Get
                Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_id_istanza_macchinaColumn),Integer)
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_id_istanza_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_descrizione' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_consegna' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_macchina_t05() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_id_macchina_t05Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_id_macchina_t05' in table 'viewElencoIstanzeSemplice' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_id_macchina_t05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_quantita() As Short
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_quantitaColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_quantita' in table 'viewElencoIstanzeSemplice' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_quantitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_stato_istanza_t07() As String
            Get
                Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_id_stato_istanza_t07Column),String)
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_id_stato_istanza_t07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_creazione' in table 'viewElencoIstanzeSemplice' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_modifica' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t06_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_dt_cancellazione' in table 'viewElencoIstanzeSemplice' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t06_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANNO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.ANNOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANNO' in table 'viewElencoIstanzeSemplice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.ANNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_id_stato_istanza() As String
            Get
                Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_id_stato_istanzaColumn),String)
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_id_stato_istanzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_descrizione' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_posizione() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_posizioneColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_posizione' in table 'viewElencoIstanzeSemplice' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_creazione' in table 'viewElencoIstanzeSemplice' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_modifica' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t07_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t07_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't07_dt_cancellazione' in table 'viewElencoIstanzeSemplice' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t07_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_id_macchina() As Integer
            Get
                Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_id_macchinaColumn),Integer)
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_id_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_cod_macchina() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_cod_macchinaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_cod_macchina' in table 'viewElencoIstanzeSemplice' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_cod_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_descrizione' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_creazione' in table 'viewElencoIstanzeSemplice' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_modifica' in table 'viewElencoIstanzeSemplice' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t05_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewElencoIstanzeSemplice.t05_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't05_dt_cancellazione' in table 'viewElencoIstanzeSemplice' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewElencoIstanzeSemplice.t05_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_descrizioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_consegnaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_id_macchina_t05Null() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_id_macchina_t05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_id_macchina_t05Null()
            Me(Me.tableviewElencoIstanzeSemplice.t06_id_macchina_t05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_quantitaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_quantitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_quantitaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_quantitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_creazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_modificaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t06_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_dt_cancellazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t06_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANNONull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.ANNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANNONull()
            Me(Me.tableviewElencoIstanzeSemplice.ANNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t07_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_descrizioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t07_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_posizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t07_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_posizioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t07_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t07_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_creazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t07_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t07_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_modificaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t07_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist07_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t07_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett07_dt_cancellazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t07_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_cod_macchinaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t05_cod_macchinaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_cod_macchinaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t05_cod_macchinaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t05_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_descrizioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t05_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t05_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_creazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t05_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t05_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_modificaNull()
            Me(Me.tableviewElencoIstanzeSemplice.t05_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist05_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewElencoIstanzeSemplice.t05_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett05_dt_cancellazioneNull()
            Me(Me.tableviewElencoIstanzeSemplice.t05_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class viewTestateOrdiniCliConStatoRow
        Inherits Global.System.Data.DataRow
        
        Private tableviewTestateOrdiniCliConStato As viewTestateOrdiniCliConStatoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableviewTestateOrdiniCliConStato = CType(Me.Table,viewTestateOrdiniCliConStatoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_id_testata_ordine_cli() As Integer
            Get
                Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_id_testata_ordine_cliColumn),Integer)
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_id_testata_ordine_cliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_cod_testata_ordine_cli() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_cod_testata_ordine_cliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_cod_testata_ordine_cli' in table 'viewTestateOrdiniCliC"& _ 
                            "onStato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_cod_testata_ordine_cliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_descrizione' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_id_cliente_t14() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_id_cliente_t14Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_id_cliente_t14' in table 'viewTestateOrdiniCliConStato'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_id_cliente_t14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_dt_ordine() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_ordineColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_dt_ordine' in table 'viewTestateOrdiniCliConStato' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_dt_consegna' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_tipo_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_tipo_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_tipo_ordine' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_tipo_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_dt_creazione' in table 'viewTestateOrdiniCliConStato' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_dt_modifica' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't12_dt_cancellazione' in table 'viewTestateOrdiniCliConStat"& _ 
                            "o' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_id_cliente() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_id_clienteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_id_cliente' in table 'viewTestateOrdiniCliConStato' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_id_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_cod_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_cod_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_cod_cliente' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_cod_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_descrizione' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_telefono' in table 'viewTestateOrdiniCliConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_note() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_note' in table 'viewTestateOrdiniCliConStato' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_creazione' in table 'viewTestateOrdiniCliConStato' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_modifica' in table 'viewTestateOrdiniCliConStato' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t14_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't14_dt_cancellazione' in table 'viewTestateOrdiniCliConStat"& _ 
                            "o' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANNO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniCliConStato.ANNOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANNO' in table 'viewTestateOrdiniCliConStato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.ANNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t12_stato_testata_ordine_cli() As String
            Get
                Return CType(Me(Me.tableviewTestateOrdiniCliConStato.t12_stato_testata_ordine_cliColumn),String)
            End Get
            Set
                Me(Me.tableviewTestateOrdiniCliConStato.t12_stato_testata_ordine_cliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_cod_testata_ordine_cliNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_cod_testata_ordine_cliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_cod_testata_ordine_cliNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_cod_testata_ordine_cliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_descrizioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_id_cliente_t14Null() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_id_cliente_t14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_id_cliente_t14Null()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_id_cliente_t14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_dt_ordineNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_dt_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_dt_ordineNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_dt_consegnaNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_tipo_ordineNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_tipo_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_tipo_ordineNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_tipo_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_dt_creazioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_dt_modificaNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist12_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t12_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett12_dt_cancellazioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t12_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_id_clienteNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_id_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_id_clienteNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_id_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_cod_clienteNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_cod_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_cod_clienteNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_cod_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_descrizioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_telefonoNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_noteNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_noteNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_creazioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_modificaNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist14_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.t14_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett14_dt_cancellazioneNull()
            Me(Me.tableviewTestateOrdiniCliConStato.t14_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANNONull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniCliConStato.ANNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANNONull()
            Me(Me.tableviewTestateOrdiniCliConStato.ANNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class viewTestateOrdiniConStatoRow
        Inherits Global.System.Data.DataRow
        
        Private tableviewTestateOrdiniConStato As viewTestateOrdiniConStatoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableviewTestateOrdiniConStato = CType(Me.Table,viewTestateOrdiniConStatoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_testata_ordine_for() As Integer
            Get
                Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_id_testata_ordine_forColumn),Integer)
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_id_testata_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_cod_testata_ordine_for() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_cod_testata_ordine_forColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_cod_testata_ordine_for' in table 'viewTestateOrdiniConS"& _ 
                            "tato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_cod_testata_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_descrizione' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_id_fornitore_t11' in table 'viewTestateOrdiniConStato' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_ordine() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_dt_ordineColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_ordine' in table 'viewTestateOrdiniConStato' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_dt_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_consegna() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_dt_consegnaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_consegna' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_dt_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_tipo_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_tipo_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_tipo_ordine' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_tipo_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_id_causale_ordine_for_t15() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_id_causale_ordine_for_t15Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_id_causale_ordine_for_t15' in table 'viewTestateOrdiniC"& _ 
                            "onStato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_id_causale_ordine_for_t15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_creazione' in table 'viewTestateOrdiniConStato' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_modifica' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't08_dt_cancellazione' in table 'viewTestateOrdiniConStato' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_id_causale_ordine_for() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_id_causale_ordine_forColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_id_causale_ordine_for' in table 'viewTestateOrdiniConSt"& _ 
                            "ato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_id_causale_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_cod_causale_ordine_for() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_cod_causale_ordine_forColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_cod_causale_ordine_for' in table 'viewTestateOrdiniConS"& _ 
                            "tato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_cod_causale_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_descrizione' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_tipo_azione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_tipo_azioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_tipo_azione' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_tipo_azioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_creazione' in table 'viewTestateOrdiniConStato' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_modifica' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t15_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t15_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't15_dt_cancellazione' in table 'viewTestateOrdiniConStato' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t15_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_id_fornitore() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_id_fornitoreColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_id_fornitore' in table 'viewTestateOrdiniConStato' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_id_fornitoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_cod_fornitore() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_cod_fornitoreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_cod_fornitore' in table 'viewTestateOrdiniConStato' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_cod_fornitoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_descrizione' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_telefono' in table 'viewTestateOrdiniConStato' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_note() As String
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_note' in table 'viewTestateOrdiniConStato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_creazione' in table 'viewTestateOrdiniConStato' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_modifica' in table 'viewTestateOrdiniConStato' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t11_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.t11_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't11_dt_cancellazione' in table 'viewTestateOrdiniConStato' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t11_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANNO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableviewTestateOrdiniConStato.ANNOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANNO' in table 'viewTestateOrdiniConStato' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.ANNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t08_stato_testata_ordine_for() As String
            Get
                Return CType(Me(Me.tableviewTestateOrdiniConStato.t08_stato_testata_ordine_forColumn),String)
            End Get
            Set
                Me(Me.tableviewTestateOrdiniConStato.t08_stato_testata_ordine_forColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_cod_testata_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_cod_testata_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_cod_testata_ordine_forNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_cod_testata_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_descrizioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_id_fornitore_t11Null()
            Me(Me.tableviewTestateOrdiniConStato.t08_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_ordineNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_dt_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_ordineNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_dt_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_consegnaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_dt_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_consegnaNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_dt_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_tipo_ordineNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_tipo_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_tipo_ordineNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_tipo_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_id_causale_ordine_for_t15Null() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_id_causale_ordine_for_t15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_id_causale_ordine_for_t15Null()
            Me(Me.tableviewTestateOrdiniConStato.t08_id_causale_ordine_for_t15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_creazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_modificaNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist08_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t08_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett08_dt_cancellazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t08_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_id_causale_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_id_causale_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_id_causale_ordine_forNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_id_causale_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_cod_causale_ordine_forNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_cod_causale_ordine_forColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_cod_causale_ordine_forNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_cod_causale_ordine_forColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_descrizioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_tipo_azioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_tipo_azioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_tipo_azioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_tipo_azioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_creazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_modificaNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist15_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t15_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett15_dt_cancellazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t15_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_id_fornitoreNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_id_fornitoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_id_fornitoreNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_id_fornitoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_cod_fornitoreNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_cod_fornitoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_cod_fornitoreNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_cod_fornitoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_descrizioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_telefonoNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_noteNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_noteNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_creazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_modificaNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist11_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.t11_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett11_dt_cancellazioneNull()
            Me(Me.tableviewTestateOrdiniConStato.t11_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANNONull() As Boolean
            Return Me.IsNull(Me.tableviewTestateOrdiniConStato.ANNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANNONull()
            Me(Me.tableviewTestateOrdiniConStato.ANNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dvArticoliConMatricoleRow
        Inherits Global.System.Data.DataRow
        
        Private tabledvArticoliConMatricole As dvArticoliConMatricoleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledvArticoliConMatricole = CType(Me.Table,dvArticoliConMatricoleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tabledvArticoliConMatricole.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledvArticoliConMatricole.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'dvArticoliConMatricole' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tabledvArticoliConMatricole.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'dvArticoliConMatricole' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledvArticoliConMatricole.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 'dvArticoliConMatricole' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_cod_matricola() As String
            Get
                Return CType(Me(Me.tabledvArticoliConMatricole.t25_cod_matricolaColumn),String)
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t25_cod_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledvArticoliConMatricole.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 'dvArticoliConMatricole' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledvArticoliConMatricole.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'dvArticoliConMatricole' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledvArticoliConMatricole.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tabledvArticoliConMatricole.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tabledvArticoliConMatricole.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tabledvArticoliConMatricole.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tabledvArticoliConMatricole.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tabledvArticoliConMatricole.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tabledvArticoliConMatricole.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tabledvArticoliConMatricole.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tabledvArticoliConMatricole.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tabledvArticoliConMatricole.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tabledvArticoliConMatricole.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t28_testate_ordini_cliRow
        Inherits Global.System.Data.DataRow
        
        Private tablet28_testate_ordini_cli As t28_testate_ordini_cliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet28_testate_ordini_cli = CType(Me.Table,t28_testate_ordini_cliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_id() As Integer
            Get
                Return CType(Me(Me.tablet28_testate_ordini_cli.t28_idColumn),Integer)
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cod() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_codColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cod' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_codColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_descrizione' in table 't28_testate_ordini_cli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_commessa() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_commessaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_commessa' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_commessaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_commessa_del() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_commessa_delColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_commessa_del' in table 't28_testate_ordini_cli' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_commessa_delColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_consegna() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_consegnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_consegna' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cliente' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cliente2() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_cliente2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cliente2' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_cliente2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_telefono' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_rif_reda() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_rif_redaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_rif_reda' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_rif_redaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_vendita() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_venditaColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_vendita' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_venditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_riparazione() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_riparazioneColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_riparazione' in table 't28_testate_ordini_cli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_riparazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_completamento_fornitura() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_completamento_fornituraColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_completamento_fornitura' in table 't28_testate_ordini_c"& _ 
                            "li' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_completamento_fornituraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_aspetto_esteriore() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_aspetto_esterioreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_aspetto_esteriore' in table 't28_testate_ordini_cli' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_aspetto_esterioreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_misure() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_misureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_misure' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_misureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_peso() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_pesoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_peso' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_pesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_rif_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_rif_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_rif_ordine' in table 't28_testate_ordini_cli' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_rif_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_note() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_note' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_spedizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_spedizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_spedizione' in table 't28_testate_ordini_cli' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_spedizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_porto() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_portoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_porto' in table 't28_testate_ordini_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_portoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_creazione' in table 't28_testate_ordini_cli' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_modifica() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_dt_modificaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_modifica' in table 't28_testate_ordini_cli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_cancellazione' in table 't28_testate_ordini_cli' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_stato_testata_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_stato_testata_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_stato_testata_ordine' in table 't28_testate_ordini_cli'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_stato_testata_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_data_evasione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet28_testate_ordini_cli.t28_data_evasioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_data_evasione' in table 't28_testate_ordini_cli' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_testate_ordini_cli.t28_data_evasioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_codNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_codColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_codNull()
            Me(Me.tablet28_testate_ordini_cli.t28_codColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_descrizioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_commessaNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_commessaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_commessaNull()
            Me(Me.tablet28_testate_ordini_cli.t28_commessaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_commessa_delNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_commessa_delColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_commessa_delNull()
            Me(Me.tablet28_testate_ordini_cli.t28_commessa_delColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_consegnaNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_consegnaNull()
            Me(Me.tablet28_testate_ordini_cli.t28_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_clienteNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_clienteNull()
            Me(Me.tablet28_testate_ordini_cli.t28_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_cliente2Null() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_cliente2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_cliente2Null()
            Me(Me.tablet28_testate_ordini_cli.t28_cliente2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_telefonoNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_telefonoNull()
            Me(Me.tablet28_testate_ordini_cli.t28_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_rif_redaNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_rif_redaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_rif_redaNull()
            Me(Me.tablet28_testate_ordini_cli.t28_rif_redaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_venditaNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_venditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_venditaNull()
            Me(Me.tablet28_testate_ordini_cli.t28_venditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_riparazioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_riparazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_riparazioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_riparazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_completamento_fornituraNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_completamento_fornituraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_completamento_fornituraNull()
            Me(Me.tablet28_testate_ordini_cli.t28_completamento_fornituraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_aspetto_esterioreNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_aspetto_esterioreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_aspetto_esterioreNull()
            Me(Me.tablet28_testate_ordini_cli.t28_aspetto_esterioreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_misureNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_misureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_misureNull()
            Me(Me.tablet28_testate_ordini_cli.t28_misureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_pesoNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_pesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_pesoNull()
            Me(Me.tablet28_testate_ordini_cli.t28_pesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_rif_ordineNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_rif_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_rif_ordineNull()
            Me(Me.tablet28_testate_ordini_cli.t28_rif_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_noteNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_noteNull()
            Me(Me.tablet28_testate_ordini_cli.t28_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_spedizioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_spedizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_spedizioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_spedizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_portoNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_portoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_portoNull()
            Me(Me.tablet28_testate_ordini_cli.t28_portoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_creazioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_modificaNull()
            Me(Me.tablet28_testate_ordini_cli.t28_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_cancellazioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_stato_testata_ordineNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_stato_testata_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_stato_testata_ordineNull()
            Me(Me.tablet28_testate_ordini_cli.t28_stato_testata_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_data_evasioneNull() As Boolean
            Return Me.IsNull(Me.tablet28_testate_ordini_cli.t28_data_evasioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_data_evasioneNull()
            Me(Me.tablet28_testate_ordini_cli.t28_data_evasioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett29_righe_ordine_cliRows() As t29_righe_ordine_cliRow()
            If (Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t28_testate_ordini_cli") Is Nothing) Then
                Return New t29_righe_ordine_cliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t28_testate_ordini_cli")),t29_righe_ordine_cliRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t29_righe_ordine_cliRow
        Inherits Global.System.Data.DataRow
        
        Private tablet29_righe_ordine_cli As t29_righe_ordine_cliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet29_righe_ordine_cli = CType(Me.Table,t29_righe_ordine_cliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id() As Integer
            Get
                Return CType(Me(Me.tablet29_righe_ordine_cli.t29_idColumn),Integer)
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id_testata_t28() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_id_testata_t28Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_id_testata_t28' in table 't29_righe_ordine_cli' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_id_testata_t28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_cod() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_codColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_cod' in table 't29_righe_ordine_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_codColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione' in table 't29_righe_ordine_cli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_id_articolo_t20' in table 't29_righe_ordine_cli' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_matricola() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_matricolaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_matricola' in table 't29_righe_ordine_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_qt_ordinata() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_qt_ordinataColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_qt_ordinata' in table 't29_righe_ordine_cli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_qt_ordinataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_prezzo_uni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_prezzo_uniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_prezzo_uni' in table 't29_righe_ordine_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_prezzo_uniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_prezzo_tota() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_prezzo_totaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_prezzo_tota' in table 't29_righe_ordine_cli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_prezzo_totaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_creazione' in table 't29_righe_ordine_cli' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_modifica() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_dt_modificaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_modifica' in table 't29_righe_ordine_cli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_cancellazione' in table 't29_righe_ordine_cli' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_stato_riga_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_stato_riga_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_stato_riga_ordine' in table 't29_righe_ordine_cli' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_stato_riga_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_qt_evasa() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_qt_evasaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_qt_evasa' in table 't29_righe_ordine_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_qt_evasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_data_evasione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_data_evasioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_data_evasione' in table 't29_righe_ordine_cli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_data_evasioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_posizione' in table 't29_righe_ordine_cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione_commerciale_it() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_itColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione_commerciale_it' in table 't29_righe_ordine_"& _ 
                            "cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_itColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione_commerciale_en() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione_commerciale_en' in table 't29_righe_ordine_"& _ 
                            "cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione_commerciale_es() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_esColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione_commerciale_es' in table 't29_righe_ordine_"& _ 
                            "cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_esColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione_commerciale_fr() As String
            Get
                Try 
                    Return CType(Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_frColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione_commerciale_fr' in table 't29_righe_ordine_"& _ 
                            "cli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_testate_ordini_cliRow() As t28_testate_ordini_cliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t28_testate_ordini_cli")),t28_testate_ordini_cliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t28_testate_ordini_cli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_articoliRow() As t20_articoliRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli")),t20_articoliRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ListinoRicambiRow() As ListinoRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli1")),ListinoRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigheOrdiniRicambiRow() As RigheOrdiniRicambiRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli2")),RigheOrdiniRicambiRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_t29_righe_ordine_cli_t20_articoli2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_id_testata_t28Null() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_id_testata_t28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_id_testata_t28Null()
            Me(Me.tablet29_righe_ordine_cli.t29_id_testata_t28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_codNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_codColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_codNull()
            Me(Me.tablet29_righe_ordine_cli.t29_codColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizioneNull()
            Me(Me.tablet29_righe_ordine_cli.t29_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_id_articolo_t20Null()
            Me(Me.tablet29_righe_ordine_cli.t29_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_matricolaNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_matricolaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_matricolaNull()
            Me(Me.tablet29_righe_ordine_cli.t29_matricolaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_qt_ordinataNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_qt_ordinataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_qt_ordinataNull()
            Me(Me.tablet29_righe_ordine_cli.t29_qt_ordinataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_prezzo_uniNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_prezzo_uniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_prezzo_uniNull()
            Me(Me.tablet29_righe_ordine_cli.t29_prezzo_uniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_prezzo_totaNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_prezzo_totaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_prezzo_totaNull()
            Me(Me.tablet29_righe_ordine_cli.t29_prezzo_totaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_creazioneNull()
            Me(Me.tablet29_righe_ordine_cli.t29_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_modificaNull()
            Me(Me.tablet29_righe_ordine_cli.t29_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_cancellazioneNull()
            Me(Me.tablet29_righe_ordine_cli.t29_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_stato_riga_ordineNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_stato_riga_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_stato_riga_ordineNull()
            Me(Me.tablet29_righe_ordine_cli.t29_stato_riga_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_qt_evasaNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_qt_evasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_qt_evasaNull()
            Me(Me.tablet29_righe_ordine_cli.t29_qt_evasaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_data_evasioneNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_data_evasioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_data_evasioneNull()
            Me(Me.tablet29_righe_ordine_cli.t29_data_evasioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_posizioneNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_posizioneNull()
            Me(Me.tablet29_righe_ordine_cli.t29_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizione_commerciale_itNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_itColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizione_commerciale_itNull()
            Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_itColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizione_commerciale_enNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizione_commerciale_enNull()
            Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizione_commerciale_esNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_esColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizione_commerciale_esNull()
            Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_esColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizione_commerciale_frNull() As Boolean
            Return Me.IsNull(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizione_commerciale_frNull()
            Me(Me.tablet29_righe_ordine_cli.t29_descrizione_commerciale_frColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t20_articoliRow
        Inherits Global.System.Data.DataRow
        
        Private tablet20_articoli As t20_articoliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet20_articoli = CType(Me.Table,t20_articoliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tablet20_articoli.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tablet20_articoli.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_qt_disponibile() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_qt_disponibileColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_qt_disponibile' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_qt_disponibileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_lotto_riordino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_lotto_riordinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_lotto_riordino' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_lotto_riordinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_creazione' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_modifica' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_id_fornitore_t11' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo_forzato' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablet20_articoli.t20_timestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_timestamp' in table 't20_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet20_articoli.t20_timestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tablet20_articoli.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tablet20_articoli.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tablet20_articoli.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_qt_disponibileNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_qt_disponibileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_qt_disponibileNull()
            Me(Me.tablet20_articoli.t20_qt_disponibileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_lotto_riordinoNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_lotto_riordinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_lotto_riordinoNull()
            Me(Me.tablet20_articoli.t20_lotto_riordinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tablet20_articoli.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_creazioneNull()
            Me(Me.tablet20_articoli.t20_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_modificaNull()
            Me(Me.tablet20_articoli.t20_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tablet20_articoli.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_id_fornitore_t11Null()
            Me(Me.tablet20_articoli.t20_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzo_forzatoNull()
            Me(Me.tablet20_articoli.t20_prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tablet20_articoli.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_timestampNull() As Boolean
            Return Me.IsNull(Me.tablet20_articoli.t20_timestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_timestampNull()
            Me(Me.tablet20_articoli.t20_timestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett09_righe_ordine_forRows() As t09_righe_ordine_forRow()
            If (Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli") Is Nothing) Then
                Return New t09_righe_ordine_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli")),t09_righe_ordine_forRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett21_articoli_macchineRows() As t21_articoli_macchineRow()
            If (Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli") Is Nothing) Then
                Return New t21_articoli_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli")),t21_articoli_macchineRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli1() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli1") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli1")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett25_matricoleRows() As t25_matricoleRow()
            If (Me.Table.ChildRelations("FK_t25_matricole_t20_articoli") Is Nothing) Then
                Return New t25_matricoleRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t25_matricole_t20_articoli")),t25_matricoleRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett29_righe_ordine_cliRows() As t29_righe_ordine_cliRow()
            If (Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli") Is Nothing) Then
                Return New t29_righe_ordine_cliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli")),t29_righe_ordine_cliRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class v01_articoliRow
        Inherits Global.System.Data.DataRow
        
        Private tablev01_articoli As v01_articoliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablev01_articoli = CType(Me.Table,v01_articoliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tablev01_articoli.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tablev01_articoli.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_qt_disponibile() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_qt_disponibileColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_qt_disponibile' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_qt_disponibileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_lotto_riordino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_lotto_riordinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_lotto_riordino' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_lotto_riordinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_creazione' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_modifica' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_id_fornitore_t11' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo_forzato' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablev01_articoli.t20_timestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_timestamp' in table 'v01_articoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev01_articoli.t20_timestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tablev01_articoli.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tablev01_articoli.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tablev01_articoli.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_qt_disponibileNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_qt_disponibileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_qt_disponibileNull()
            Me(Me.tablev01_articoli.t20_qt_disponibileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_lotto_riordinoNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_lotto_riordinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_lotto_riordinoNull()
            Me(Me.tablev01_articoli.t20_lotto_riordinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tablev01_articoli.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_creazioneNull()
            Me(Me.tablev01_articoli.t20_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_modificaNull()
            Me(Me.tablev01_articoli.t20_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tablev01_articoli.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_id_fornitore_t11Null()
            Me(Me.tablev01_articoli.t20_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzo_forzatoNull()
            Me(Me.tablev01_articoli.t20_prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tablev01_articoli.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_timestampNull() As Boolean
            Return Me.IsNull(Me.tablev01_articoli.t20_timestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_timestampNull()
            Me(Me.tablev01_articoli.t20_timestampColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class v03_gruppiRow
        Inherits Global.System.Data.DataRow
        
        Private tablev03_gruppi As v03_gruppiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablev03_gruppi = CType(Me.Table,v03_gruppiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tablev03_gruppi.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_qt_disponibile() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_qt_disponibileColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_qt_disponibile' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_qt_disponibileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_lotto_riordino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_lotto_riordinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_lotto_riordino' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_lotto_riordinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_creazione' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_modifica' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_id_fornitore_t11' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo_forzato' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablev03_gruppi.t20_timestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_timestamp' in table 'v03_gruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablev03_gruppi.t20_timestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tablev03_gruppi.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tablev03_gruppi.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tablev03_gruppi.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_qt_disponibileNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_qt_disponibileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_qt_disponibileNull()
            Me(Me.tablev03_gruppi.t20_qt_disponibileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_lotto_riordinoNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_lotto_riordinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_lotto_riordinoNull()
            Me(Me.tablev03_gruppi.t20_lotto_riordinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tablev03_gruppi.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_creazioneNull()
            Me(Me.tablev03_gruppi.t20_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_modificaNull()
            Me(Me.tablev03_gruppi.t20_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tablev03_gruppi.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_id_fornitore_t11Null()
            Me(Me.tablev03_gruppi.t20_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzo_forzatoNull()
            Me(Me.tablev03_gruppi.t20_prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tablev03_gruppi.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_timestampNull() As Boolean
            Return Me.IsNull(Me.tablev03_gruppi.t20_timestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_timestampNull()
            Me(Me.tablev03_gruppi.t20_timestampColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ListinoRicambiRow
        Inherits Global.System.Data.DataRow
        
        Private tableListinoRicambi As ListinoRicambiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableListinoRicambi = CType(Me.Table,ListinoRicambiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tableListinoRicambi.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t25_cod_matricola() As String
            Get
                Return CType(Me(Me.tableListinoRicambi.t25_cod_matricolaColumn),String)
            End Get
            Set
                Me(Me.tableListinoRicambi.t25_cod_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo_forzato' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 'ListinoRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione_commerciale_it() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_descrizione_commerciale_itColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione_commerciale_it' in table 'ListinoRicambi' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_descrizione_commerciale_itColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione_commerciale_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_descrizione_commerciale_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione_commerciale_en' in table 'ListinoRicambi' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_descrizione_commerciale_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione_commerciale_es() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_descrizione_commerciale_esColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione_commerciale_es' in table 'ListinoRicambi' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_descrizione_commerciale_esColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione_commerciale_fr() As String
            Get
                Try 
                    Return CType(Me(Me.tableListinoRicambi.t20_descrizione_commerciale_frColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione_commerciale_fr' in table 'ListinoRicambi' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListinoRicambi.t20_descrizione_commerciale_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tableListinoRicambi.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tableListinoRicambi.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tableListinoRicambi.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzo_forzatoNull()
            Me(Me.tableListinoRicambi.t20_prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tableListinoRicambi.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tableListinoRicambi.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizione_commerciale_itNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_descrizione_commerciale_itColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizione_commerciale_itNull()
            Me(Me.tableListinoRicambi.t20_descrizione_commerciale_itColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizione_commerciale_enNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_descrizione_commerciale_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizione_commerciale_enNull()
            Me(Me.tableListinoRicambi.t20_descrizione_commerciale_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizione_commerciale_esNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_descrizione_commerciale_esColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizione_commerciale_esNull()
            Me(Me.tableListinoRicambi.t20_descrizione_commerciale_esColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizione_commerciale_frNull() As Boolean
            Return Me.IsNull(Me.tableListinoRicambi.t20_descrizione_commerciale_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizione_commerciale_frNull()
            Me(Me.tableListinoRicambi.t20_descrizione_commerciale_frColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett09_righe_ordine_forRows() As t09_righe_ordine_forRow()
            If (Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli1") Is Nothing) Then
                Return New t09_righe_ordine_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli1")),t09_righe_ordine_forRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett21_articoli_macchineRows() As t21_articoli_macchineRow()
            If (Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli1") Is Nothing) Then
                Return New t21_articoli_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli1")),t21_articoli_macchineRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli2() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli2") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli2")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli11() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli11") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli11")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett25_matricoleRows() As t25_matricoleRow()
            If (Me.Table.ChildRelations("FK_t25_matricole_t20_articoli1") Is Nothing) Then
                Return New t25_matricoleRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t25_matricole_t20_articoli1")),t25_matricoleRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett29_righe_ordine_cliRows() As t29_righe_ordine_cliRow()
            If (Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli1") Is Nothing) Then
                Return New t29_righe_ordine_cliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli1")),t29_righe_ordine_cliRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t28_anniRow
        Inherits Global.System.Data.DataRow
        
        Private tablet28_anni As t28_anniDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet28_anni = CType(Me.Table,t28_anniDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anni() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablet28_anni.AnniColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Anni' in table 't28_anni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablet28_anni.AnniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAnniNull() As Boolean
            Return Me.IsNull(Me.tablet28_anni.AnniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAnniNull()
            Me(Me.tablet28_anni.AnniColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class RigheOrdiniRicambiRow
        Inherits Global.System.Data.DataRow
        
        Private tableRigheOrdiniRicambi As RigheOrdiniRicambiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRigheOrdiniRicambi = CType(Me.Table,RigheOrdiniRicambiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_id() As Integer
            Get
                Return CType(Me(Me.tableRigheOrdiniRicambi.t28_idColumn),Integer)
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cod() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_codColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cod' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_codColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_descrizione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_commessa() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_commessaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_commessa' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_commessaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_commessa_del() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_commessa_delColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_commessa_del' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_commessa_delColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_consegna() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_consegnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_consegna' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_consegnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cliente' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_cliente2() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_cliente2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_cliente2' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_cliente2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_telefono' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_rif_reda() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_rif_redaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_rif_reda' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_rif_redaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_vendita() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_venditaColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_vendita' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_venditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_riparazione() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_riparazioneColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_riparazione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_riparazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_completamento_fornitura() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_completamento_fornituraColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_completamento_fornitura' in table 'RigheOrdiniRicambi' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_completamento_fornituraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_aspetto_esteriore() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_aspetto_esterioreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_aspetto_esteriore' in table 'RigheOrdiniRicambi' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_aspetto_esterioreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_misure() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_misureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_misure' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_misureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_peso() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_pesoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_peso' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_pesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_rif_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_rif_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_rif_ordine' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_rif_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_note() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_note' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_spedizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_spedizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_spedizione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_spedizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_porto() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_portoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_porto' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_portoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_creazione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_modifica() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_dt_modificaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_modifica' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_dt_cancellazione' in table 'RigheOrdiniRicambi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_stato_testata_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_stato_testata_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_stato_testata_ordine' in table 'RigheOrdiniRicambi' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_stato_testata_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t28_data_evasione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t28_data_evasioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't28_data_evasione' in table 'RigheOrdiniRicambi' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t28_data_evasioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id() As Integer
            Get
                Return CType(Me(Me.tableRigheOrdiniRicambi.t29_idColumn),Integer)
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id_testata_t28() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_id_testata_t28Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_id_testata_t28' in table 'RigheOrdiniRicambi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_id_testata_t28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_cod() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_codColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_cod' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_codColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_descrizione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_id_articolo_t20' in table 'RigheOrdiniRicambi' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_matricola() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_matricolaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_matricola' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_matricolaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_qt_ordinata() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_qt_ordinataColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_qt_ordinata' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_qt_ordinataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_prezzo_uni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_prezzo_uniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_prezzo_uni' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_prezzo_uniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_prezzo_tota() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_prezzo_totaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_prezzo_tota' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_prezzo_totaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_creazione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_modifica() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_dt_modificaColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_modifica' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_dt_cancellazione' in table 'RigheOrdiniRicambi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_stato_riga_ordine() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_stato_riga_ordineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_stato_riga_ordine' in table 'RigheOrdiniRicambi' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_stato_riga_ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_qt_evasa() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_qt_evasaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_qt_evasa' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_qt_evasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_data_evasione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_data_evasioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_data_evasione' in table 'RigheOrdiniRicambi' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_data_evasioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t29_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t29_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't29_posizione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t29_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tableRigheOrdiniRicambi.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_prezzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_qt_disponibile() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_qt_disponibileColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_qt_disponibile' in table 'RigheOrdiniRicambi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_qt_disponibileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_lotto_riordino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_lotto_riordinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_lotto_riordino' in table 'RigheOrdiniRicambi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_lotto_riordinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_dt_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_creazione' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_dt_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_modifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_dt_modificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_modifica' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_dt_modificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_dt_cancellazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_dt_cancellazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_dt_cancellazione' in table 'RigheOrdiniRicambi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_dt_cancellazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_fornitore_t11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_id_fornitore_t11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_id_fornitore_t11' in table 'RigheOrdiniRicambi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_id_fornitore_t11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_prezzo_forzato' in table 'RigheOrdiniRicambi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableRigheOrdiniRicambi.t20_timestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_timestamp' in table 'RigheOrdiniRicambi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRigheOrdiniRicambi.t20_timestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_codNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_codColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_codNull()
            Me(Me.tableRigheOrdiniRicambi.t28_codColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_descrizioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_commessaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_commessaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_commessaNull()
            Me(Me.tableRigheOrdiniRicambi.t28_commessaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_commessa_delNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_commessa_delColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_commessa_delNull()
            Me(Me.tableRigheOrdiniRicambi.t28_commessa_delColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_consegnaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_consegnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_consegnaNull()
            Me(Me.tableRigheOrdiniRicambi.t28_consegnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_clienteNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_clienteNull()
            Me(Me.tableRigheOrdiniRicambi.t28_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_cliente2Null() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_cliente2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_cliente2Null()
            Me(Me.tableRigheOrdiniRicambi.t28_cliente2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_telefonoNull()
            Me(Me.tableRigheOrdiniRicambi.t28_telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_rif_redaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_rif_redaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_rif_redaNull()
            Me(Me.tableRigheOrdiniRicambi.t28_rif_redaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_venditaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_venditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_venditaNull()
            Me(Me.tableRigheOrdiniRicambi.t28_venditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_riparazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_riparazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_riparazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_riparazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_completamento_fornituraNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_completamento_fornituraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_completamento_fornituraNull()
            Me(Me.tableRigheOrdiniRicambi.t28_completamento_fornituraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_aspetto_esterioreNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_aspetto_esterioreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_aspetto_esterioreNull()
            Me(Me.tableRigheOrdiniRicambi.t28_aspetto_esterioreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_misureNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_misureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_misureNull()
            Me(Me.tableRigheOrdiniRicambi.t28_misureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_pesoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_pesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_pesoNull()
            Me(Me.tableRigheOrdiniRicambi.t28_pesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_rif_ordineNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_rif_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_rif_ordineNull()
            Me(Me.tableRigheOrdiniRicambi.t28_rif_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_noteNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_noteNull()
            Me(Me.tableRigheOrdiniRicambi.t28_noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_spedizioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_spedizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_spedizioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_spedizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_portoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_portoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_portoNull()
            Me(Me.tableRigheOrdiniRicambi.t28_portoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_creazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_modificaNull()
            Me(Me.tableRigheOrdiniRicambi.t28_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_dt_cancellazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_stato_testata_ordineNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_stato_testata_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_stato_testata_ordineNull()
            Me(Me.tableRigheOrdiniRicambi.t28_stato_testata_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist28_data_evasioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t28_data_evasioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett28_data_evasioneNull()
            Me(Me.tableRigheOrdiniRicambi.t28_data_evasioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_id_testata_t28Null() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_id_testata_t28Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_id_testata_t28Null()
            Me(Me.tableRigheOrdiniRicambi.t29_id_testata_t28Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_codNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_codColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_codNull()
            Me(Me.tableRigheOrdiniRicambi.t29_codColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_descrizioneNull()
            Me(Me.tableRigheOrdiniRicambi.t29_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_id_articolo_t20Null()
            Me(Me.tableRigheOrdiniRicambi.t29_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_matricolaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_matricolaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_matricolaNull()
            Me(Me.tableRigheOrdiniRicambi.t29_matricolaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_qt_ordinataNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_qt_ordinataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_qt_ordinataNull()
            Me(Me.tableRigheOrdiniRicambi.t29_qt_ordinataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_prezzo_uniNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_prezzo_uniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_prezzo_uniNull()
            Me(Me.tableRigheOrdiniRicambi.t29_prezzo_uniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_prezzo_totaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_prezzo_totaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_prezzo_totaNull()
            Me(Me.tableRigheOrdiniRicambi.t29_prezzo_totaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_creazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t29_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_modificaNull()
            Me(Me.tableRigheOrdiniRicambi.t29_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_dt_cancellazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t29_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_stato_riga_ordineNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_stato_riga_ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_stato_riga_ordineNull()
            Me(Me.tableRigheOrdiniRicambi.t29_stato_riga_ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_qt_evasaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_qt_evasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_qt_evasaNull()
            Me(Me.tableRigheOrdiniRicambi.t29_qt_evasaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_data_evasioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_data_evasioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_data_evasioneNull()
            Me(Me.tableRigheOrdiniRicambi.t29_data_evasioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist29_posizioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t29_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett29_posizioneNull()
            Me(Me.tableRigheOrdiniRicambi.t29_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tableRigheOrdiniRicambi.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tableRigheOrdiniRicambi.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzoNull()
            Me(Me.tableRigheOrdiniRicambi.t20_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_qt_disponibileNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_qt_disponibileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_qt_disponibileNull()
            Me(Me.tableRigheOrdiniRicambi.t20_qt_disponibileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_lotto_riordinoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_lotto_riordinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_lotto_riordinoNull()
            Me(Me.tableRigheOrdiniRicambi.t20_lotto_riordinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tableRigheOrdiniRicambi.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_creazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_dt_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_creazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t20_dt_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_modificaNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_dt_modificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_modificaNull()
            Me(Me.tableRigheOrdiniRicambi.t20_dt_modificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_dt_cancellazioneNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_dt_cancellazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_dt_cancellazioneNull()
            Me(Me.tableRigheOrdiniRicambi.t20_dt_cancellazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_id_fornitore_t11Null() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_id_fornitore_t11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_id_fornitore_t11Null()
            Me(Me.tableRigheOrdiniRicambi.t20_id_fornitore_t11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_prezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_prezzo_forzatoNull()
            Me(Me.tableRigheOrdiniRicambi.t20_prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tableRigheOrdiniRicambi.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_timestampNull() As Boolean
            Return Me.IsNull(Me.tableRigheOrdiniRicambi.t20_timestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_timestampNull()
            Me(Me.tableRigheOrdiniRicambi.t20_timestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett09_righe_ordine_forRows() As t09_righe_ordine_forRow()
            If (Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli2") Is Nothing) Then
                Return New t09_righe_ordine_forRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t09_righe_ordine_for_t20_articoli2")),t09_righe_ordine_forRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett21_articoli_macchineRows() As t21_articoli_macchineRow()
            If (Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli2") Is Nothing) Then
                Return New t21_articoli_macchineRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t21_articoli_macchine_t20_articoli2")),t21_articoli_macchineRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli3() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli3") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli3")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett22_articoli_articoliRowsByFK_t22_articoli_articoli_t20_articoli12() As t22_articoli_articoliRow()
            If (Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli12") Is Nothing) Then
                Return New t22_articoli_articoliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t22_articoli_articoli_t20_articoli12")),t22_articoli_articoliRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett25_matricoleRows() As t25_matricoleRow()
            If (Me.Table.ChildRelations("FK_t25_matricole_t20_articoli2") Is Nothing) Then
                Return New t25_matricoleRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t25_matricole_t20_articoli2")),t25_matricoleRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Gett29_righe_ordine_cliRows() As t29_righe_ordine_cliRow()
            If (Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli2") Is Nothing) Then
                Return New t29_righe_ordine_cliRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_t29_righe_ordine_cli_t20_articoli2")),t29_righe_ordine_cliRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class viewTreeIstanzeMacchineTotaliArticoliRow
        Inherits Global.System.Data.DataRow
        
        Private tableviewTreeIstanzeMacchineTotaliArticoli As viewTreeIstanzeMacchineTotaliArticoliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableviewTreeIstanzeMacchineTotaliArticoli = CType(Me.Table,viewTreeIstanzeMacchineTotaliArticoliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Return CType(Me(Me.tableviewTreeIstanzeMacchineTotaliArticoli.t22_id_articolo_t20Column),Integer)
            End Get
            Set
                Me(Me.tableviewTreeIstanzeMacchineTotaliArticoli.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property consumo_totale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableviewTreeIstanzeMacchineTotaliArticoli.consumo_totaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumo_totale' in table 'viewTreeIstanzeMacchineTotaliArti"& _ 
                            "coli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTreeIstanzeMacchineTotaliArticoli.consumo_totaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isconsumo_totaleNull() As Boolean
            Return Me.IsNull(Me.tableviewTreeIstanzeMacchineTotaliArticoli.consumo_totaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setconsumo_totaleNull()
            Me(Me.tableviewTreeIstanzeMacchineTotaliArticoli.consumo_totaleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class viewTreeIstanzeMacchineTotaliGruppiRow
        Inherits Global.System.Data.DataRow
        
        Private tableviewTreeIstanzeMacchineTotaliGruppi As viewTreeIstanzeMacchineTotaliGruppiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableviewTreeIstanzeMacchineTotaliGruppi = CType(Me.Table,viewTreeIstanzeMacchineTotaliGruppiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Return CType(Me(Me.tableviewTreeIstanzeMacchineTotaliGruppi.t22_id_articolo_t20Column),Integer)
            End Get
            Set
                Me(Me.tableviewTreeIstanzeMacchineTotaliGruppi.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property consumo_totale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableviewTreeIstanzeMacchineTotaliGruppi.consumo_totaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumo_totale' in table 'viewTreeIstanzeMacchineTotaliGrup"& _ 
                            "pi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableviewTreeIstanzeMacchineTotaliGruppi.consumo_totaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isconsumo_totaleNull() As Boolean
            Return Me.IsNull(Me.tableviewTreeIstanzeMacchineTotaliGruppi.consumo_totaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setconsumo_totaleNull()
            Me(Me.tableviewTreeIstanzeMacchineTotaliGruppi.consumo_totaleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ufn_GetQuantitaOrdinataArticoloRow
        Inherits Global.System.Data.DataRow
        
        Private tableufn_GetQuantitaOrdinataArticolo As ufn_GetQuantitaOrdinataArticoloDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableufn_GetQuantitaOrdinataArticolo = CType(Me.Table,ufn_GetQuantitaOrdinataArticoloDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Return CType(Me(Me.tableufn_GetQuantitaOrdinataArticolo.t22_id_articolo_t20Column),Integer)
            End Get
            Set
                Me(Me.tableufn_GetQuantitaOrdinataArticolo.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_qt_ordinata() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_ordinataColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_qt_ordinata' in table 'ufn_GetQuantitaOrdinataArticolo'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_ordinataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t09_qt_evasa() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_evasaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't09_qt_evasa' in table 'ufn_GetQuantitaOrdinataArticolo' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_evasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_qt_ordinataNull() As Boolean
            Return Me.IsNull(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_ordinataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_qt_ordinataNull()
            Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_ordinataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist09_qt_evasaNull() As Boolean
            Return Me.IsNull(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_evasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett09_qt_evasaNull()
            Me(Me.tableufn_GetQuantitaOrdinataArticolo.t09_qt_evasaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class RiepilogoArticoliRow
        Inherits Global.System.Data.DataRow
        
        Private tableRiepilogoArticoli As RiepilogoArticoliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRiepilogoArticoli = CType(Me.Table,RiepilogoArticoliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_id_articolo() As Integer
            Get
                Return CType(Me(Me.tableRiepilogoArticoli.t20_id_articoloColumn),Integer)
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_id_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_descrizione' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_qt_disponibile() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_qt_disponibileColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_qt_disponibile' in table 'RiepilogoArticoli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_qt_disponibileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qt_ordinata_articolo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.qt_ordinata_articoloColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qt_ordinata_articolo' in table 'RiepilogoArticoli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.qt_ordinata_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property consumo_totale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.consumo_totaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumo_totale' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.consumo_totaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property situazione() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.situazioneColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'situazione' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.situazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_lotto_riordino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_lotto_riordinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_lotto_riordino' in table 'RiepilogoArticoli' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_lotto_riordinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property matricole() As String
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.matricoleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'matricole' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.matricoleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.costoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'costo' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.costoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prezzo_calcolato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.prezzo_calcolatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prezzo_calcolato' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.prezzo_calcolatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prezzo_forzato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.prezzo_forzatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prezzo_forzato' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.prezzo_forzatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fornitore() As String
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.fornitoreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fornitore' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.fornitoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property situazione_senza_ordinato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.situazione_senza_ordinatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'situazione_senza_ordinato' in table 'RiepilogoArticoli' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.situazione_senza_ordinatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_ricambio() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.t20_is_ricambioColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_ricambio' in table 'RiepilogoArticoli' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.t20_is_ricambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qt_disponibile_in_gruppi() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.qt_disponibile_in_gruppiColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qt_disponibile_in_gruppi' in table 'RiepilogoArticoli' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.qt_disponibile_in_gruppiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property situazione_in_gruppi() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRiepilogoArticoli.situazione_in_gruppiColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'situazione_in_gruppi' in table 'RiepilogoArticoli' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRiepilogoArticoli.situazione_in_gruppiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tableRiepilogoArticoli.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_descrizioneNull()
            Me(Me.tableRiepilogoArticoli.t20_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_qt_disponibileNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_qt_disponibileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_qt_disponibileNull()
            Me(Me.tableRiepilogoArticoli.t20_qt_disponibileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqt_ordinata_articoloNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.qt_ordinata_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqt_ordinata_articoloNull()
            Me(Me.tableRiepilogoArticoli.qt_ordinata_articoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isconsumo_totaleNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.consumo_totaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setconsumo_totaleNull()
            Me(Me.tableRiepilogoArticoli.consumo_totaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssituazioneNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.situazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsituazioneNull()
            Me(Me.tableRiepilogoArticoli.situazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_lotto_riordinoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_lotto_riordinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_lotto_riordinoNull()
            Me(Me.tableRiepilogoArticoli.t20_lotto_riordinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmatricoleNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.matricoleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmatricoleNull()
            Me(Me.tableRiepilogoArticoli.matricoleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscostoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.costoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcostoNull()
            Me(Me.tableRiepilogoArticoli.costoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprezzo_calcolatoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.prezzo_calcolatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprezzo_calcolatoNull()
            Me(Me.tableRiepilogoArticoli.prezzo_calcolatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprezzo_forzatoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.prezzo_forzatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprezzo_forzatoNull()
            Me(Me.tableRiepilogoArticoli.prezzo_forzatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tableRiepilogoArticoli.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfornitoreNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.fornitoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfornitoreNull()
            Me(Me.tableRiepilogoArticoli.fornitoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issituazione_senza_ordinatoNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.situazione_senza_ordinatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsituazione_senza_ordinatoNull()
            Me(Me.tableRiepilogoArticoli.situazione_senza_ordinatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_ricambioNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.t20_is_ricambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_ricambioNull()
            Me(Me.tableRiepilogoArticoli.t20_is_ricambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqt_disponibile_in_gruppiNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.qt_disponibile_in_gruppiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqt_disponibile_in_gruppiNull()
            Me(Me.tableRiepilogoArticoli.qt_disponibile_in_gruppiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issituazione_in_gruppiNull() As Boolean
            Return Me.IsNull(Me.tableRiepilogoArticoli.situazione_in_gruppiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsituazione_in_gruppiNull()
            Me(Me.tableRiepilogoArticoli.situazione_in_gruppiColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ImpegnatiRow
        Inherits Global.System.Data.DataRow
        
        Private tableImpegnati As ImpegnatiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableImpegnati = CType(Me.Table,ImpegnatiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_istanza_macchina() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t06_id_istanza_macchinaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_id_istanza_macchina' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t06_id_istanza_macchinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t21_id_macchina_t05() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t21_id_macchina_t05Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't21_id_macchina_t05' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t21_id_macchina_t05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t22_id_articolo_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_id_articolo_t20' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_padre_t20() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t22_id_articolo_padre_t20Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_id_articolo_padre_t20' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t22_id_articolo_padre_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t20_is_gruppoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t20_is_gruppoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_is_gruppo_padre() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t20_is_gruppo_padreColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_is_gruppo_padre' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t20_is_gruppo_padreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_consumo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t22_consumoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_consumo' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t22_consumoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property consumo_calcolato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.consumo_calcolatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumo_calcolato' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.consumo_calcolatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_posizione() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t22_posizioneColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't22_posizione' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t22_posizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lvl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.lvlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lvl' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.lvlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property path() As String
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.pathColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'path' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.pathColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property riga_cod() As String
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.riga_codColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'riga_cod' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.riga_codColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property riga_descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.riga_descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'riga_descrizione' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.riga_descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t06_id_stato_istanza_t07() As String
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.t06_id_stato_istanza_t07Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't06_id_stato_istanza_t07' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.t06_id_stato_istanza_t07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property impegnato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.impegnatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'impegnato' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.impegnatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property consumo_effettivo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.consumo_effettivoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumo_effettivo' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.consumo_effettivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property magazzino() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.magazzinoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'magazzino' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.magazzinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property magazzinoSufficiente() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableImpegnati.magazzinoSufficienteColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'magazzinoSufficiente' in table 'Impegnati' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImpegnati.magazzinoSufficienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_id_istanza_macchinaNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t06_id_istanza_macchinaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_id_istanza_macchinaNull()
            Me(Me.tableImpegnati.t06_id_istanza_macchinaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist21_id_macchina_t05Null() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t21_id_macchina_t05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett21_id_macchina_t05Null()
            Me(Me.tableImpegnati.t21_id_macchina_t05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_id_articolo_t20Null() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t22_id_articolo_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_id_articolo_t20Null()
            Me(Me.tableImpegnati.t22_id_articolo_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_id_articolo_padre_t20Null() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t22_id_articolo_padre_t20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_id_articolo_padre_t20Null()
            Me(Me.tableImpegnati.t22_id_articolo_padre_t20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t20_is_gruppoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppoNull()
            Me(Me.tableImpegnati.t20_is_gruppoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_is_gruppo_padreNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t20_is_gruppo_padreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_is_gruppo_padreNull()
            Me(Me.tableImpegnati.t20_is_gruppo_padreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_consumoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t22_consumoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_consumoNull()
            Me(Me.tableImpegnati.t22_consumoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isconsumo_calcolatoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.consumo_calcolatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setconsumo_calcolatoNull()
            Me(Me.tableImpegnati.consumo_calcolatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist22_posizioneNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t22_posizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett22_posizioneNull()
            Me(Me.tableImpegnati.t22_posizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslvlNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.lvlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlvlNull()
            Me(Me.tableImpegnati.lvlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspathNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.pathColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpathNull()
            Me(Me.tableImpegnati.pathColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isriga_codNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.riga_codColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setriga_codNull()
            Me(Me.tableImpegnati.riga_codColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isriga_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.riga_descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setriga_descrizioneNull()
            Me(Me.tableImpegnati.riga_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist06_id_stato_istanza_t07Null() As Boolean
            Return Me.IsNull(Me.tableImpegnati.t06_id_stato_istanza_t07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett06_id_stato_istanza_t07Null()
            Me(Me.tableImpegnati.t06_id_stato_istanza_t07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsimpegnatoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.impegnatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetimpegnatoNull()
            Me(Me.tableImpegnati.impegnatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isconsumo_effettivoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.consumo_effettivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setconsumo_effettivoNull()
            Me(Me.tableImpegnati.consumo_effettivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmagazzinoNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.magazzinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmagazzinoNull()
            Me(Me.tableImpegnati.magazzinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmagazzinoSufficienteNull() As Boolean
            Return Me.IsNull(Me.tableImpegnati.magazzinoSufficienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmagazzinoSufficienteNull()
            Me(Me.tableImpegnati.magazzinoSufficienteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ArticoliInGruppiRow
        Inherits Global.System.Data.DataRow
        
        Private tableArticoliInGruppi As ArticoliInGruppiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableArticoliInGruppi = CType(Me.Table,ArticoliInGruppiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t22_id_articolo_t20() As Integer
            Get
                Return CType(Me(Me.tableArticoliInGruppi.t22_id_articolo_t20Column),Integer)
            End Get
            Set
                Me(Me.tableArticoliInGruppi.t22_id_articolo_t20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qt_disponibile_in_gruppi() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInGruppi.qt_disponibile_in_gruppiColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qt_disponibile_in_gruppi' in table 'ArticoliInGruppi' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInGruppi.qt_disponibile_in_gruppiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t20_cod_articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInGruppi.t20_cod_articoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 't20_cod_articolo' in table 'ArticoliInGruppi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInGruppi.t20_cod_articoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqt_disponibile_in_gruppiNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInGruppi.qt_disponibile_in_gruppiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqt_disponibile_in_gruppiNull()
            Me(Me.tableArticoliInGruppi.qt_disponibile_in_gruppiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist20_cod_articoloNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInGruppi.t20_cod_articoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett20_cod_articoloNull()
            Me(Me.tableArticoliInGruppi.t20_cod_articoloColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t05_macchineRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t05_macchineRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t05_macchineRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t05_macchineRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t06_istanze_macchineRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t06_istanze_macchineRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t06_istanze_macchineRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t06_istanze_macchineRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t07_stati_istanzaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t07_stati_istanzaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t07_stati_istanzaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t07_stati_istanzaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t08_testate_ordini_forRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t08_testate_ordini_forRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t08_testate_ordini_forRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t08_testate_ordini_forRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t09_righe_ordine_forRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t09_righe_ordine_forRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t09_righe_ordine_forRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t09_righe_ordine_forRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t10_stati_riga_ordine_forRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t10_stati_riga_ordine_forRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t10_stati_riga_ordine_forRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t10_stati_riga_ordine_forRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t11_fornitoriRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t11_fornitoriRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t11_fornitoriRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t11_fornitoriRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t14_clientiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t14_clientiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t14_clientiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t14_clientiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t15_causali_ordini_forRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t15_causali_ordini_forRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t15_causali_ordini_forRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t15_causali_ordini_forRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t21_articoli_macchineRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t21_articoli_macchineRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t21_articoli_macchineRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t21_articoli_macchineRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t22_articoli_articoliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t22_articoli_articoliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t22_articoli_articoliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t22_articoli_articoliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t25_matricoleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t25_matricoleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t25_matricoleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t25_matricoleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t26_formule_prezziRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t26_formule_prezziRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t26_formule_prezziRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t26_formule_prezziRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t27_versioneRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t27_versioneRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t27_versioneRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t27_versioneRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class viewElencoIstanzeSempliceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As viewElencoIstanzeSempliceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As viewElencoIstanzeSempliceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As viewElencoIstanzeSempliceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class viewTestateOrdiniCliConStatoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As viewTestateOrdiniCliConStatoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As viewTestateOrdiniCliConStatoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As viewTestateOrdiniCliConStatoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class viewTestateOrdiniConStatoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As viewTestateOrdiniConStatoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As viewTestateOrdiniConStatoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As viewTestateOrdiniConStatoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dvArticoliConMatricoleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dvArticoliConMatricoleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dvArticoliConMatricoleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dvArticoliConMatricoleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t28_testate_ordini_cliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t28_testate_ordini_cliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t28_testate_ordini_cliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t28_testate_ordini_cliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t29_righe_ordine_cliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t29_righe_ordine_cliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t29_righe_ordine_cliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t29_righe_ordine_cliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t20_articoliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t20_articoliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t20_articoliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t20_articoliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class v01_articoliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As v01_articoliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As v01_articoliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As v01_articoliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class v03_gruppiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As v03_gruppiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As v03_gruppiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As v03_gruppiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ListinoRicambiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ListinoRicambiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ListinoRicambiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ListinoRicambiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t28_anniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As t28_anniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t28_anniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t28_anniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class RigheOrdiniRicambiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RigheOrdiniRicambiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As RigheOrdiniRicambiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As RigheOrdiniRicambiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class viewTreeIstanzeMacchineTotaliArticoliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As viewTreeIstanzeMacchineTotaliArticoliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As viewTreeIstanzeMacchineTotaliArticoliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As viewTreeIstanzeMacchineTotaliArticoliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class viewTreeIstanzeMacchineTotaliGruppiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As viewTreeIstanzeMacchineTotaliGruppiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As viewTreeIstanzeMacchineTotaliGruppiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As viewTreeIstanzeMacchineTotaliGruppiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ufn_GetQuantitaOrdinataArticoloRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ufn_GetQuantitaOrdinataArticoloRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ufn_GetQuantitaOrdinataArticoloRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ufn_GetQuantitaOrdinataArticoloRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class RiepilogoArticoliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RiepilogoArticoliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As RiepilogoArticoliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As RiepilogoArticoliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ImpegnatiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ImpegnatiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ImpegnatiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ImpegnatiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ArticoliInGruppiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ArticoliInGruppiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ArticoliInGruppiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ArticoliInGruppiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace GestioneProduzione2009DataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t05_macchineTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t05_macchine"
            tableMapping.ColumnMappings.Add("t05_id_macchina", "t05_id_macchina")
            tableMapping.ColumnMappings.Add("t05_cod_macchina", "t05_cod_macchina")
            tableMapping.ColumnMappings.Add("t05_descrizione", "t05_descrizione")
            tableMapping.ColumnMappings.Add("t05_dt_creazione", "t05_dt_creazione")
            tableMapping.ColumnMappings.Add("t05_dt_modifica", "t05_dt_modifica")
            tableMapping.ColumnMappings.Add("t05_dt_cancellazione", "t05_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t05_macchine] WHERE (([t05_id_macchina] = @Original_t05_id_mac"& _ 
                "china) AND ((@IsNull_t05_cod_macchina = 1 AND [t05_cod_macchina] IS NULL) OR ([t"& _ 
                "05_cod_macchina] = @Original_t05_cod_macchina)) AND ((@IsNull_t05_descrizione = "& _ 
                "1 AND [t05_descrizione] IS NULL) OR ([t05_descrizione] = @Original_t05_descrizio"& _ 
                "ne)) AND ((@IsNull_t05_dt_creazione = 1 AND [t05_dt_creazione] IS NULL) OR ([t05"& _ 
                "_dt_creazione] = @Original_t05_dt_creazione)) AND ((@IsNull_t05_dt_modifica = 1 "& _ 
                "AND [t05_dt_modifica] IS NULL) OR ([t05_dt_modifica] = @Original_t05_dt_modifica"& _ 
                ")) AND ((@IsNull_t05_dt_cancellazione = 1 AND [t05_dt_cancellazione] IS NULL) OR"& _ 
                " ([t05_dt_cancellazione] = @Original_t05_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_id_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_id_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_cod_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_cod_macchina", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t05_macchine] ([t05_cod_macchina], [t05_descrizione], [t05_dt_"& _ 
                "creazione], [t05_dt_modifica], [t05_dt_cancellazione]) VALUES (@t05_cod_macchina"& _ 
                ", @t05_descrizione, @t05_dt_creazione, @t05_dt_modifica, @t05_dt_cancellazione);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t05_id_macchina, t05_cod_macchina, t05_descrizione, t05_dt_creazione, t"& _ 
                "05_dt_modifica, t05_dt_cancellazione FROM t05_macchine WHERE (t05_id_macchina = "& _ 
                "SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_cod_macchina", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t05_macchine] SET [t05_cod_macchina] = @t05_cod_macchina, [t05_desc"& _ 
                "rizione] = @t05_descrizione, [t05_dt_creazione] = @t05_dt_creazione, [t05_dt_mod"& _ 
                "ifica] = @t05_dt_modifica, [t05_dt_cancellazione] = @t05_dt_cancellazione WHERE "& _ 
                "(([t05_id_macchina] = @Original_t05_id_macchina) AND ((@IsNull_t05_cod_macchina "& _ 
                "= 1 AND [t05_cod_macchina] IS NULL) OR ([t05_cod_macchina] = @Original_t05_cod_m"& _ 
                "acchina)) AND ((@IsNull_t05_descrizione = 1 AND [t05_descrizione] IS NULL) OR (["& _ 
                "t05_descrizione] = @Original_t05_descrizione)) AND ((@IsNull_t05_dt_creazione = "& _ 
                "1 AND [t05_dt_creazione] IS NULL) OR ([t05_dt_creazione] = @Original_t05_dt_crea"& _ 
                "zione)) AND ((@IsNull_t05_dt_modifica = 1 AND [t05_dt_modifica] IS NULL) OR ([t0"& _ 
                "5_dt_modifica] = @Original_t05_dt_modifica)) AND ((@IsNull_t05_dt_cancellazione "& _ 
                "= 1 AND [t05_dt_cancellazione] IS NULL) OR ([t05_dt_cancellazione] = @Original_t"& _ 
                "05_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t05_id_macchina, t05_cod_macchina, t05_descrizio"& _ 
                "ne, t05_dt_creazione, t05_dt_modifica, t05_dt_cancellazione FROM t05_macchine WH"& _ 
                "ERE (t05_id_macchina = @t05_id_macchina)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_cod_macchina", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_id_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_id_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_cod_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_cod_macchina", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_cod_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t05_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t05_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t05_id_macchina", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t05_id_macchina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t05_id_macchina, t05_cod_macchina, t05_descrizione, t05_dt_creazione, t05_"& _ 
                "dt_modifica, t05_dt_cancellazione FROM dbo.t05_macchine"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t05_macchineDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t05_macchineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t05_macchineDataTable = New GestioneProduzione2009DataSet.t05_macchineDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t05_macchineDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t05_macchine")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t05_id_macchina As Integer, ByVal Original_t05_cod_macchina As String, ByVal Original_t05_descrizione As String, ByVal Original_t05_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t05_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t05_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t05_id_macchina,Integer)
            If (Original_t05_cod_macchina Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t05_cod_macchina,String)
            End If
            If (Original_t05_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t05_descrizione,String)
            End If
            If (Original_t05_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t05_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t05_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t05_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t05_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t05_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t05_cod_macchina As String, ByVal t05_descrizione As String, ByVal t05_dt_creazione As Global.System.Nullable(Of Date), ByVal t05_dt_modifica As Global.System.Nullable(Of Date), ByVal t05_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t05_cod_macchina Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t05_cod_macchina,String)
            End If
            If (t05_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t05_descrizione,String)
            End If
            If (t05_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t05_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t05_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t05_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t05_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t05_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t05_cod_macchina As String, ByVal t05_descrizione As String, ByVal t05_dt_creazione As Global.System.Nullable(Of Date), ByVal t05_dt_modifica As Global.System.Nullable(Of Date), ByVal t05_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t05_id_macchina As Integer, ByVal Original_t05_cod_macchina As String, ByVal Original_t05_descrizione As String, ByVal Original_t05_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t05_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t05_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t05_id_macchina As Integer) As Integer
            If (t05_cod_macchina Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t05_cod_macchina,String)
            End If
            If (t05_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t05_descrizione,String)
            End If
            If (t05_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t05_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t05_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t05_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t05_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t05_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_t05_id_macchina,Integer)
            If (Original_t05_cod_macchina Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t05_cod_macchina,String)
            End If
            If (Original_t05_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_t05_descrizione,String)
            End If
            If (Original_t05_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_t05_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_t05_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_t05_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_t05_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_t05_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(t05_id_macchina,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t05_cod_macchina As String, ByVal t05_descrizione As String, ByVal t05_dt_creazione As Global.System.Nullable(Of Date), ByVal t05_dt_modifica As Global.System.Nullable(Of Date), ByVal t05_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t05_id_macchina As Integer, ByVal Original_t05_cod_macchina As String, ByVal Original_t05_descrizione As String, ByVal Original_t05_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t05_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t05_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t05_cod_macchina, t05_descrizione, t05_dt_creazione, t05_dt_modifica, t05_dt_cancellazione, Original_t05_id_macchina, Original_t05_cod_macchina, Original_t05_descrizione, Original_t05_dt_creazione, Original_t05_dt_modifica, Original_t05_dt_cancellazione, Original_t05_id_macchina)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t06_istanze_macchineTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t06_istanze_macchine"
            tableMapping.ColumnMappings.Add("t06_id_istanza_macchina", "t06_id_istanza_macchina")
            tableMapping.ColumnMappings.Add("t06_descrizione", "t06_descrizione")
            tableMapping.ColumnMappings.Add("t06_dt_consegna", "t06_dt_consegna")
            tableMapping.ColumnMappings.Add("t06_id_macchina_t05", "t06_id_macchina_t05")
            tableMapping.ColumnMappings.Add("t06_quantita", "t06_quantita")
            tableMapping.ColumnMappings.Add("t06_id_stato_istanza_t07", "t06_id_stato_istanza_t07")
            tableMapping.ColumnMappings.Add("t06_dt_creazione", "t06_dt_creazione")
            tableMapping.ColumnMappings.Add("t06_dt_modifica", "t06_dt_modifica")
            tableMapping.ColumnMappings.Add("t06_dt_cancellazione", "t06_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t06_istanze_macchine] WHERE (([t06_id_istanza_macchina] = @Ori"& _ 
                "ginal_t06_id_istanza_macchina) AND ((@IsNull_t06_descrizione = 1 AND [t06_descri"& _ 
                "zione] IS NULL) OR ([t06_descrizione] = @Original_t06_descrizione)) AND ((@IsNul"& _ 
                "l_t06_dt_consegna = 1 AND [t06_dt_consegna] IS NULL) OR ([t06_dt_consegna] = @Or"& _ 
                "iginal_t06_dt_consegna)) AND ((@IsNull_t06_id_macchina_t05 = 1 AND [t06_id_macch"& _ 
                "ina_t05] IS NULL) OR ([t06_id_macchina_t05] = @Original_t06_id_macchina_t05)) AN"& _ 
                "D ((@IsNull_t06_quantita = 1 AND [t06_quantita] IS NULL) OR ([t06_quantita] = @O"& _ 
                "riginal_t06_quantita)) AND ([t06_id_stato_istanza_t07] = @Original_t06_id_stato_"& _ 
                "istanza_t07) AND ((@IsNull_t06_dt_creazione = 1 AND [t06_dt_creazione] IS NULL) "& _ 
                "OR ([t06_dt_creazione] = @Original_t06_dt_creazione)) AND ((@IsNull_t06_dt_modif"& _ 
                "ica = 1 AND [t06_dt_modifica] IS NULL) OR ([t06_dt_modifica] = @Original_t06_dt_"& _ 
                "modifica)) AND ((@IsNull_t06_dt_cancellazione = 1 AND [t06_dt_cancellazione] IS "& _ 
                "NULL) OR ([t06_dt_cancellazione] = @Original_t06_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_istanza_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_istanza_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_quantita", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_quantita", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_stato_istanza_t07", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_stato_istanza_t07", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t06_istanze_macchine] ([t06_descrizione], [t06_dt_consegna], ["& _ 
                "t06_id_macchina_t05], [t06_quantita], [t06_id_stato_istanza_t07], [t06_dt_creazi"& _ 
                "one], [t06_dt_modifica], [t06_dt_cancellazione]) VALUES (@t06_descrizione, @t06_"& _ 
                "dt_consegna, @t06_id_macchina_t05, @t06_quantita, @t06_id_stato_istanza_t07, @t0"& _ 
                "6_dt_creazione, @t06_dt_modifica, @t06_dt_cancellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t06_id_istanza"& _ 
                "_macchina, t06_descrizione, t06_dt_consegna, t06_id_macchina_t05, t06_quantita, "& _ 
                "t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_modifica, t06_dt_cancellazion"& _ 
                "e FROM t06_istanze_macchine WHERE (t06_id_istanza_macchina = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_quantita", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_id_stato_istanza_t07", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_stato_istanza_t07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t06_istanze_macchine] SET [t06_descrizione] = @t06_descrizione, [t0"& _ 
                "6_dt_consegna] = @t06_dt_consegna, [t06_id_macchina_t05] = @t06_id_macchina_t05,"& _ 
                " [t06_quantita] = @t06_quantita, [t06_id_stato_istanza_t07] = @t06_id_stato_ista"& _ 
                "nza_t07, [t06_dt_creazione] = @t06_dt_creazione, [t06_dt_modifica] = @t06_dt_mod"& _ 
                "ifica, [t06_dt_cancellazione] = @t06_dt_cancellazione WHERE (([t06_id_istanza_ma"& _ 
                "cchina] = @Original_t06_id_istanza_macchina) AND ((@IsNull_t06_descrizione = 1 A"& _ 
                "ND [t06_descrizione] IS NULL) OR ([t06_descrizione] = @Original_t06_descrizione)"& _ 
                ") AND ((@IsNull_t06_dt_consegna = 1 AND [t06_dt_consegna] IS NULL) OR ([t06_dt_c"& _ 
                "onsegna] = @Original_t06_dt_consegna)) AND ((@IsNull_t06_id_macchina_t05 = 1 AND"& _ 
                " [t06_id_macchina_t05] IS NULL) OR ([t06_id_macchina_t05] = @Original_t06_id_mac"& _ 
                "china_t05)) AND ((@IsNull_t06_quantita = 1 AND [t06_quantita] IS NULL) OR ([t06_"& _ 
                "quantita] = @Original_t06_quantita)) AND ([t06_id_stato_istanza_t07] = @Original"& _ 
                "_t06_id_stato_istanza_t07) AND ((@IsNull_t06_dt_creazione = 1 AND [t06_dt_creazi"& _ 
                "one] IS NULL) OR ([t06_dt_creazione] = @Original_t06_dt_creazione)) AND ((@IsNul"& _ 
                "l_t06_dt_modifica = 1 AND [t06_dt_modifica] IS NULL) OR ([t06_dt_modifica] = @Or"& _ 
                "iginal_t06_dt_modifica)) AND ((@IsNull_t06_dt_cancellazione = 1 AND [t06_dt_canc"& _ 
                "ellazione] IS NULL) OR ([t06_dt_cancellazione] = @Original_t06_dt_cancellazione)"& _ 
                "));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t06_id_istanza_macchina, t06_descrizione, t06_dt_consegna, t06_id_ma"& _ 
                "cchina_t05, t06_quantita, t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_mod"& _ 
                "ifica, t06_dt_cancellazione FROM t06_istanze_macchine WHERE (t06_id_istanza_macc"& _ 
                "hina = @t06_id_istanza_macchina)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_quantita", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_id_stato_istanza_t07", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_stato_istanza_t07", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_istanza_macchina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_istanza_macchina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_macchina_t05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_quantita", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_quantita", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_quantita", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_id_stato_istanza_t07", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_stato_istanza_t07", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t06_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t06_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t06_id_istanza_macchina", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t06_id_istanza_macchina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t06_id_istanza_macchina, t06_descrizione, t06_dt_consegna, t06_id_macchina"& _ 
                "_t05, t06_quantita, t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_modifica,"& _ 
                " t06_dt_cancellazione FROM dbo.t06_istanze_macchine"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT * FROM t06_istanze_macchine WHERE (t06_dt_cancellazione IS NULL) ORDER BY "& _ 
                "t06_dt_consegna DESC, t06_id_stato_istanza_t07"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable = New GestioneProduzione2009DataSet.t06_istanze_macchineDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable = New GestioneProduzione2009DataSet.t06_istanze_macchineDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t06_istanze_macchineDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t06_istanze_macchine")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t06_id_istanza_macchina As Integer, ByVal Original_t06_descrizione As String, ByVal Original_t06_dt_consegna As Global.System.Nullable(Of Date), ByVal Original_t06_id_macchina_t05 As Global.System.Nullable(Of Integer), ByVal Original_t06_quantita As Global.System.Nullable(Of Short), ByVal Original_t06_id_stato_istanza_t07 As String, ByVal Original_t06_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t06_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t06_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t06_id_istanza_macchina,Integer)
            If (Original_t06_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t06_descrizione,String)
            End If
            If (Original_t06_dt_consegna.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t06_dt_consegna.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_id_macchina_t05.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t06_id_macchina_t05.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_quantita.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t06_quantita.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_id_stato_istanza_t07 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t06_id_stato_istanza_t07")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_t06_id_stato_istanza_t07,String)
            End If
            If (Original_t06_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_t06_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_t06_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_t06_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t06_descrizione As String, ByVal t06_dt_consegna As Global.System.Nullable(Of Date), ByVal t06_id_macchina_t05 As Global.System.Nullable(Of Integer), ByVal t06_quantita As Global.System.Nullable(Of Short), ByVal t06_id_stato_istanza_t07 As String, ByVal t06_dt_creazione As Global.System.Nullable(Of Date), ByVal t06_dt_modifica As Global.System.Nullable(Of Date), ByVal t06_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t06_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t06_descrizione,String)
            End If
            If (t06_dt_consegna.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t06_dt_consegna.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (t06_id_macchina_t05.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t06_id_macchina_t05.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t06_quantita.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t06_quantita.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t06_id_stato_istanza_t07 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t06_id_stato_istanza_t07")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t06_id_stato_istanza_t07,String)
            End If
            If (t06_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t06_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t06_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t06_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t06_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t06_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t06_descrizione As String,  _
                    ByVal t06_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t06_id_macchina_t05 As Global.System.Nullable(Of Integer),  _
                    ByVal t06_quantita As Global.System.Nullable(Of Short),  _
                    ByVal t06_id_stato_istanza_t07 As String,  _
                    ByVal t06_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t06_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t06_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_id_istanza_macchina As Integer,  _
                    ByVal Original_t06_descrizione As String,  _
                    ByVal Original_t06_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_id_macchina_t05 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t06_quantita As Global.System.Nullable(Of Short),  _
                    ByVal Original_t06_id_stato_istanza_t07 As String,  _
                    ByVal Original_t06_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t06_id_istanza_macchina As Integer) As Integer
            If (t06_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t06_descrizione,String)
            End If
            If (t06_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t06_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (t06_id_macchina_t05.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t06_id_macchina_t05.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t06_quantita.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t06_quantita.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t06_id_stato_istanza_t07 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t06_id_stato_istanza_t07")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t06_id_stato_istanza_t07,String)
            End If
            If (t06_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t06_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t06_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t06_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t06_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t06_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_t06_id_istanza_macchina,Integer)
            If (Original_t06_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t06_descrizione,String)
            End If
            If (Original_t06_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t06_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_id_macchina_t05.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t06_id_macchina_t05.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_quantita.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t06_quantita.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_id_stato_istanza_t07 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t06_id_stato_istanza_t07")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_t06_id_stato_istanza_t07,String)
            End If
            If (Original_t06_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_t06_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_t06_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_t06_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_t06_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(t06_id_istanza_macchina,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t06_descrizione As String,  _
                    ByVal t06_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t06_id_macchina_t05 As Global.System.Nullable(Of Integer),  _
                    ByVal t06_quantita As Global.System.Nullable(Of Short),  _
                    ByVal t06_id_stato_istanza_t07 As String,  _
                    ByVal t06_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t06_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t06_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_id_istanza_macchina As Integer,  _
                    ByVal Original_t06_descrizione As String,  _
                    ByVal Original_t06_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_id_macchina_t05 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t06_quantita As Global.System.Nullable(Of Short),  _
                    ByVal Original_t06_id_stato_istanza_t07 As String,  _
                    ByVal Original_t06_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t06_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t06_descrizione, t06_dt_consegna, t06_id_macchina_t05, t06_quantita, t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_modifica, t06_dt_cancellazione, Original_t06_id_istanza_macchina, Original_t06_descrizione, Original_t06_dt_consegna, Original_t06_id_macchina_t05, Original_t06_quantita, Original_t06_id_stato_istanza_t07, Original_t06_dt_creazione, Original_t06_dt_modifica, Original_t06_dt_cancellazione, Original_t06_id_istanza_macchina)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t07_stati_istanzaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t07_stati_istanza"
            tableMapping.ColumnMappings.Add("t07_id_stato_istanza", "t07_id_stato_istanza")
            tableMapping.ColumnMappings.Add("t07_descrizione", "t07_descrizione")
            tableMapping.ColumnMappings.Add("t07_posizione", "t07_posizione")
            tableMapping.ColumnMappings.Add("t07_dt_creazione", "t07_dt_creazione")
            tableMapping.ColumnMappings.Add("t07_dt_modifica", "t07_dt_modifica")
            tableMapping.ColumnMappings.Add("t07_dt_cancellazione", "t07_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t07_stati_istanza] WHERE (([t07_id_stato_istanza] = @Original_"& _ 
                "t07_id_stato_istanza) AND ((@IsNull_t07_descrizione = 1 AND [t07_descrizione] IS"& _ 
                " NULL) OR ([t07_descrizione] = @Original_t07_descrizione)) AND ((@IsNull_t07_pos"& _ 
                "izione = 1 AND [t07_posizione] IS NULL) OR ([t07_posizione] = @Original_t07_posi"& _ 
                "zione)) AND ((@IsNull_t07_dt_creazione = 1 AND [t07_dt_creazione] IS NULL) OR (["& _ 
                "t07_dt_creazione] = @Original_t07_dt_creazione)) AND ((@IsNull_t07_dt_modifica ="& _ 
                " 1 AND [t07_dt_modifica] IS NULL) OR ([t07_dt_modifica] = @Original_t07_dt_modif"& _ 
                "ica)) AND ((@IsNull_t07_dt_cancellazione = 1 AND [t07_dt_cancellazione] IS NULL)"& _ 
                " OR ([t07_dt_cancellazione] = @Original_t07_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_id_stato_istanza", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_id_stato_istanza", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t07_stati_istanza] ([t07_id_stato_istanza], [t07_descrizione],"& _ 
                " [t07_posizione], [t07_dt_creazione], [t07_dt_modifica], [t07_dt_cancellazione])"& _ 
                " VALUES (@t07_id_stato_istanza, @t07_descrizione, @t07_posizione, @t07_dt_creazi"& _ 
                "one, @t07_dt_modifica, @t07_dt_cancellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t07_id_stato_istanza, t07"& _ 
                "_descrizione, t07_posizione, t07_dt_creazione, t07_dt_modifica, t07_dt_cancellaz"& _ 
                "ione FROM t07_stati_istanza WHERE (t07_id_stato_istanza = @t07_id_stato_istanza)"& _ 
                ""
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_id_stato_istanza", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_id_stato_istanza", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t07_stati_istanza] SET [t07_id_stato_istanza] = @t07_id_stato_istan"& _ 
                "za, [t07_descrizione] = @t07_descrizione, [t07_posizione] = @t07_posizione, [t07"& _ 
                "_dt_creazione] = @t07_dt_creazione, [t07_dt_modifica] = @t07_dt_modifica, [t07_d"& _ 
                "t_cancellazione] = @t07_dt_cancellazione WHERE (([t07_id_stato_istanza] = @Origi"& _ 
                "nal_t07_id_stato_istanza) AND ((@IsNull_t07_descrizione = 1 AND [t07_descrizione"& _ 
                "] IS NULL) OR ([t07_descrizione] = @Original_t07_descrizione)) AND ((@IsNull_t07"& _ 
                "_posizione = 1 AND [t07_posizione] IS NULL) OR ([t07_posizione] = @Original_t07_"& _ 
                "posizione)) AND ((@IsNull_t07_dt_creazione = 1 AND [t07_dt_creazione] IS NULL) O"& _ 
                "R ([t07_dt_creazione] = @Original_t07_dt_creazione)) AND ((@IsNull_t07_dt_modifi"& _ 
                "ca = 1 AND [t07_dt_modifica] IS NULL) OR ([t07_dt_modifica] = @Original_t07_dt_m"& _ 
                "odifica)) AND ((@IsNull_t07_dt_cancellazione = 1 AND [t07_dt_cancellazione] IS N"& _ 
                "ULL) OR ([t07_dt_cancellazione] = @Original_t07_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t07"& _ 
                "_id_stato_istanza, t07_descrizione, t07_posizione, t07_dt_creazione, t07_dt_modi"& _ 
                "fica, t07_dt_cancellazione FROM t07_stati_istanza WHERE (t07_id_stato_istanza = "& _ 
                "@t07_id_stato_istanza)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_id_stato_istanza", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_id_stato_istanza", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t07_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_id_stato_istanza", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_id_stato_istanza", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t07_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t07_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t07_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t07_id_stato_istanza, t07_descrizione, t07_posizione, t07_dt_creazione, t0"& _ 
                "7_dt_modifica, t07_dt_cancellazione FROM dbo.t07_stati_istanza"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t07_stati_istanzaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t07_stati_istanzaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t07_stati_istanzaDataTable = New GestioneProduzione2009DataSet.t07_stati_istanzaDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t07_stati_istanzaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t07_stati_istanza")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t07_id_stato_istanza As String, ByVal Original_t07_descrizione As String, ByVal Original_t07_posizione As Global.System.Nullable(Of Byte), ByVal Original_t07_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t07_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t07_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (Original_t07_id_stato_istanza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t07_id_stato_istanza")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t07_id_stato_istanza,String)
            End If
            If (Original_t07_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t07_descrizione,String)
            End If
            If (Original_t07_posizione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t07_posizione.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t07_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t07_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t07_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t07_id_stato_istanza As String, ByVal t07_descrizione As String, ByVal t07_posizione As Global.System.Nullable(Of Byte), ByVal t07_dt_creazione As Global.System.Nullable(Of Date), ByVal t07_dt_modifica As Global.System.Nullable(Of Date), ByVal t07_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t07_id_stato_istanza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t07_id_stato_istanza")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t07_id_stato_istanza,String)
            End If
            If (t07_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t07_descrizione,String)
            End If
            If (t07_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t07_posizione.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t07_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t07_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t07_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t07_id_stato_istanza As String, ByVal t07_descrizione As String, ByVal t07_posizione As Global.System.Nullable(Of Byte), ByVal t07_dt_creazione As Global.System.Nullable(Of Date), ByVal t07_dt_modifica As Global.System.Nullable(Of Date), ByVal t07_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t07_id_stato_istanza As String, ByVal Original_t07_descrizione As String, ByVal Original_t07_posizione As Global.System.Nullable(Of Byte), ByVal Original_t07_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t07_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t07_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t07_id_stato_istanza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t07_id_stato_istanza")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t07_id_stato_istanza,String)
            End If
            If (t07_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t07_descrizione,String)
            End If
            If (t07_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t07_posizione.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t07_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t07_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t07_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t07_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_id_stato_istanza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t07_id_stato_istanza")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_t07_id_stato_istanza,String)
            End If
            If (Original_t07_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_t07_descrizione,String)
            End If
            If (Original_t07_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t07_posizione.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t07_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t07_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t07_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t07_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t07_descrizione As String, ByVal t07_posizione As Global.System.Nullable(Of Byte), ByVal t07_dt_creazione As Global.System.Nullable(Of Date), ByVal t07_dt_modifica As Global.System.Nullable(Of Date), ByVal t07_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t07_id_stato_istanza As String, ByVal Original_t07_descrizione As String, ByVal Original_t07_posizione As Global.System.Nullable(Of Byte), ByVal Original_t07_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t07_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t07_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_t07_id_stato_istanza, t07_descrizione, t07_posizione, t07_dt_creazione, t07_dt_modifica, t07_dt_cancellazione, Original_t07_id_stato_istanza, Original_t07_descrizione, Original_t07_posizione, Original_t07_dt_creazione, Original_t07_dt_modifica, Original_t07_dt_cancellazione)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t08_testate_ordini_forTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t08_testate_ordini_for"
            tableMapping.ColumnMappings.Add("t08_id_testata_ordine_for", "t08_id_testata_ordine_for")
            tableMapping.ColumnMappings.Add("t08_cod_testata_ordine_for", "t08_cod_testata_ordine_for")
            tableMapping.ColumnMappings.Add("t08_descrizione", "t08_descrizione")
            tableMapping.ColumnMappings.Add("t08_id_fornitore_t11", "t08_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t08_dt_ordine", "t08_dt_ordine")
            tableMapping.ColumnMappings.Add("t08_dt_consegna", "t08_dt_consegna")
            tableMapping.ColumnMappings.Add("t08_tipo_ordine", "t08_tipo_ordine")
            tableMapping.ColumnMappings.Add("t08_id_causale_ordine_for_t15", "t08_id_causale_ordine_for_t15")
            tableMapping.ColumnMappings.Add("t08_dt_creazione", "t08_dt_creazione")
            tableMapping.ColumnMappings.Add("t08_dt_modifica", "t08_dt_modifica")
            tableMapping.ColumnMappings.Add("t08_dt_cancellazione", "t08_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t08_testate_ordini_for] WHERE (([t08_id_testata_ordine_for] = "& _ 
                "@Original_t08_id_testata_ordine_for) AND ((@IsNull_t08_cod_testata_ordine_for = "& _ 
                "1 AND [t08_cod_testata_ordine_for] IS NULL) OR ([t08_cod_testata_ordine_for] = @"& _ 
                "Original_t08_cod_testata_ordine_for)) AND ((@IsNull_t08_descrizione = 1 AND [t08"& _ 
                "_descrizione] IS NULL) OR ([t08_descrizione] = @Original_t08_descrizione)) AND ("& _ 
                "(@IsNull_t08_id_fornitore_t11 = 1 AND [t08_id_fornitore_t11] IS NULL) OR ([t08_i"& _ 
                "d_fornitore_t11] = @Original_t08_id_fornitore_t11)) AND ((@IsNull_t08_dt_ordine "& _ 
                "= 1 AND [t08_dt_ordine] IS NULL) OR ([t08_dt_ordine] = @Original_t08_dt_ordine))"& _ 
                " AND ((@IsNull_t08_dt_consegna = 1 AND [t08_dt_consegna] IS NULL) OR ([t08_dt_co"& _ 
                "nsegna] = @Original_t08_dt_consegna)) AND ((@IsNull_t08_tipo_ordine = 1 AND [t08"& _ 
                "_tipo_ordine] IS NULL) OR ([t08_tipo_ordine] = @Original_t08_tipo_ordine)) AND ("& _ 
                "(@IsNull_t08_id_causale_ordine_for_t15 = 1 AND [t08_id_causale_ordine_for_t15] I"& _ 
                "S NULL) OR ([t08_id_causale_ordine_for_t15] = @Original_t08_id_causale_ordine_fo"& _ 
                "r_t15)) AND ((@IsNull_t08_dt_creazione = 1 AND [t08_dt_creazione] IS NULL) OR (["& _ 
                "t08_dt_creazione] = @Original_t08_dt_creazione)) AND ((@IsNull_t08_dt_modifica ="& _ 
                " 1 AND [t08_dt_modifica] IS NULL) OR ([t08_dt_modifica] = @Original_t08_dt_modif"& _ 
                "ica)) AND ((@IsNull_t08_dt_cancellazione = 1 AND [t08_dt_cancellazione] IS NULL)"& _ 
                " OR ([t08_dt_cancellazione] = @Original_t08_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_testata_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_testata_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_ordine", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_ordine", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_tipo_ordine", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_tipo_ordine", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t08_testate_ordini_for] ([t08_cod_testata_ordine_for], [t08_de"& _ 
                "scrizione], [t08_id_fornitore_t11], [t08_dt_ordine], [t08_dt_consegna], [t08_tip"& _ 
                "o_ordine], [t08_id_causale_ordine_for_t15], [t08_dt_creazione], [t08_dt_modifica"& _ 
                "], [t08_dt_cancellazione]) VALUES (@t08_cod_testata_ordine_for, @t08_descrizione"& _ 
                ", @t08_id_fornitore_t11, @t08_dt_ordine, @t08_dt_consegna, @t08_tipo_ordine, @t0"& _ 
                "8_id_causale_ordine_for_t15, @t08_dt_creazione, @t08_dt_modifica, @t08_dt_cancel"& _ 
                "lazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t08_id_testata_ordine_for, t08_cod_testata_ordine_for, t08_des"& _ 
                "crizione, t08_id_fornitore_t11, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine,"& _ 
                " t08_id_causale_ordine_for_t15, t08_dt_creazione, t08_dt_modifica, t08_dt_cancel"& _ 
                "lazione FROM t08_testate_ordini_for WHERE (t08_id_testata_ordine_for = SCOPE_IDE"& _ 
                "NTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_ordine", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_tipo_ordine", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t08_testate_ordini_for] SET [t08_cod_testata_ordine_for] = @t08_cod"& _ 
                "_testata_ordine_for, [t08_descrizione] = @t08_descrizione, [t08_id_fornitore_t11"& _ 
                "] = @t08_id_fornitore_t11, [t08_dt_ordine] = @t08_dt_ordine, [t08_dt_consegna] ="& _ 
                " @t08_dt_consegna, [t08_tipo_ordine] = @t08_tipo_ordine, [t08_id_causale_ordine_"& _ 
                "for_t15] = @t08_id_causale_ordine_for_t15, [t08_dt_creazione] = @t08_dt_creazion"& _ 
                "e, [t08_dt_modifica] = @t08_dt_modifica, [t08_dt_cancellazione] = @t08_dt_cancel"& _ 
                "lazione WHERE (([t08_id_testata_ordine_for] = @Original_t08_id_testata_ordine_fo"& _ 
                "r) AND ((@IsNull_t08_cod_testata_ordine_for = 1 AND [t08_cod_testata_ordine_for]"& _ 
                " IS NULL) OR ([t08_cod_testata_ordine_for] = @Original_t08_cod_testata_ordine_fo"& _ 
                "r)) AND ((@IsNull_t08_descrizione = 1 AND [t08_descrizione] IS NULL) OR ([t08_de"& _ 
                "scrizione] = @Original_t08_descrizione)) AND ((@IsNull_t08_id_fornitore_t11 = 1 "& _ 
                "AND [t08_id_fornitore_t11] IS NULL) OR ([t08_id_fornitore_t11] = @Original_t08_i"& _ 
                "d_fornitore_t11)) AND ((@IsNull_t08_dt_ordine = 1 AND [t08_dt_ordine] IS NULL) O"& _ 
                "R ([t08_dt_ordine] = @Original_t08_dt_ordine)) AND ((@IsNull_t08_dt_consegna = 1"& _ 
                " AND [t08_dt_consegna] IS NULL) OR ([t08_dt_consegna] = @Original_t08_dt_consegn"& _ 
                "a)) AND ((@IsNull_t08_tipo_ordine = 1 AND [t08_tipo_ordine] IS NULL) OR ([t08_ti"& _ 
                "po_ordine] = @Original_t08_tipo_ordine)) AND ((@IsNull_t08_id_causale_ordine_for"& _ 
                "_t15 = 1 AND [t08_id_causale_ordine_for_t15] IS NULL) OR ([t08_id_causale_ordine"& _ 
                "_for_t15] = @Original_t08_id_causale_ordine_for_t15)) AND ((@IsNull_t08_dt_creaz"& _ 
                "ione = 1 AND [t08_dt_creazione] IS NULL) OR ([t08_dt_creazione] = @Original_t08_"& _ 
                "dt_creazione)) AND ((@IsNull_t08_dt_modifica = 1 AND [t08_dt_modifica] IS NULL) "& _ 
                "OR ([t08_dt_modifica] = @Original_t08_dt_modifica)) AND ((@IsNull_t08_dt_cancell"& _ 
                "azione = 1 AND [t08_dt_cancellazione] IS NULL) OR ([t08_dt_cancellazione] = @Ori"& _ 
                "ginal_t08_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t08_id_testata_ordine_for, t08_cod_testat"& _ 
                "a_ordine_for, t08_descrizione, t08_id_fornitore_t11, t08_dt_ordine, t08_dt_conse"& _ 
                "gna, t08_tipo_ordine, t08_id_causale_ordine_for_t15, t08_dt_creazione, t08_dt_mo"& _ 
                "difica, t08_dt_cancellazione FROM t08_testate_ordini_for WHERE (t08_id_testata_o"& _ 
                "rdine_for = @t08_id_testata_ordine_for)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_ordine", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_tipo_ordine", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_testata_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_testata_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_cod_testata_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_cod_testata_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_fornitore_t11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_ordine", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_ordine", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_ordine", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_tipo_ordine", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_tipo_ordine", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_tipo_ordine", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_id_causale_ordine_for_t15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_causale_ordine_for_t15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t08_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t08_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t08_id_testata_ordine_for", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t08_id_testata_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t08_id_testata_ordine_for, t08_cod_testata_ordine_for, t08_descrizione, t0"& _ 
                "8_id_fornitore_t11, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine, t08_id_caus"& _ 
                "ale_ordine_for_t15, t08_dt_creazione, t08_dt_modifica, t08_dt_cancellazione FROM"& _ 
                " dbo.t08_testate_ordini_for"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t08_testate_ordini_forDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t08_testate_ordini_forDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t08_testate_ordini_forDataTable = New GestioneProduzione2009DataSet.t08_testate_ordini_forDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t08_testate_ordini_forDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t08_testate_ordini_for")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t08_id_testata_ordine_for As Integer, ByVal Original_t08_cod_testata_ordine_for As String, ByVal Original_t08_descrizione As String, ByVal Original_t08_id_fornitore_t11 As Global.System.Nullable(Of Integer), ByVal Original_t08_dt_ordine As Global.System.Nullable(Of Date), ByVal Original_t08_dt_consegna As Global.System.Nullable(Of Date), ByVal Original_t08_tipo_ordine As String, ByVal Original_t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer), ByVal Original_t08_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t08_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t08_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t08_id_testata_ordine_for,Integer)
            If (Original_t08_cod_testata_ordine_for Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t08_cod_testata_ordine_for,String)
            End If
            If (Original_t08_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t08_descrizione,String)
            End If
            If (Original_t08_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t08_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_ordine.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t08_dt_ordine.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_consegna.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t08_dt_consegna.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_tipo_ordine Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t08_tipo_ordine,String)
            End If
            If (Original_t08_id_causale_ordine_for_t15.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_t08_id_causale_ordine_for_t15.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_t08_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_t08_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_t08_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t08_cod_testata_ordine_for As String, ByVal t08_descrizione As String, ByVal t08_id_fornitore_t11 As Global.System.Nullable(Of Integer), ByVal t08_dt_ordine As Global.System.Nullable(Of Date), ByVal t08_dt_consegna As Global.System.Nullable(Of Date), ByVal t08_tipo_ordine As String, ByVal t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer), ByVal t08_dt_creazione As Global.System.Nullable(Of Date), ByVal t08_dt_modifica As Global.System.Nullable(Of Date), ByVal t08_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t08_cod_testata_ordine_for Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t08_cod_testata_ordine_for,String)
            End If
            If (t08_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t08_descrizione,String)
            End If
            If (t08_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t08_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_ordine.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t08_dt_ordine.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_consegna.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t08_dt_consegna.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t08_tipo_ordine Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t08_tipo_ordine,String)
            End If
            If (t08_id_causale_ordine_for_t15.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t08_id_causale_ordine_for_t15.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t08_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(t08_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(t08_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t08_cod_testata_ordine_for As String,  _
                    ByVal t08_descrizione As String,  _
                    ByVal t08_id_fornitore_t11 As Global.System.Nullable(Of Integer),  _
                    ByVal t08_dt_ordine As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t08_tipo_ordine As String,  _
                    ByVal t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer),  _
                    ByVal t08_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_id_testata_ordine_for As Integer,  _
                    ByVal Original_t08_cod_testata_ordine_for As String,  _
                    ByVal Original_t08_descrizione As String,  _
                    ByVal Original_t08_id_fornitore_t11 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t08_dt_ordine As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_tipo_ordine As String,  _
                    ByVal Original_t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t08_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t08_id_testata_ordine_for As Integer) As Integer
            If (t08_cod_testata_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t08_cod_testata_ordine_for,String)
            End If
            If (t08_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t08_descrizione,String)
            End If
            If (t08_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t08_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_ordine.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t08_dt_ordine.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t08_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t08_tipo_ordine Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t08_tipo_ordine,String)
            End If
            If (t08_id_causale_ordine_for_t15.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t08_id_causale_ordine_for_t15.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t08_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(t08_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t08_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(t08_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t08_id_testata_ordine_for,Integer)
            If (Original_t08_cod_testata_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t08_cod_testata_ordine_for,String)
            End If
            If (Original_t08_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t08_descrizione,String)
            End If
            If (Original_t08_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t08_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_ordine.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_t08_dt_ordine.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_t08_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_tipo_ordine Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_t08_tipo_ordine,String)
            End If
            If (Original_t08_id_causale_ordine_for_t15.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_t08_id_causale_ordine_for_t15.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_t08_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_t08_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_t08_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_t08_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(t08_id_testata_ordine_for,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t08_cod_testata_ordine_for As String,  _
                    ByVal t08_descrizione As String,  _
                    ByVal t08_id_fornitore_t11 As Global.System.Nullable(Of Integer),  _
                    ByVal t08_dt_ordine As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t08_tipo_ordine As String,  _
                    ByVal t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer),  _
                    ByVal t08_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t08_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_id_testata_ordine_for As Integer,  _
                    ByVal Original_t08_cod_testata_ordine_for As String,  _
                    ByVal Original_t08_descrizione As String,  _
                    ByVal Original_t08_id_fornitore_t11 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t08_dt_ordine As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_tipo_ordine As String,  _
                    ByVal Original_t08_id_causale_ordine_for_t15 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t08_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t08_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t08_cod_testata_ordine_for, t08_descrizione, t08_id_fornitore_t11, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine, t08_id_causale_ordine_for_t15, t08_dt_creazione, t08_dt_modifica, t08_dt_cancellazione, Original_t08_id_testata_ordine_for, Original_t08_cod_testata_ordine_for, Original_t08_descrizione, Original_t08_id_fornitore_t11, Original_t08_dt_ordine, Original_t08_dt_consegna, Original_t08_tipo_ordine, Original_t08_id_causale_ordine_for_t15, Original_t08_dt_creazione, Original_t08_dt_modifica, Original_t08_dt_cancellazione, Original_t08_id_testata_ordine_for)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t09_righe_ordine_forTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t09_righe_ordine_for"
            tableMapping.ColumnMappings.Add("t09_id_riga_ordine_for", "t09_id_riga_ordine_for")
            tableMapping.ColumnMappings.Add("t09_cod_riga_ordine_for", "t09_cod_riga_ordine_for")
            tableMapping.ColumnMappings.Add("t09_id_testata_ordine_for_t08", "t09_id_testata_ordine_for_t08")
            tableMapping.ColumnMappings.Add("t09_posizione", "t09_posizione")
            tableMapping.ColumnMappings.Add("t09_id_articolo_t20", "t09_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t09_qt_ordinata", "t09_qt_ordinata")
            tableMapping.ColumnMappings.Add("t09_qt_evasa", "t09_qt_evasa")
            tableMapping.ColumnMappings.Add("t09_prezzo_uni", "t09_prezzo_uni")
            tableMapping.ColumnMappings.Add("t09_dt_consegna", "t09_dt_consegna")
            tableMapping.ColumnMappings.Add("t09_id_stato_riga_ordine_t10", "t09_id_stato_riga_ordine_t10")
            tableMapping.ColumnMappings.Add("t09_dt_creazione", "t09_dt_creazione")
            tableMapping.ColumnMappings.Add("t09_dt_modifica", "t09_dt_modifica")
            tableMapping.ColumnMappings.Add("t09_dt_cancellazione", "t09_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t09_righe_ordine_for] WHERE (([t09_id_riga_ordine_for] = @Orig"& _ 
                "inal_t09_id_riga_ordine_for) AND ((@IsNull_t09_cod_riga_ordine_for = 1 AND [t09_"& _ 
                "cod_riga_ordine_for] IS NULL) OR ([t09_cod_riga_ordine_for] = @Original_t09_cod_"& _ 
                "riga_ordine_for)) AND ((@IsNull_t09_id_testata_ordine_for_t08 = 1 AND [t09_id_te"& _ 
                "stata_ordine_for_t08] IS NULL) OR ([t09_id_testata_ordine_for_t08] = @Original_t"& _ 
                "09_id_testata_ordine_for_t08)) AND ((@IsNull_t09_posizione = 1 AND [t09_posizion"& _ 
                "e] IS NULL) OR ([t09_posizione] = @Original_t09_posizione)) AND ((@IsNull_t09_id"& _ 
                "_articolo_t20 = 1 AND [t09_id_articolo_t20] IS NULL) OR ([t09_id_articolo_t20] ="& _ 
                " @Original_t09_id_articolo_t20)) AND ((@IsNull_t09_qt_ordinata = 1 AND [t09_qt_o"& _ 
                "rdinata] IS NULL) OR ([t09_qt_ordinata] = @Original_t09_qt_ordinata)) AND ((@IsN"& _ 
                "ull_t09_qt_evasa = 1 AND [t09_qt_evasa] IS NULL) OR ([t09_qt_evasa] = @Original_"& _ 
                "t09_qt_evasa)) AND ((@IsNull_t09_prezzo_uni = 1 AND [t09_prezzo_uni] IS NULL) OR"& _ 
                " ([t09_prezzo_uni] = @Original_t09_prezzo_uni)) AND ((@IsNull_t09_dt_consegna = "& _ 
                "1 AND [t09_dt_consegna] IS NULL) OR ([t09_dt_consegna] = @Original_t09_dt_conseg"& _ 
                "na)) AND ((@IsNull_t09_id_stato_riga_ordine_t10 = 1 AND [t09_id_stato_riga_ordin"& _ 
                "e_t10] IS NULL) OR ([t09_id_stato_riga_ordine_t10] = @Original_t09_id_stato_riga"& _ 
                "_ordine_t10)) AND ((@IsNull_t09_dt_creazione = 1 AND [t09_dt_creazione] IS NULL)"& _ 
                " OR ([t09_dt_creazione] = @Original_t09_dt_creazione)) AND ((@IsNull_t09_dt_modi"& _ 
                "fica = 1 AND [t09_dt_modifica] IS NULL) OR ([t09_dt_modifica] = @Original_t09_dt"& _ 
                "_modifica)) AND ((@IsNull_t09_dt_cancellazione = 1 AND [t09_dt_cancellazione] IS"& _ 
                " NULL) OR ([t09_dt_cancellazione] = @Original_t09_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_riga_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_qt_ordinata", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_qt_evasa", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_qt_evasa", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_evasa", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_prezzo_uni", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t09_righe_ordine_for] ([t09_cod_riga_ordine_for], [t09_id_test"& _ 
                "ata_ordine_for_t08], [t09_posizione], [t09_id_articolo_t20], [t09_qt_ordinata], "& _ 
                "[t09_qt_evasa], [t09_prezzo_uni], [t09_dt_consegna], [t09_id_stato_riga_ordine_t"& _ 
                "10], [t09_dt_creazione], [t09_dt_modifica], [t09_dt_cancellazione]) VALUES (@t09"& _ 
                "_cod_riga_ordine_for, @t09_id_testata_ordine_for_t08, @t09_posizione, @t09_id_ar"& _ 
                "ticolo_t20, @t09_qt_ordinata, @t09_qt_evasa, @t09_prezzo_uni, @t09_dt_consegna, "& _ 
                "@t09_id_stato_riga_ordine_t10, @t09_dt_creazione, @t09_dt_modifica, @t09_dt_canc"& _ 
                "ellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t09_id_riga_ordine_for, t09_cod_riga_ordine_for, t09_id_test"& _ 
                "ata_ordine_for_t08, t09_posizione, t09_id_articolo_t20, t09_qt_ordinata, t09_qt_"& _ 
                "evasa, t09_prezzo_uni, t09_dt_consegna, t09_id_stato_riga_ordine_t10, t09_dt_cre"& _ 
                "azione, t09_dt_modifica, t09_dt_cancellazione FROM t09_righe_ordine_for WHERE (t"& _ 
                "09_id_riga_ordine_for = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_evasa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t09_righe_ordine_for] SET [t09_cod_riga_ordine_for] = @t09_cod_riga"& _ 
                "_ordine_for, [t09_id_testata_ordine_for_t08] = @t09_id_testata_ordine_for_t08, ["& _ 
                "t09_posizione] = @t09_posizione, [t09_id_articolo_t20] = @t09_id_articolo_t20, ["& _ 
                "t09_qt_ordinata] = @t09_qt_ordinata, [t09_qt_evasa] = @t09_qt_evasa, [t09_prezzo"& _ 
                "_uni] = @t09_prezzo_uni, [t09_dt_consegna] = @t09_dt_consegna, [t09_id_stato_rig"& _ 
                "a_ordine_t10] = @t09_id_stato_riga_ordine_t10, [t09_dt_creazione] = @t09_dt_crea"& _ 
                "zione, [t09_dt_modifica] = @t09_dt_modifica, [t09_dt_cancellazione] = @t09_dt_ca"& _ 
                "ncellazione WHERE (([t09_id_riga_ordine_for] = @Original_t09_id_riga_ordine_for)"& _ 
                " AND ((@IsNull_t09_cod_riga_ordine_for = 1 AND [t09_cod_riga_ordine_for] IS NULL"& _ 
                ") OR ([t09_cod_riga_ordine_for] = @Original_t09_cod_riga_ordine_for)) AND ((@IsN"& _ 
                "ull_t09_id_testata_ordine_for_t08 = 1 AND [t09_id_testata_ordine_for_t08] IS NUL"& _ 
                "L) OR ([t09_id_testata_ordine_for_t08] = @Original_t09_id_testata_ordine_for_t08"& _ 
                ")) AND ((@IsNull_t09_posizione = 1 AND [t09_posizione] IS NULL) OR ([t09_posizio"& _ 
                "ne] = @Original_t09_posizione)) AND ((@IsNull_t09_id_articolo_t20 = 1 AND [t09_i"& _ 
                "d_articolo_t20] IS NULL) OR ([t09_id_articolo_t20] = @Original_t09_id_articolo_t"& _ 
                "20)) AND ((@IsNull_t09_qt_ordinata = 1 AND [t09_qt_ordinata] IS NULL) OR ([t09_q"& _ 
                "t_ordinata] = @Original_t09_qt_ordinata)) AND ((@IsNull_t09_qt_evasa = 1 AND [t0"& _ 
                "9_qt_evasa] IS NULL) OR ([t09_qt_evasa] = @Original_t09_qt_evasa)) AND ((@IsNull"& _ 
                "_t09_prezzo_uni = 1 AND [t09_prezzo_uni] IS NULL) OR ([t09_prezzo_uni] = @Origin"& _ 
                "al_t09_prezzo_uni)) AND ((@IsNull_t09_dt_consegna = 1 AND [t09_dt_consegna] IS N"& _ 
                "ULL) OR ([t09_dt_consegna] = @Original_t09_dt_consegna)) AND ((@IsNull_t09_id_st"& _ 
                "ato_riga_ordine_t10 = 1 AND [t09_id_stato_riga_ordine_t10] IS NULL) OR ([t09_id_"& _ 
                "stato_riga_ordine_t10] = @Original_t09_id_stato_riga_ordine_t10)) AND ((@IsNull_"& _ 
                "t09_dt_creazione = 1 AND [t09_dt_creazione] IS NULL) OR ([t09_dt_creazione] = @O"& _ 
                "riginal_t09_dt_creazione)) AND ((@IsNull_t09_dt_modifica = 1 AND [t09_dt_modific"& _ 
                "a] IS NULL) OR ([t09_dt_modifica] = @Original_t09_dt_modifica)) AND ((@IsNull_t0"& _ 
                "9_dt_cancellazione = 1 AND [t09_dt_cancellazione] IS NULL) OR ([t09_dt_cancellaz"& _ 
                "ione] = @Original_t09_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t09_id_riga_ordine_for, t09_c"& _ 
                "od_riga_ordine_for, t09_id_testata_ordine_for_t08, t09_posizione, t09_id_articol"& _ 
                "o_t20, t09_qt_ordinata, t09_qt_evasa, t09_prezzo_uni, t09_dt_consegna, t09_id_st"& _ 
                "ato_riga_ordine_t10, t09_dt_creazione, t09_dt_modifica, t09_dt_cancellazione FRO"& _ 
                "M t09_righe_ordine_for WHERE (t09_id_riga_ordine_for = @t09_id_riga_ordine_for)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_evasa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_riga_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_cod_riga_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_cod_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_testata_ordine_for_t08", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_testata_ordine_for_t08", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_qt_ordinata", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_ordinata", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_qt_evasa", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_qt_evasa", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_qt_evasa", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_prezzo_uni", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t09_prezzo_uni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_consegna", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_consegna", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_consegna", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_id_stato_riga_ordine_t10", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_stato_riga_ordine_t10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t09_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t09_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t09_id_riga_ordine_for", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t09_id_riga_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t09_id_riga_ordine_for, t09_cod_riga_ordine_for, t09_id_testata_ordine_for"& _ 
                "_t08, t09_posizione, t09_id_articolo_t20, t09_qt_ordinata, t09_qt_evasa, t09_pre"& _ 
                "zzo_uni, t09_dt_consegna, t09_id_stato_riga_ordine_t10, t09_dt_creazione, t09_dt"& _ 
                "_modifica, t09_dt_cancellazione FROM dbo.t09_righe_ordine_for"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t09_righe_ordine_forDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t09_righe_ordine_forDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t09_righe_ordine_forDataTable = New GestioneProduzione2009DataSet.t09_righe_ordine_forDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t09_righe_ordine_forDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t09_righe_ordine_for")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t09_id_riga_ordine_for As Integer, ByVal Original_t09_cod_riga_ordine_for As String, ByVal Original_t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer), ByVal Original_t09_posizione As Global.System.Nullable(Of Integer), ByVal Original_t09_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal Original_t09_qt_ordinata As Global.System.Nullable(Of Decimal), ByVal Original_t09_qt_evasa As Global.System.Nullable(Of Decimal), ByVal Original_t09_prezzo_uni As Global.System.Nullable(Of Decimal), ByVal Original_t09_dt_consegna As Global.System.Nullable(Of Date), ByVal Original_t09_id_stato_riga_ordine_t10 As String, ByVal Original_t09_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t09_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t09_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t09_id_riga_ordine_for,Integer)
            If (Original_t09_cod_riga_ordine_for Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t09_cod_riga_ordine_for,String)
            End If
            If (Original_t09_id_testata_ordine_for_t08.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t09_id_testata_ordine_for_t08.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_posizione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t09_posizione.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_id_articolo_t20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t09_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_qt_ordinata.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t09_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_qt_evasa.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t09_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_prezzo_uni.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_t09_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_consegna.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_t09_dt_consegna.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_id_stato_riga_ordine_t10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_t09_id_stato_riga_ordine_t10,String)
            End If
            If (Original_t09_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_t09_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_t09_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_t09_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t09_cod_riga_ordine_for As String, ByVal t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer), ByVal t09_posizione As Global.System.Nullable(Of Integer), ByVal t09_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal t09_qt_ordinata As Global.System.Nullable(Of Decimal), ByVal t09_qt_evasa As Global.System.Nullable(Of Decimal), ByVal t09_prezzo_uni As Global.System.Nullable(Of Decimal), ByVal t09_dt_consegna As Global.System.Nullable(Of Date), ByVal t09_id_stato_riga_ordine_t10 As String, ByVal t09_dt_creazione As Global.System.Nullable(Of Date), ByVal t09_dt_modifica As Global.System.Nullable(Of Date), ByVal t09_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t09_cod_riga_ordine_for Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t09_cod_riga_ordine_for,String)
            End If
            If (t09_id_testata_ordine_for_t08.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t09_id_testata_ordine_for_t08.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (t09_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t09_posizione.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t09_id_articolo_t20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t09_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t09_qt_ordinata.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t09_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t09_qt_evasa.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t09_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t09_prezzo_uni.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t09_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_consegna.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t09_dt_consegna.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t09_id_stato_riga_ordine_t10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(t09_id_stato_riga_ordine_t10,String)
            End If
            If (t09_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(t09_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(t09_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(t09_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t09_cod_riga_ordine_for As String,  _
                    ByVal t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer),  _
                    ByVal t09_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal t09_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal t09_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t09_id_stato_riga_ordine_t10 As String,  _
                    ByVal t09_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t09_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t09_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_id_riga_ordine_for As Integer,  _
                    ByVal Original_t09_cod_riga_ordine_for As String,  _
                    ByVal Original_t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_id_stato_riga_ordine_t10 As String,  _
                    ByVal Original_t09_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t09_id_riga_ordine_for As Integer) As Integer
            If (t09_cod_riga_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t09_cod_riga_ordine_for,String)
            End If
            If (t09_id_testata_ordine_for_t08.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t09_id_testata_ordine_for_t08.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (t09_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t09_posizione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t09_id_articolo_t20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t09_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t09_qt_ordinata.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t09_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t09_qt_evasa.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t09_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t09_prezzo_uni.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t09_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t09_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t09_id_stato_riga_ordine_t10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(t09_id_stato_riga_ordine_t10,String)
            End If
            If (t09_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(t09_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(t09_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t09_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(t09_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t09_id_riga_ordine_for,Integer)
            If (Original_t09_cod_riga_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t09_cod_riga_ordine_for,String)
            End If
            If (Original_t09_id_testata_ordine_for_t08.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t09_id_testata_ordine_for_t08.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_t09_posizione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_id_articolo_t20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_t09_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_qt_ordinata.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_t09_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_qt_evasa.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_t09_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_prezzo_uni.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_t09_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_consegna.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_t09_dt_consegna.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_id_stato_riga_ordine_t10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_t09_id_stato_riga_ordine_t10,String)
            End If
            If (Original_t09_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_t09_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_t09_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_t09_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_t09_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(t09_id_riga_ordine_for,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t09_cod_riga_ordine_for As String,  _
                    ByVal t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer),  _
                    ByVal t09_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal t09_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal t09_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal t09_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal t09_id_stato_riga_ordine_t10 As String,  _
                    ByVal t09_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t09_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal t09_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_id_riga_ordine_for As Integer,  _
                    ByVal Original_t09_cod_riga_ordine_for As String,  _
                    ByVal Original_t09_id_testata_ordine_for_t08 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_t09_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t09_dt_consegna As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_id_stato_riga_ordine_t10 As String,  _
                    ByVal Original_t09_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_dt_modifica As Global.System.Nullable(Of Date),  _
                    ByVal Original_t09_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t09_cod_riga_ordine_for, t09_id_testata_ordine_for_t08, t09_posizione, t09_id_articolo_t20, t09_qt_ordinata, t09_qt_evasa, t09_prezzo_uni, t09_dt_consegna, t09_id_stato_riga_ordine_t10, t09_dt_creazione, t09_dt_modifica, t09_dt_cancellazione, Original_t09_id_riga_ordine_for, Original_t09_cod_riga_ordine_for, Original_t09_id_testata_ordine_for_t08, Original_t09_posizione, Original_t09_id_articolo_t20, Original_t09_qt_ordinata, Original_t09_qt_evasa, Original_t09_prezzo_uni, Original_t09_dt_consegna, Original_t09_id_stato_riga_ordine_t10, Original_t09_dt_creazione, Original_t09_dt_modifica, Original_t09_dt_cancellazione, Original_t09_id_riga_ordine_for)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t10_stati_riga_ordine_forTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t10_stati_riga_ordine_for"
            tableMapping.ColumnMappings.Add("t10_id_stato_riga_ordine_for", "t10_id_stato_riga_ordine_for")
            tableMapping.ColumnMappings.Add("t10_descrizione", "t10_descrizione")
            tableMapping.ColumnMappings.Add("t10_posizione", "t10_posizione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t10_stati_riga_ordine_for] WHERE (([t10_id_stato_riga_ordine_f"& _ 
                "or] = @Original_t10_id_stato_riga_ordine_for) AND ((@IsNull_t10_descrizione = 1 "& _ 
                "AND [t10_descrizione] IS NULL) OR ([t10_descrizione] = @Original_t10_descrizione"& _ 
                ")) AND ((@IsNull_t10_posizione = 1 AND [t10_posizione] IS NULL) OR ([t10_posizio"& _ 
                "ne] = @Original_t10_posizione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_id_stato_riga_ordine_for", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_id_stato_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t10_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t10_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t10_stati_riga_ordine_for] ([t10_id_stato_riga_ordine_for], [t"& _ 
                "10_descrizione], [t10_posizione]) VALUES (@t10_id_stato_riga_ordine_for, @t10_de"& _ 
                "scrizione, @t10_posizione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t10_id_stato_riga_ordine_for, t10_descrizion"& _ 
                "e, t10_posizione FROM t10_stati_riga_ordine_for WHERE (t10_id_stato_riga_ordine_"& _ 
                "for = @t10_id_stato_riga_ordine_for)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_id_stato_riga_ordine_for", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_id_stato_riga_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t10_stati_riga_ordine_for] SET [t10_id_stato_riga_ordine_for] = @t1"& _ 
                "0_id_stato_riga_ordine_for, [t10_descrizione] = @t10_descrizione, [t10_posizione"& _ 
                "] = @t10_posizione WHERE (([t10_id_stato_riga_ordine_for] = @Original_t10_id_sta"& _ 
                "to_riga_ordine_for) AND ((@IsNull_t10_descrizione = 1 AND [t10_descrizione] IS N"& _ 
                "ULL) OR ([t10_descrizione] = @Original_t10_descrizione)) AND ((@IsNull_t10_posiz"& _ 
                "ione = 1 AND [t10_posizione] IS NULL) OR ([t10_posizione] = @Original_t10_posizi"& _ 
                "one)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t10_id_stato_riga_ordine_for, t10_descrizione, t10_posizione FRO"& _ 
                "M t10_stati_riga_ordine_for WHERE (t10_id_stato_riga_ordine_for = @t10_id_stato_"& _ 
                "riga_ordine_for)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_id_stato_riga_ordine_for", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_id_stato_riga_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t10_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_id_stato_riga_ordine_for", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_id_stato_riga_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t10_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t10_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t10_posizione", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t10_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t10_id_stato_riga_ordine_for, t10_descrizione, t10_posizione FROM dbo.t10_"& _ 
                "stati_riga_ordine_for"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t10_stati_riga_ordine_forDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t10_stati_riga_ordine_forDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t10_stati_riga_ordine_forDataTable = New GestioneProduzione2009DataSet.t10_stati_riga_ordine_forDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t10_stati_riga_ordine_forDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t10_stati_riga_ordine_for")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t10_id_stato_riga_ordine_for As String, ByVal Original_t10_descrizione As String, ByVal Original_t10_posizione As Global.System.Nullable(Of Byte)) As Integer
            If (Original_t10_id_stato_riga_ordine_for Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t10_id_stato_riga_ordine_for")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t10_id_stato_riga_ordine_for,String)
            End If
            If (Original_t10_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t10_descrizione,String)
            End If
            If (Original_t10_posizione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t10_posizione.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t10_id_stato_riga_ordine_for As String, ByVal t10_descrizione As String, ByVal t10_posizione As Global.System.Nullable(Of Byte)) As Integer
            If (t10_id_stato_riga_ordine_for Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t10_id_stato_riga_ordine_for")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t10_id_stato_riga_ordine_for,String)
            End If
            If (t10_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t10_descrizione,String)
            End If
            If (t10_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t10_posizione.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t10_id_stato_riga_ordine_for As String, ByVal t10_descrizione As String, ByVal t10_posizione As Global.System.Nullable(Of Byte), ByVal Original_t10_id_stato_riga_ordine_for As String, ByVal Original_t10_descrizione As String, ByVal Original_t10_posizione As Global.System.Nullable(Of Byte)) As Integer
            If (t10_id_stato_riga_ordine_for Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t10_id_stato_riga_ordine_for")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t10_id_stato_riga_ordine_for,String)
            End If
            If (t10_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t10_descrizione,String)
            End If
            If (t10_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t10_posizione.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_t10_id_stato_riga_ordine_for Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t10_id_stato_riga_ordine_for")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_t10_id_stato_riga_ordine_for,String)
            End If
            If (Original_t10_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_t10_descrizione,String)
            End If
            If (Original_t10_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t10_posizione.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t10_descrizione As String, ByVal t10_posizione As Global.System.Nullable(Of Byte), ByVal Original_t10_id_stato_riga_ordine_for As String, ByVal Original_t10_descrizione As String, ByVal Original_t10_posizione As Global.System.Nullable(Of Byte)) As Integer
            Return Me.Update(Original_t10_id_stato_riga_ordine_for, t10_descrizione, t10_posizione, Original_t10_id_stato_riga_ordine_for, Original_t10_descrizione, Original_t10_posizione)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t11_fornitoriTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t11_fornitori"
            tableMapping.ColumnMappings.Add("t11_id_fornitore", "t11_id_fornitore")
            tableMapping.ColumnMappings.Add("t11_cod_fornitore", "t11_cod_fornitore")
            tableMapping.ColumnMappings.Add("t11_descrizione", "t11_descrizione")
            tableMapping.ColumnMappings.Add("t11_telefono", "t11_telefono")
            tableMapping.ColumnMappings.Add("t11_note", "t11_note")
            tableMapping.ColumnMappings.Add("t11_dt_creazione", "t11_dt_creazione")
            tableMapping.ColumnMappings.Add("t11_dt_modifica", "t11_dt_modifica")
            tableMapping.ColumnMappings.Add("t11_dt_cancellazione", "t11_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t11_fornitori] WHERE (([t11_id_fornitore] = @Original_t11_id_f"& _ 
                "ornitore) AND ((@IsNull_t11_cod_fornitore = 1 AND [t11_cod_fornitore] IS NULL) O"& _ 
                "R ([t11_cod_fornitore] = @Original_t11_cod_fornitore)) AND ((@IsNull_t11_descriz"& _ 
                "ione = 1 AND [t11_descrizione] IS NULL) OR ([t11_descrizione] = @Original_t11_de"& _ 
                "scrizione)) AND ((@IsNull_t11_telefono = 1 AND [t11_telefono] IS NULL) OR ([t11_"& _ 
                "telefono] = @Original_t11_telefono)) AND ((@IsNull_t11_dt_creazione = 1 AND [t11"& _ 
                "_dt_creazione] IS NULL) OR ([t11_dt_creazione] = @Original_t11_dt_creazione)) AN"& _ 
                "D ((@IsNull_t11_dt_modifica = 1 AND [t11_dt_modifica] IS NULL) OR ([t11_dt_modif"& _ 
                "ica] = @Original_t11_dt_modifica)) AND ((@IsNull_t11_dt_cancellazione = 1 AND [t"& _ 
                "11_dt_cancellazione] IS NULL) OR ([t11_dt_cancellazione] = @Original_t11_dt_canc"& _ 
                "ellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_id_fornitore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_id_fornitore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_cod_fornitore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_cod_fornitore", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_telefono", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t11_fornitori] ([t11_cod_fornitore], [t11_descrizione], [t11_t"& _ 
                "elefono], [t11_note], [t11_dt_creazione], [t11_dt_modifica], [t11_dt_cancellazio"& _ 
                "ne]) VALUES (@t11_cod_fornitore, @t11_descrizione, @t11_telefono, @t11_note, @t1"& _ 
                "1_dt_creazione, @t11_dt_modifica, @t11_dt_cancellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t11_id_fornito"& _ 
                "re, t11_cod_fornitore, t11_descrizione, t11_telefono, t11_note, t11_dt_creazione"& _ 
                ", t11_dt_modifica, t11_dt_cancellazione FROM t11_fornitori WHERE (t11_id_fornito"& _ 
                "re = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_cod_fornitore", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_note", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t11_fornitori] SET [t11_cod_fornitore] = @t11_cod_fornitore, [t11_d"& _ 
                "escrizione] = @t11_descrizione, [t11_telefono] = @t11_telefono, [t11_note] = @t1"& _ 
                "1_note, [t11_dt_creazione] = @t11_dt_creazione, [t11_dt_modifica] = @t11_dt_modi"& _ 
                "fica, [t11_dt_cancellazione] = @t11_dt_cancellazione WHERE (([t11_id_fornitore] "& _ 
                "= @Original_t11_id_fornitore) AND ((@IsNull_t11_cod_fornitore = 1 AND [t11_cod_f"& _ 
                "ornitore] IS NULL) OR ([t11_cod_fornitore] = @Original_t11_cod_fornitore)) AND ("& _ 
                "(@IsNull_t11_descrizione = 1 AND [t11_descrizione] IS NULL) OR ([t11_descrizione"& _ 
                "] = @Original_t11_descrizione)) AND ((@IsNull_t11_telefono = 1 AND [t11_telefono"& _ 
                "] IS NULL) OR ([t11_telefono] = @Original_t11_telefono)) AND ((@IsNull_t11_dt_cr"& _ 
                "eazione = 1 AND [t11_dt_creazione] IS NULL) OR ([t11_dt_creazione] = @Original_t"& _ 
                "11_dt_creazione)) AND ((@IsNull_t11_dt_modifica = 1 AND [t11_dt_modifica] IS NUL"& _ 
                "L) OR ([t11_dt_modifica] = @Original_t11_dt_modifica)) AND ((@IsNull_t11_dt_canc"& _ 
                "ellazione = 1 AND [t11_dt_cancellazione] IS NULL) OR ([t11_dt_cancellazione] = @"& _ 
                "Original_t11_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t11_id_fornitore, t11_cod_fornitore, t"& _ 
                "11_descrizione, t11_telefono, t11_note, t11_dt_creazione, t11_dt_modifica, t11_d"& _ 
                "t_cancellazione FROM t11_fornitori WHERE (t11_id_fornitore = @t11_id_fornitore)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_cod_fornitore", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_note", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_id_fornitore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_id_fornitore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_cod_fornitore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_cod_fornitore", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_cod_fornitore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_telefono", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_telefono", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t11_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t11_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t11_id_fornitore", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t11_id_fornitore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t11_id_fornitore, t11_cod_fornitore, t11_descrizione, t11_telefono, t11_no"& _ 
                "te, t11_dt_creazione, t11_dt_modifica, t11_dt_cancellazione FROM dbo.t11_fornito"& _ 
                "ri"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t11_fornitoriDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t11_fornitoriDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t11_fornitoriDataTable = New GestioneProduzione2009DataSet.t11_fornitoriDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t11_fornitoriDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t11_fornitori")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t11_id_fornitore As Integer, ByVal Original_t11_cod_fornitore As String, ByVal Original_t11_descrizione As String, ByVal Original_t11_telefono As String, ByVal Original_t11_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t11_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t11_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t11_id_fornitore,Integer)
            If (Original_t11_cod_fornitore Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t11_cod_fornitore,String)
            End If
            If (Original_t11_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t11_descrizione,String)
            End If
            If (Original_t11_telefono Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t11_telefono,String)
            End If
            If (Original_t11_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t11_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t11_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t11_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t11_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t11_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t11_cod_fornitore As String, ByVal t11_descrizione As String, ByVal t11_telefono As String, ByVal t11_note As String, ByVal t11_dt_creazione As Global.System.Nullable(Of Date), ByVal t11_dt_modifica As Global.System.Nullable(Of Date), ByVal t11_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t11_cod_fornitore Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t11_cod_fornitore,String)
            End If
            If (t11_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t11_descrizione,String)
            End If
            If (t11_telefono Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t11_telefono,String)
            End If
            If (t11_note Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t11_note,String)
            End If
            If (t11_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t11_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t11_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t11_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t11_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t11_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t11_cod_fornitore As String, ByVal t11_descrizione As String, ByVal t11_telefono As String, ByVal t11_note As String, ByVal t11_dt_creazione As Global.System.Nullable(Of Date), ByVal t11_dt_modifica As Global.System.Nullable(Of Date), ByVal t11_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t11_id_fornitore As Integer, ByVal Original_t11_cod_fornitore As String, ByVal Original_t11_descrizione As String, ByVal Original_t11_telefono As String, ByVal Original_t11_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t11_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t11_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t11_id_fornitore As Integer) As Integer
            If (t11_cod_fornitore Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t11_cod_fornitore,String)
            End If
            If (t11_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t11_descrizione,String)
            End If
            If (t11_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t11_telefono,String)
            End If
            If (t11_note Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t11_note,String)
            End If
            If (t11_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t11_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t11_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t11_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t11_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t11_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t11_id_fornitore,Integer)
            If (Original_t11_cod_fornitore Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_t11_cod_fornitore,String)
            End If
            If (Original_t11_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_t11_descrizione,String)
            End If
            If (Original_t11_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_t11_telefono,String)
            End If
            If (Original_t11_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_t11_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_t11_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_t11_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_t11_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_t11_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(t11_id_fornitore,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t11_cod_fornitore As String, ByVal t11_descrizione As String, ByVal t11_telefono As String, ByVal t11_note As String, ByVal t11_dt_creazione As Global.System.Nullable(Of Date), ByVal t11_dt_modifica As Global.System.Nullable(Of Date), ByVal t11_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t11_id_fornitore As Integer, ByVal Original_t11_cod_fornitore As String, ByVal Original_t11_descrizione As String, ByVal Original_t11_telefono As String, ByVal Original_t11_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t11_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t11_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t11_cod_fornitore, t11_descrizione, t11_telefono, t11_note, t11_dt_creazione, t11_dt_modifica, t11_dt_cancellazione, Original_t11_id_fornitore, Original_t11_cod_fornitore, Original_t11_descrizione, Original_t11_telefono, Original_t11_dt_creazione, Original_t11_dt_modifica, Original_t11_dt_cancellazione, Original_t11_id_fornitore)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t14_clientiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t14_clienti"
            tableMapping.ColumnMappings.Add("t14_id_cliente", "t14_id_cliente")
            tableMapping.ColumnMappings.Add("t14_cod_cliente", "t14_cod_cliente")
            tableMapping.ColumnMappings.Add("t14_descrizione", "t14_descrizione")
            tableMapping.ColumnMappings.Add("t14_telefono", "t14_telefono")
            tableMapping.ColumnMappings.Add("t14_note", "t14_note")
            tableMapping.ColumnMappings.Add("t14_dt_creazione", "t14_dt_creazione")
            tableMapping.ColumnMappings.Add("t14_dt_modifica", "t14_dt_modifica")
            tableMapping.ColumnMappings.Add("t14_dt_cancellazione", "t14_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t14_clienti] WHERE (([t14_id_cliente] = @Original_t14_id_clien"& _ 
                "te) AND ((@IsNull_t14_cod_cliente = 1 AND [t14_cod_cliente] IS NULL) OR ([t14_co"& _ 
                "d_cliente] = @Original_t14_cod_cliente)) AND ((@IsNull_t14_descrizione = 1 AND ["& _ 
                "t14_descrizione] IS NULL) OR ([t14_descrizione] = @Original_t14_descrizione)) AN"& _ 
                "D ((@IsNull_t14_telefono = 1 AND [t14_telefono] IS NULL) OR ([t14_telefono] = @O"& _ 
                "riginal_t14_telefono)) AND ((@IsNull_t14_dt_creazione = 1 AND [t14_dt_creazione]"& _ 
                " IS NULL) OR ([t14_dt_creazione] = @Original_t14_dt_creazione)) AND ((@IsNull_t1"& _ 
                "4_dt_modifica = 1 AND [t14_dt_modifica] IS NULL) OR ([t14_dt_modifica] = @Origin"& _ 
                "al_t14_dt_modifica)) AND ((@IsNull_t14_dt_cancellazione = 1 AND [t14_dt_cancella"& _ 
                "zione] IS NULL) OR ([t14_dt_cancellazione] = @Original_t14_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_id_cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_id_cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_cod_cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_cod_cliente", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_telefono", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t14_clienti] ([t14_cod_cliente], [t14_descrizione], [t14_telef"& _ 
                "ono], [t14_note], [t14_dt_creazione], [t14_dt_modifica], [t14_dt_cancellazione])"& _ 
                " VALUES (@t14_cod_cliente, @t14_descrizione, @t14_telefono, @t14_note, @t14_dt_c"& _ 
                "reazione, @t14_dt_modifica, @t14_dt_cancellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t14_id_cliente, t14_"& _ 
                "cod_cliente, t14_descrizione, t14_telefono, t14_note, t14_dt_creazione, t14_dt_m"& _ 
                "odifica, t14_dt_cancellazione FROM t14_clienti WHERE (t14_id_cliente = SCOPE_IDE"& _ 
                "NTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_cod_cliente", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_note", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t14_clienti] SET [t14_cod_cliente] = @t14_cod_cliente, [t14_descriz"& _ 
                "ione] = @t14_descrizione, [t14_telefono] = @t14_telefono, [t14_note] = @t14_note"& _ 
                ", [t14_dt_creazione] = @t14_dt_creazione, [t14_dt_modifica] = @t14_dt_modifica, "& _ 
                "[t14_dt_cancellazione] = @t14_dt_cancellazione WHERE (([t14_id_cliente] = @Origi"& _ 
                "nal_t14_id_cliente) AND ((@IsNull_t14_cod_cliente = 1 AND [t14_cod_cliente] IS N"& _ 
                "ULL) OR ([t14_cod_cliente] = @Original_t14_cod_cliente)) AND ((@IsNull_t14_descr"& _ 
                "izione = 1 AND [t14_descrizione] IS NULL) OR ([t14_descrizione] = @Original_t14_"& _ 
                "descrizione)) AND ((@IsNull_t14_telefono = 1 AND [t14_telefono] IS NULL) OR ([t1"& _ 
                "4_telefono] = @Original_t14_telefono)) AND ((@IsNull_t14_dt_creazione = 1 AND [t"& _ 
                "14_dt_creazione] IS NULL) OR ([t14_dt_creazione] = @Original_t14_dt_creazione)) "& _ 
                "AND ((@IsNull_t14_dt_modifica = 1 AND [t14_dt_modifica] IS NULL) OR ([t14_dt_mod"& _ 
                "ifica] = @Original_t14_dt_modifica)) AND ((@IsNull_t14_dt_cancellazione = 1 AND "& _ 
                "[t14_dt_cancellazione] IS NULL) OR ([t14_dt_cancellazione] = @Original_t14_dt_ca"& _ 
                "ncellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t14_id_cliente, t14_cod_cliente, t14_descrizione, t14_te"& _ 
                "lefono, t14_note, t14_dt_creazione, t14_dt_modifica, t14_dt_cancellazione FROM t"& _ 
                "14_clienti WHERE (t14_id_cliente = @t14_id_cliente)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_cod_cliente", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_note", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_id_cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_id_cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_cod_cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_cod_cliente", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_cod_cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_telefono", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_telefono", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_telefono", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t14_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t14_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t14_id_cliente", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t14_id_cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t14_id_cliente, t14_cod_cliente, t14_descrizione, t14_telefono, t14_note, "& _ 
                "t14_dt_creazione, t14_dt_modifica, t14_dt_cancellazione FROM dbo.t14_clienti"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t14_clientiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t14_clientiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t14_clientiDataTable = New GestioneProduzione2009DataSet.t14_clientiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t14_clientiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t14_clienti")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t14_id_cliente As Integer, ByVal Original_t14_cod_cliente As String, ByVal Original_t14_descrizione As String, ByVal Original_t14_telefono As String, ByVal Original_t14_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t14_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t14_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t14_id_cliente,Integer)
            If (Original_t14_cod_cliente Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t14_cod_cliente,String)
            End If
            If (Original_t14_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t14_descrizione,String)
            End If
            If (Original_t14_telefono Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t14_telefono,String)
            End If
            If (Original_t14_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t14_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t14_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t14_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t14_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t14_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t14_cod_cliente As String, ByVal t14_descrizione As String, ByVal t14_telefono As String, ByVal t14_note As String, ByVal t14_dt_creazione As Global.System.Nullable(Of Date), ByVal t14_dt_modifica As Global.System.Nullable(Of Date), ByVal t14_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t14_cod_cliente Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t14_cod_cliente,String)
            End If
            If (t14_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t14_descrizione,String)
            End If
            If (t14_telefono Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t14_telefono,String)
            End If
            If (t14_note Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t14_note,String)
            End If
            If (t14_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t14_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t14_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t14_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t14_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t14_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t14_cod_cliente As String, ByVal t14_descrizione As String, ByVal t14_telefono As String, ByVal t14_note As String, ByVal t14_dt_creazione As Global.System.Nullable(Of Date), ByVal t14_dt_modifica As Global.System.Nullable(Of Date), ByVal t14_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t14_id_cliente As Integer, ByVal Original_t14_cod_cliente As String, ByVal Original_t14_descrizione As String, ByVal Original_t14_telefono As String, ByVal Original_t14_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t14_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t14_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t14_id_cliente As Integer) As Integer
            If (t14_cod_cliente Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t14_cod_cliente,String)
            End If
            If (t14_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t14_descrizione,String)
            End If
            If (t14_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t14_telefono,String)
            End If
            If (t14_note Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t14_note,String)
            End If
            If (t14_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t14_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t14_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t14_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t14_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t14_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t14_id_cliente,Integer)
            If (Original_t14_cod_cliente Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_t14_cod_cliente,String)
            End If
            If (Original_t14_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_t14_descrizione,String)
            End If
            If (Original_t14_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_t14_telefono,String)
            End If
            If (Original_t14_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_t14_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_t14_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_t14_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_t14_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_t14_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(t14_id_cliente,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t14_cod_cliente As String, ByVal t14_descrizione As String, ByVal t14_telefono As String, ByVal t14_note As String, ByVal t14_dt_creazione As Global.System.Nullable(Of Date), ByVal t14_dt_modifica As Global.System.Nullable(Of Date), ByVal t14_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t14_id_cliente As Integer, ByVal Original_t14_cod_cliente As String, ByVal Original_t14_descrizione As String, ByVal Original_t14_telefono As String, ByVal Original_t14_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t14_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t14_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t14_cod_cliente, t14_descrizione, t14_telefono, t14_note, t14_dt_creazione, t14_dt_modifica, t14_dt_cancellazione, Original_t14_id_cliente, Original_t14_cod_cliente, Original_t14_descrizione, Original_t14_telefono, Original_t14_dt_creazione, Original_t14_dt_modifica, Original_t14_dt_cancellazione, Original_t14_id_cliente)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t15_causali_ordini_forTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t15_causali_ordini_for"
            tableMapping.ColumnMappings.Add("t15_id_causale_ordine_for", "t15_id_causale_ordine_for")
            tableMapping.ColumnMappings.Add("t15_cod_causale_ordine_for", "t15_cod_causale_ordine_for")
            tableMapping.ColumnMappings.Add("t15_descrizione", "t15_descrizione")
            tableMapping.ColumnMappings.Add("t15_tipo_azione", "t15_tipo_azione")
            tableMapping.ColumnMappings.Add("t15_dt_creazione", "t15_dt_creazione")
            tableMapping.ColumnMappings.Add("t15_dt_modifica", "t15_dt_modifica")
            tableMapping.ColumnMappings.Add("t15_dt_cancellazione", "t15_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t15_causali_ordini_for] WHERE (([t15_id_causale_ordine_for] = "& _ 
                "@Original_t15_id_causale_ordine_for) AND ((@IsNull_t15_cod_causale_ordine_for = "& _ 
                "1 AND [t15_cod_causale_ordine_for] IS NULL) OR ([t15_cod_causale_ordine_for] = @"& _ 
                "Original_t15_cod_causale_ordine_for)) AND ((@IsNull_t15_descrizione = 1 AND [t15"& _ 
                "_descrizione] IS NULL) OR ([t15_descrizione] = @Original_t15_descrizione)) AND ("& _ 
                "(@IsNull_t15_tipo_azione = 1 AND [t15_tipo_azione] IS NULL) OR ([t15_tipo_azione"& _ 
                "] = @Original_t15_tipo_azione)) AND ((@IsNull_t15_dt_creazione = 1 AND [t15_dt_c"& _ 
                "reazione] IS NULL) OR ([t15_dt_creazione] = @Original_t15_dt_creazione)) AND ((@"& _ 
                "IsNull_t15_dt_modifica = 1 AND [t15_dt_modifica] IS NULL) OR ([t15_dt_modifica] "& _ 
                "= @Original_t15_dt_modifica)) AND ((@IsNull_t15_dt_cancellazione = 1 AND [t15_dt"& _ 
                "_cancellazione] IS NULL) OR ([t15_dt_cancellazione] = @Original_t15_dt_cancellaz"& _ 
                "ione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_id_causale_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_id_causale_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_tipo_azione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_tipo_azione", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t15_causali_ordini_for] ([t15_cod_causale_ordine_for], [t15_de"& _ 
                "scrizione], [t15_tipo_azione], [t15_dt_creazione], [t15_dt_modifica], [t15_dt_ca"& _ 
                "ncellazione]) VALUES (@t15_cod_causale_ordine_for, @t15_descrizione, @t15_tipo_a"& _ 
                "zione, @t15_dt_creazione, @t15_dt_modifica, @t15_dt_cancellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t15_"& _ 
                "id_causale_ordine_for, t15_cod_causale_ordine_for, t15_descrizione, t15_tipo_azi"& _ 
                "one, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione FROM t15_causali_or"& _ 
                "dini_for WHERE (t15_id_causale_ordine_for = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_tipo_azione", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t15_causali_ordini_for] SET [t15_cod_causale_ordine_for] = @t15_cod"& _ 
                "_causale_ordine_for, [t15_descrizione] = @t15_descrizione, [t15_tipo_azione] = @"& _ 
                "t15_tipo_azione, [t15_dt_creazione] = @t15_dt_creazione, [t15_dt_modifica] = @t1"& _ 
                "5_dt_modifica, [t15_dt_cancellazione] = @t15_dt_cancellazione WHERE (([t15_id_ca"& _ 
                "usale_ordine_for] = @Original_t15_id_causale_ordine_for) AND ((@IsNull_t15_cod_c"& _ 
                "ausale_ordine_for = 1 AND [t15_cod_causale_ordine_for] IS NULL) OR ([t15_cod_cau"& _ 
                "sale_ordine_for] = @Original_t15_cod_causale_ordine_for)) AND ((@IsNull_t15_desc"& _ 
                "rizione = 1 AND [t15_descrizione] IS NULL) OR ([t15_descrizione] = @Original_t15"& _ 
                "_descrizione)) AND ((@IsNull_t15_tipo_azione = 1 AND [t15_tipo_azione] IS NULL) "& _ 
                "OR ([t15_tipo_azione] = @Original_t15_tipo_azione)) AND ((@IsNull_t15_dt_creazio"& _ 
                "ne = 1 AND [t15_dt_creazione] IS NULL) OR ([t15_dt_creazione] = @Original_t15_dt"& _ 
                "_creazione)) AND ((@IsNull_t15_dt_modifica = 1 AND [t15_dt_modifica] IS NULL) OR"& _ 
                " ([t15_dt_modifica] = @Original_t15_dt_modifica)) AND ((@IsNull_t15_dt_cancellaz"& _ 
                "ione = 1 AND [t15_dt_cancellazione] IS NULL) OR ([t15_dt_cancellazione] = @Origi"& _ 
                "nal_t15_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t15_id_causale_ordine_for, t15_cod_causale_"& _ 
                "ordine_for, t15_descrizione, t15_tipo_azione, t15_dt_creazione, t15_dt_modifica,"& _ 
                " t15_dt_cancellazione FROM t15_causali_ordini_for WHERE (t15_id_causale_ordine_f"& _ 
                "or = @t15_id_causale_ordine_for)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_tipo_azione", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_id_causale_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_id_causale_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_cod_causale_ordine_for", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_cod_causale_ordine_for", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_tipo_azione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_tipo_azione", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_tipo_azione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t15_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t15_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t15_id_causale_ordine_for", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t15_id_causale_ordine_for", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t15_id_causale_ordine_for, t15_cod_causale_ordine_for, t15_descrizione, t1"& _ 
                "5_tipo_azione, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione FROM dbo."& _ 
                "t15_causali_ordini_for"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t15_causali_ordini_forDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t15_causali_ordini_forDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t15_causali_ordini_forDataTable = New GestioneProduzione2009DataSet.t15_causali_ordini_forDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t15_causali_ordini_forDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t15_causali_ordini_for")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t15_id_causale_ordine_for As Integer, ByVal Original_t15_cod_causale_ordine_for As String, ByVal Original_t15_descrizione As String, ByVal Original_t15_tipo_azione As String, ByVal Original_t15_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t15_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t15_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t15_id_causale_ordine_for,Integer)
            If (Original_t15_cod_causale_ordine_for Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t15_cod_causale_ordine_for,String)
            End If
            If (Original_t15_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t15_descrizione,String)
            End If
            If (Original_t15_tipo_azione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t15_tipo_azione,String)
            End If
            If (Original_t15_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t15_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t15_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t15_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t15_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t15_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t15_cod_causale_ordine_for As String, ByVal t15_descrizione As String, ByVal t15_tipo_azione As String, ByVal t15_dt_creazione As Global.System.Nullable(Of Date), ByVal t15_dt_modifica As Global.System.Nullable(Of Date), ByVal t15_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t15_cod_causale_ordine_for Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t15_cod_causale_ordine_for,String)
            End If
            If (t15_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t15_descrizione,String)
            End If
            If (t15_tipo_azione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t15_tipo_azione,String)
            End If
            If (t15_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t15_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t15_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t15_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t15_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t15_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t15_cod_causale_ordine_for As String, ByVal t15_descrizione As String, ByVal t15_tipo_azione As String, ByVal t15_dt_creazione As Global.System.Nullable(Of Date), ByVal t15_dt_modifica As Global.System.Nullable(Of Date), ByVal t15_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t15_id_causale_ordine_for As Integer, ByVal Original_t15_cod_causale_ordine_for As String, ByVal Original_t15_descrizione As String, ByVal Original_t15_tipo_azione As String, ByVal Original_t15_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t15_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t15_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t15_id_causale_ordine_for As Integer) As Integer
            If (t15_cod_causale_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t15_cod_causale_ordine_for,String)
            End If
            If (t15_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t15_descrizione,String)
            End If
            If (t15_tipo_azione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t15_tipo_azione,String)
            End If
            If (t15_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t15_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t15_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t15_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t15_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t15_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_t15_id_causale_ordine_for,Integer)
            If (Original_t15_cod_causale_ordine_for Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_t15_cod_causale_ordine_for,String)
            End If
            If (Original_t15_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t15_descrizione,String)
            End If
            If (Original_t15_tipo_azione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t15_tipo_azione,String)
            End If
            If (Original_t15_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t15_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t15_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t15_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t15_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_t15_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(t15_id_causale_ordine_for,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t15_cod_causale_ordine_for As String, ByVal t15_descrizione As String, ByVal t15_tipo_azione As String, ByVal t15_dt_creazione As Global.System.Nullable(Of Date), ByVal t15_dt_modifica As Global.System.Nullable(Of Date), ByVal t15_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t15_id_causale_ordine_for As Integer, ByVal Original_t15_cod_causale_ordine_for As String, ByVal Original_t15_descrizione As String, ByVal Original_t15_tipo_azione As String, ByVal Original_t15_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t15_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t15_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t15_cod_causale_ordine_for, t15_descrizione, t15_tipo_azione, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione, Original_t15_id_causale_ordine_for, Original_t15_cod_causale_ordine_for, Original_t15_descrizione, Original_t15_tipo_azione, Original_t15_dt_creazione, Original_t15_dt_modifica, Original_t15_dt_cancellazione, Original_t15_id_causale_ordine_for)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t21_articoli_macchineTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t21_articoli_macchine"
            tableMapping.ColumnMappings.Add("t21_id_articolo_t20", "t21_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t21_id_macchina_t05", "t21_id_macchina_t05")
            tableMapping.ColumnMappings.Add("t21_consumo", "t21_consumo")
            tableMapping.ColumnMappings.Add("t21_posizione", "t21_posizione")
            tableMapping.ColumnMappings.Add("t21_dt_creazione", "t21_dt_creazione")
            tableMapping.ColumnMappings.Add("t21_dt_modifica", "t21_dt_modifica")
            tableMapping.ColumnMappings.Add("t21_dt_cancellazione", "t21_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t21_articoli_macchine] WHERE (([t21_id_articolo_t20] = @Origin"& _ 
                "al_t21_id_articolo_t20) AND ([t21_id_macchina_t05] = @Original_t21_id_macchina_t"& _ 
                "05) AND ((@IsNull_t21_consumo = 1 AND [t21_consumo] IS NULL) OR ([t21_consumo] ="& _ 
                " @Original_t21_consumo)) AND ((@IsNull_t21_posizione = 1 AND [t21_posizione] IS "& _ 
                "NULL) OR ([t21_posizione] = @Original_t21_posizione)) AND ((@IsNull_t21_dt_creaz"& _ 
                "ione = 1 AND [t21_dt_creazione] IS NULL) OR ([t21_dt_creazione] = @Original_t21_"& _ 
                "dt_creazione)) AND ((@IsNull_t21_dt_modifica = 1 AND [t21_dt_modifica] IS NULL) "& _ 
                "OR ([t21_dt_modifica] = @Original_t21_dt_modifica)) AND ((@IsNull_t21_dt_cancell"& _ 
                "azione = 1 AND [t21_dt_cancellazione] IS NULL) OR ([t21_dt_cancellazione] = @Ori"& _ 
                "ginal_t21_dt_cancellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_macchina_t05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_consumo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_consumo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_consumo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t21_consumo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t21_articoli_macchine] ([t21_id_articolo_t20], [t21_id_macchin"& _ 
                "a_t05], [t21_consumo], [t21_posizione], [t21_dt_creazione], [t21_dt_modifica], ["& _ 
                "t21_dt_cancellazione]) VALUES (@t21_id_articolo_t20, @t21_id_macchina_t05, @t21_"& _ 
                "consumo, @t21_posizione, @t21_dt_creazione, @t21_dt_modifica, @t21_dt_cancellazi"& _ 
                "one);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t21_id_articolo_t20, t21_id_macchina_t05, t21_consumo, t21_posizio"& _ 
                "ne, t21_dt_creazione, t21_dt_modifica, t21_dt_cancellazione FROM t21_articoli_ma"& _ 
                "cchine WHERE (t21_id_articolo_t20 = @t21_id_articolo_t20) AND (t21_id_macchina_t"& _ 
                "05 = @t21_id_macchina_t05)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_macchina_t05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_consumo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t21_consumo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t21_articoli_macchine] SET [t21_id_articolo_t20] = @t21_id_articolo"& _ 
                "_t20, [t21_id_macchina_t05] = @t21_id_macchina_t05, [t21_consumo] = @t21_consumo"& _ 
                ", [t21_posizione] = @t21_posizione, [t21_dt_creazione] = @t21_dt_creazione, [t21"& _ 
                "_dt_modifica] = @t21_dt_modifica, [t21_dt_cancellazione] = @t21_dt_cancellazione"& _ 
                " WHERE (([t21_id_articolo_t20] = @Original_t21_id_articolo_t20) AND ([t21_id_mac"& _ 
                "china_t05] = @Original_t21_id_macchina_t05) AND ((@IsNull_t21_consumo = 1 AND [t"& _ 
                "21_consumo] IS NULL) OR ([t21_consumo] = @Original_t21_consumo)) AND ((@IsNull_t"& _ 
                "21_posizione = 1 AND [t21_posizione] IS NULL) OR ([t21_posizione] = @Original_t2"& _ 
                "1_posizione)) AND ((@IsNull_t21_dt_creazione = 1 AND [t21_dt_creazione] IS NULL)"& _ 
                " OR ([t21_dt_creazione] = @Original_t21_dt_creazione)) AND ((@IsNull_t21_dt_modi"& _ 
                "fica = 1 AND [t21_dt_modifica] IS NULL) OR ([t21_dt_modifica] = @Original_t21_dt"& _ 
                "_modifica)) AND ((@IsNull_t21_dt_cancellazione = 1 AND [t21_dt_cancellazione] IS"& _ 
                " NULL) OR ([t21_dt_cancellazione] = @Original_t21_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t"& _ 
                "21_id_articolo_t20, t21_id_macchina_t05, t21_consumo, t21_posizione, t21_dt_crea"& _ 
                "zione, t21_dt_modifica, t21_dt_cancellazione FROM t21_articoli_macchine WHERE (t"& _ 
                "21_id_articolo_t20 = @t21_id_articolo_t20) AND (t21_id_macchina_t05 = @t21_id_ma"& _ 
                "cchina_t05)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_macchina_t05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_consumo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t21_consumo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t21_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_id_macchina_t05", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_id_macchina_t05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_consumo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_consumo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_consumo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t21_consumo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_posizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t21_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t21_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t21_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t21_id_articolo_t20, t21_id_macchina_t05, t21_consumo, t21_posizione, t21_"& _ 
                "dt_creazione, t21_dt_modifica, t21_dt_cancellazione FROM dbo.t21_articoli_macchi"& _ 
                "ne"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t21_articoli_macchineDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t21_articoli_macchineDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t21_articoli_macchineDataTable = New GestioneProduzione2009DataSet.t21_articoli_macchineDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t21_articoli_macchineDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t21_articoli_macchine")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t21_id_articolo_t20 As Integer, ByVal Original_t21_id_macchina_t05 As Integer, ByVal Original_t21_consumo As Global.System.Nullable(Of Decimal), ByVal Original_t21_posizione As Global.System.Nullable(Of Integer), ByVal Original_t21_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t21_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t21_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t21_id_articolo_t20,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_t21_id_macchina_t05,Integer)
            If (Original_t21_consumo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_t21_consumo.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_posizione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_t21_posizione.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_t21_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_modifica.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_t21_dt_modifica.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_t21_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t21_id_articolo_t20 As Integer, ByVal t21_id_macchina_t05 As Integer, ByVal t21_consumo As Global.System.Nullable(Of Decimal), ByVal t21_posizione As Global.System.Nullable(Of Integer), ByVal t21_dt_creazione As Global.System.Nullable(Of Date), ByVal t21_dt_modifica As Global.System.Nullable(Of Date), ByVal t21_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(t21_id_articolo_t20,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(t21_id_macchina_t05,Integer)
            If (t21_consumo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t21_consumo.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t21_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t21_posizione.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t21_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t21_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t21_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t21_id_articolo_t20 As Integer, ByVal t21_id_macchina_t05 As Integer, ByVal t21_consumo As Global.System.Nullable(Of Decimal), ByVal t21_posizione As Global.System.Nullable(Of Integer), ByVal t21_dt_creazione As Global.System.Nullable(Of Date), ByVal t21_dt_modifica As Global.System.Nullable(Of Date), ByVal t21_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t21_id_articolo_t20 As Integer, ByVal Original_t21_id_macchina_t05 As Integer, ByVal Original_t21_consumo As Global.System.Nullable(Of Decimal), ByVal Original_t21_posizione As Global.System.Nullable(Of Integer), ByVal Original_t21_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t21_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t21_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t21_id_articolo_t20,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t21_id_macchina_t05,Integer)
            If (t21_consumo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t21_consumo.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t21_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t21_posizione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t21_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t21_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t21_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t21_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t21_id_articolo_t20,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_t21_id_macchina_t05,Integer)
            If (Original_t21_consumo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t21_consumo.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t21_posizione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t21_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_t21_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_t21_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_t21_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t21_consumo As Global.System.Nullable(Of Decimal), ByVal t21_posizione As Global.System.Nullable(Of Integer), ByVal t21_dt_creazione As Global.System.Nullable(Of Date), ByVal t21_dt_modifica As Global.System.Nullable(Of Date), ByVal t21_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t21_id_articolo_t20 As Integer, ByVal Original_t21_id_macchina_t05 As Integer, ByVal Original_t21_consumo As Global.System.Nullable(Of Decimal), ByVal Original_t21_posizione As Global.System.Nullable(Of Integer), ByVal Original_t21_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t21_dt_modifica As Global.System.Nullable(Of Date), ByVal Original_t21_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_t21_id_articolo_t20, Original_t21_id_macchina_t05, t21_consumo, t21_posizione, t21_dt_creazione, t21_dt_modifica, t21_dt_cancellazione, Original_t21_id_articolo_t20, Original_t21_id_macchina_t05, Original_t21_consumo, Original_t21_posizione, Original_t21_dt_creazione, Original_t21_dt_modifica, Original_t21_dt_cancellazione)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t22_articoli_articoliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t22_articoli_articoli"
            tableMapping.ColumnMappings.Add("t22_id_articolo_t20", "t22_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t22_id_articolo_padre_t20", "t22_id_articolo_padre_t20")
            tableMapping.ColumnMappings.Add("t22_consumo", "t22_consumo")
            tableMapping.ColumnMappings.Add("t22_posizione", "t22_posizione")
            tableMapping.ColumnMappings.Add("t22_dt_creazione", "t22_dt_creazione")
            tableMapping.ColumnMappings.Add("t22_dt_modifica", "t22_dt_modifica")
            tableMapping.ColumnMappings.Add("t22_dt_cancellazione", "t22_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t22_articoli_articoli] ([t22_id_articolo_t20], [t22_id_articol"& _ 
                "o_padre_t20], [t22_consumo], [t22_posizione], [t22_dt_creazione], [t22_dt_modifi"& _ 
                "ca], [t22_dt_cancellazione]) VALUES (@t22_id_articolo_t20, @t22_id_articolo_padr"& _ 
                "e_t20, @t22_consumo, @t22_posizione, @t22_dt_creazione, @t22_dt_modifica, @t22_d"& _ 
                "t_cancellazione)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_id_articolo_padre_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_id_articolo_padre_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_consumo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t22_consumo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t22_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t22_id_articolo_t20, t22_id_articolo_padre_t20, t22_consumo, t22_posizione"& _ 
                ", t22_dt_creazione, t22_dt_modifica, t22_dt_cancellazione FROM dbo.t22_articoli_"& _ 
                "articoli"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     t22_id_articolo_t20, t22_id_articolo_padre_t20, t22_consumo, t22_posiz"& _ 
                "ione, t22_dt_creazione, t22_dt_modifica, t22_dt_cancellazione"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         t22_"& _ 
                "articoli_articoli"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (t22_id_articolo_padre_t20 = @idArticoloPadre)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idArticoloPadre", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t22_id_articolo_padre_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable = New GestioneProduzione2009DataSet.t22_articoli_articoliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByIdPadre(ByVal dataTable As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable, ByVal idArticoloPadre As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (idArticoloPadre.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idArticoloPadre.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByIdPadre(ByVal idArticoloPadre As Global.System.Nullable(Of Integer)) As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (idArticoloPadre.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idArticoloPadre.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable = New GestioneProduzione2009DataSet.t22_articoli_articoliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t22_articoli_articoliDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t22_articoli_articoli")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t22_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal t22_id_articolo_padre_t20 As Global.System.Nullable(Of Integer), ByVal t22_consumo As Global.System.Nullable(Of Decimal), ByVal t22_posizione As Global.System.Nullable(Of Integer), ByVal t22_dt_creazione As Global.System.Nullable(Of Date), ByVal t22_dt_modifica As Global.System.Nullable(Of Date), ByVal t22_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t22_id_articolo_t20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t22_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (t22_id_articolo_padre_t20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t22_id_articolo_padre_t20.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (t22_consumo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t22_consumo.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t22_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t22_posizione.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t22_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t22_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t22_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t22_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t22_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t22_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t25_matricoleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t25_matricole"
            tableMapping.ColumnMappings.Add("t25_id_matricola", "t25_id_matricola")
            tableMapping.ColumnMappings.Add("t25_id_articolo_t20", "t25_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t25_cod_matricola", "t25_cod_matricola")
            tableMapping.ColumnMappings.Add("t25_descrizione", "t25_descrizione")
            tableMapping.ColumnMappings.Add("t25_dt_creazione", "t25_dt_creazione")
            tableMapping.ColumnMappings.Add("t25_dt_cancellazione", "t25_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[t25_matricole] WHERE (([t25_id_matricola] = @Original_t25_id_m"& _ 
                "atricola) AND ((@IsNull_t25_id_articolo_t20 = 1 AND [t25_id_articolo_t20] IS NUL"& _ 
                "L) OR ([t25_id_articolo_t20] = @Original_t25_id_articolo_t20)) AND ([t25_cod_mat"& _ 
                "ricola] = @Original_t25_cod_matricola) AND ((@IsNull_t25_descrizione = 1 AND [t2"& _ 
                "5_descrizione] IS NULL) OR ([t25_descrizione] = @Original_t25_descrizione)) AND "& _ 
                "((@IsNull_t25_dt_creazione = 1 AND [t25_dt_creazione] IS NULL) OR ([t25_dt_creaz"& _ 
                "ione] = @Original_t25_dt_creazione)) AND ((@IsNull_t25_dt_cancellazione = 1 AND "& _ 
                "[t25_dt_cancellazione] IS NULL) OR ([t25_dt_cancellazione] = @Original_t25_dt_ca"& _ 
                "ncellazione)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_id_matricola", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_matricola", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_cod_matricola", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_cod_matricola", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t25_matricole] ([t25_id_articolo_t20], [t25_cod_matricola], [t"& _ 
                "25_descrizione], [t25_dt_creazione], [t25_dt_cancellazione]) VALUES (@t25_id_art"& _ 
                "icolo_t20, @t25_cod_matricola, @t25_descrizione, @t25_dt_creazione, @t25_dt_canc"& _ 
                "ellazione);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t25_id_matricola, t25_id_articolo_t20, t25_cod_matricola, t2"& _ 
                "5_descrizione, t25_dt_creazione, t25_dt_cancellazione FROM t25_matricole WHERE ("& _ 
                "t25_cod_matricola = @t25_cod_matricola)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_cod_matricola", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_cod_matricola", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[t25_matricole] SET [t25_id_articolo_t20] = @t25_id_articolo_t20, [t"& _ 
                "25_cod_matricola] = @t25_cod_matricola, [t25_descrizione] = @t25_descrizione, [t"& _ 
                "25_dt_creazione] = @t25_dt_creazione, [t25_dt_cancellazione] = @t25_dt_cancellaz"& _ 
                "ione WHERE (([t25_id_matricola] = @Original_t25_id_matricola) AND ((@IsNull_t25_"& _ 
                "id_articolo_t20 = 1 AND [t25_id_articolo_t20] IS NULL) OR ([t25_id_articolo_t20]"& _ 
                " = @Original_t25_id_articolo_t20)) AND ([t25_cod_matricola] = @Original_t25_cod_"& _ 
                "matricola) AND ((@IsNull_t25_descrizione = 1 AND [t25_descrizione] IS NULL) OR ("& _ 
                "[t25_descrizione] = @Original_t25_descrizione)) AND ((@IsNull_t25_dt_creazione ="& _ 
                " 1 AND [t25_dt_creazione] IS NULL) OR ([t25_dt_creazione] = @Original_t25_dt_cre"& _ 
                "azione)) AND ((@IsNull_t25_dt_cancellazione = 1 AND [t25_dt_cancellazione] IS NU"& _ 
                "LL) OR ([t25_dt_cancellazione] = @Original_t25_dt_cancellazione)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t25_"& _ 
                "id_matricola, t25_id_articolo_t20, t25_cod_matricola, t25_descrizione, t25_dt_cr"& _ 
                "eazione, t25_dt_cancellazione FROM t25_matricole WHERE (t25_cod_matricola = @t25"& _ 
                "_cod_matricola)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_cod_matricola", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_cod_matricola", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t25_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_id_matricola", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_matricola", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_id_articolo_t20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_cod_matricola", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_cod_matricola", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_dt_creazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_creazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t25_dt_cancellazione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t25_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t25_dt_cancellazione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t25_id_matricola, t25_id_articolo_t20, t25_cod_matricola, t25_descrizione,"& _ 
                " t25_dt_creazione, t25_dt_cancellazione FROM dbo.t25_matricole"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t25_matricoleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t25_matricoleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t25_matricoleDataTable = New GestioneProduzione2009DataSet.t25_matricoleDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t25_matricoleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t25_matricole")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t25_id_matricola As Integer, ByVal Original_t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal Original_t25_cod_matricola As String, ByVal Original_t25_descrizione As String, ByVal Original_t25_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t25_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t25_id_matricola,Integer)
            If (Original_t25_id_articolo_t20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t25_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_t25_cod_matricola Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t25_cod_matricola")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_t25_cod_matricola,String)
            End If
            If (Original_t25_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_t25_descrizione,String)
            End If
            If (Original_t25_dt_creazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_t25_dt_creazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_t25_dt_cancellazione.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_t25_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal t25_cod_matricola As String, ByVal t25_descrizione As String, ByVal t25_dt_creazione As Global.System.Nullable(Of Date), ByVal t25_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t25_id_articolo_t20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t25_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (t25_cod_matricola Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t25_cod_matricola")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t25_cod_matricola,String)
            End If
            If (t25_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t25_descrizione,String)
            End If
            If (t25_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t25_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t25_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t25_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal t25_cod_matricola As String, ByVal t25_descrizione As String, ByVal t25_dt_creazione As Global.System.Nullable(Of Date), ByVal t25_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t25_id_matricola As Integer, ByVal Original_t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal Original_t25_cod_matricola As String, ByVal Original_t25_descrizione As String, ByVal Original_t25_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t25_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            If (t25_id_articolo_t20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t25_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (t25_cod_matricola Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t25_cod_matricola")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t25_cod_matricola,String)
            End If
            If (t25_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t25_descrizione,String)
            End If
            If (t25_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t25_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t25_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t25_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_t25_id_matricola,Integer)
            If (Original_t25_id_articolo_t20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t25_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_t25_cod_matricola Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t25_cod_matricola")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_t25_cod_matricola,String)
            End If
            If (Original_t25_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_t25_descrizione,String)
            End If
            If (Original_t25_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t25_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t25_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t25_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal t25_descrizione As String, ByVal t25_dt_creazione As Global.System.Nullable(Of Date), ByVal t25_dt_cancellazione As Global.System.Nullable(Of Date), ByVal Original_t25_id_matricola As Integer, ByVal Original_t25_id_articolo_t20 As Global.System.Nullable(Of Integer), ByVal Original_t25_cod_matricola As String, ByVal Original_t25_descrizione As String, ByVal Original_t25_dt_creazione As Global.System.Nullable(Of Date), ByVal Original_t25_dt_cancellazione As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(t25_id_articolo_t20, Original_t25_cod_matricola, t25_descrizione, t25_dt_creazione, t25_dt_cancellazione, Original_t25_id_matricola, Original_t25_id_articolo_t20, Original_t25_cod_matricola, Original_t25_descrizione, Original_t25_dt_creazione, Original_t25_dt_cancellazione)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t26_formule_prezziTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t26_formule_prezzi"
            tableMapping.ColumnMappings.Add("t26_id_formula", "t26_id_formula")
            tableMapping.ColumnMappings.Add("t26_cod_formula", "t26_cod_formula")
            tableMapping.ColumnMappings.Add("t26_descrizione", "t26_descrizione")
            tableMapping.ColumnMappings.Add("t26_formula_da", "t26_formula_da")
            tableMapping.ColumnMappings.Add("t26_formula_a", "t26_formula_a")
            tableMapping.ColumnMappings.Add("t26_prezzo_fisso", "t26_prezzo_fisso")
            tableMapping.ColumnMappings.Add("t26_fattore", "t26_fattore")
            tableMapping.ColumnMappings.Add("t26_arrotondamento", "t26_arrotondamento")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [t26_formule_prezzi] WHERE (([t26_id_formula] = @Original_t26_id_form"& _ 
                "ula) AND ((@IsNull_t26_cod_formula = 1 AND [t26_cod_formula] IS NULL) OR ([t26_c"& _ 
                "od_formula] = @Original_t26_cod_formula)) AND ((@IsNull_t26_descrizione = 1 AND "& _ 
                "[t26_descrizione] IS NULL) OR ([t26_descrizione] = @Original_t26_descrizione)) A"& _ 
                "ND ((@IsNull_t26_formula_da = 1 AND [t26_formula_da] IS NULL) OR ([t26_formula_d"& _ 
                "a] = @Original_t26_formula_da)) AND ((@IsNull_t26_formula_a = 1 AND [t26_formula"& _ 
                "_a] IS NULL) OR ([t26_formula_a] = @Original_t26_formula_a)) AND ((@IsNull_t26_p"& _ 
                "rezzo_fisso = 1 AND [t26_prezzo_fisso] IS NULL) OR ([t26_prezzo_fisso] = @Origin"& _ 
                "al_t26_prezzo_fisso)) AND ((@IsNull_t26_fattore = 1 AND [t26_fattore] IS NULL) O"& _ 
                "R ([t26_fattore] = @Original_t26_fattore)) AND ((@IsNull_t26_arrotondamento = 1 "& _ 
                "AND [t26_arrotondamento] IS NULL) OR ([t26_arrotondamento] = @Original_t26_arrot"& _ 
                "ondamento)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_id_formula", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_id_formula", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_cod_formula", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_cod_formula", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_formula_da", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_formula_da", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_formula_da", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_da", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_formula_a", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_formula_a", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_formula_a", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_a", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_prezzo_fisso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_prezzo_fisso", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_fattore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_fattore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_fattore", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_fattore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_arrotondamento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_arrotondamento", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_arrotondamento", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_arrotondamento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [t26_formule_prezzi] ([t26_cod_formula], [t26_descrizione], [t26_form"& _ 
                "ula_da], [t26_formula_a], [t26_prezzo_fisso], [t26_fattore], [t26_arrotondamento"& _ 
                "]) VALUES (@t26_cod_formula, @t26_descrizione, @t26_formula_da, @t26_formula_a, "& _ 
                "@t26_prezzo_fisso, @t26_fattore, @t26_arrotondamento);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t26_id_formula, t"& _ 
                "26_cod_formula, t26_descrizione, t26_formula_da, t26_formula_a, t26_prezzo_fisso"& _ 
                ", t26_fattore, t26_arrotondamento FROM t26_formule_prezzi WHERE (t26_id_formula "& _ 
                "= SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_cod_formula", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_formula_da", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_da", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_formula_a", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_a", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_prezzo_fisso", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_fattore", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_fattore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_arrotondamento", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_arrotondamento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [t26_formule_prezzi] SET [t26_cod_formula] = @t26_cod_formula, [t26_descri"& _ 
                "zione] = @t26_descrizione, [t26_formula_da] = @t26_formula_da, [t26_formula_a] ="& _ 
                " @t26_formula_a, [t26_prezzo_fisso] = @t26_prezzo_fisso, [t26_fattore] = @t26_fa"& _ 
                "ttore, [t26_arrotondamento] = @t26_arrotondamento WHERE (([t26_id_formula] = @Or"& _ 
                "iginal_t26_id_formula) AND ((@IsNull_t26_cod_formula = 1 AND [t26_cod_formula] I"& _ 
                "S NULL) OR ([t26_cod_formula] = @Original_t26_cod_formula)) AND ((@IsNull_t26_de"& _ 
                "scrizione = 1 AND [t26_descrizione] IS NULL) OR ([t26_descrizione] = @Original_t"& _ 
                "26_descrizione)) AND ((@IsNull_t26_formula_da = 1 AND [t26_formula_da] IS NULL) "& _ 
                "OR ([t26_formula_da] = @Original_t26_formula_da)) AND ((@IsNull_t26_formula_a = "& _ 
                "1 AND [t26_formula_a] IS NULL) OR ([t26_formula_a] = @Original_t26_formula_a)) A"& _ 
                "ND ((@IsNull_t26_prezzo_fisso = 1 AND [t26_prezzo_fisso] IS NULL) OR ([t26_prezz"& _ 
                "o_fisso] = @Original_t26_prezzo_fisso)) AND ((@IsNull_t26_fattore = 1 AND [t26_f"& _ 
                "attore] IS NULL) OR ([t26_fattore] = @Original_t26_fattore)) AND ((@IsNull_t26_a"& _ 
                "rrotondamento = 1 AND [t26_arrotondamento] IS NULL) OR ([t26_arrotondamento] = @"& _ 
                "Original_t26_arrotondamento)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t26_id_formula, t26_cod_formula, t26_des"& _ 
                "crizione, t26_formula_da, t26_formula_a, t26_prezzo_fisso, t26_fattore, t26_arro"& _ 
                "tondamento FROM t26_formule_prezzi WHERE (t26_id_formula = @t26_id_formula)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_cod_formula", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_formula_da", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_da", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_formula_a", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_a", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_prezzo_fisso", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_fattore", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_fattore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_arrotondamento", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_arrotondamento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_id_formula", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_id_formula", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_cod_formula", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_cod_formula", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_cod_formula", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_descrizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_descrizione", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_formula_da", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_formula_da", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_formula_da", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_da", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_formula_a", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_formula_a", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_formula_a", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_formula_a", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_prezzo_fisso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_prezzo_fisso", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_prezzo_fisso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_fattore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_fattore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_fattore", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_fattore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t26_arrotondamento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_arrotondamento", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t26_arrotondamento", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t26_arrotondamento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t26_id_formula", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t26_id_formula", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t26_id_formula, t26_cod_formula, t26_descrizione, t26_formula_da, t26_form"& _ 
                "ula_a, t26_prezzo_fisso, t26_fattore, t26_arrotondamento FROM t26_formule_prezzi"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t26_formule_prezziDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t26_formule_prezziDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t26_formule_prezziDataTable = New GestioneProduzione2009DataSet.t26_formule_prezziDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t26_formule_prezziDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t26_formule_prezzi")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t26_id_formula As Integer, ByVal Original_t26_cod_formula As String, ByVal Original_t26_descrizione As String, ByVal Original_t26_formula_da As Global.System.Nullable(Of Decimal), ByVal Original_t26_formula_a As Global.System.Nullable(Of Decimal), ByVal Original_t26_prezzo_fisso As Global.System.Nullable(Of Decimal), ByVal Original_t26_fattore As Global.System.Nullable(Of Decimal), ByVal Original_t26_arrotondamento As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t26_id_formula,Integer)
            If (Original_t26_cod_formula Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t26_cod_formula,String)
            End If
            If (Original_t26_descrizione Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_t26_descrizione,String)
            End If
            If (Original_t26_formula_da.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_t26_formula_da.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_formula_a.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_t26_formula_a.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_prezzo_fisso.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_t26_prezzo_fisso.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_fattore.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_t26_fattore.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_arrotondamento.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_t26_arrotondamento.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t26_cod_formula As String, ByVal t26_descrizione As String, ByVal t26_formula_da As Global.System.Nullable(Of Decimal), ByVal t26_formula_a As Global.System.Nullable(Of Decimal), ByVal t26_prezzo_fisso As Global.System.Nullable(Of Decimal), ByVal t26_fattore As Global.System.Nullable(Of Decimal), ByVal t26_arrotondamento As Global.System.Nullable(Of Decimal)) As Integer
            If (t26_cod_formula Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t26_cod_formula,String)
            End If
            If (t26_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t26_descrizione,String)
            End If
            If (t26_formula_da.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t26_formula_da.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t26_formula_a.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t26_formula_a.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t26_prezzo_fisso.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t26_prezzo_fisso.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t26_fattore.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t26_fattore.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t26_arrotondamento.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t26_arrotondamento.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t26_cod_formula As String,  _
                    ByVal t26_descrizione As String,  _
                    ByVal t26_formula_da As Global.System.Nullable(Of Decimal),  _
                    ByVal t26_formula_a As Global.System.Nullable(Of Decimal),  _
                    ByVal t26_prezzo_fisso As Global.System.Nullable(Of Decimal),  _
                    ByVal t26_fattore As Global.System.Nullable(Of Decimal),  _
                    ByVal t26_arrotondamento As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t26_id_formula As Integer,  _
                    ByVal Original_t26_cod_formula As String,  _
                    ByVal Original_t26_descrizione As String,  _
                    ByVal Original_t26_formula_da As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t26_formula_a As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t26_prezzo_fisso As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t26_fattore As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_t26_arrotondamento As Global.System.Nullable(Of Decimal),  _
                    ByVal t26_id_formula As Integer) As Integer
            If (t26_cod_formula Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t26_cod_formula,String)
            End If
            If (t26_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t26_descrizione,String)
            End If
            If (t26_formula_da.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t26_formula_da.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t26_formula_a.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t26_formula_a.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t26_prezzo_fisso.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t26_prezzo_fisso.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t26_fattore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t26_fattore.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t26_arrotondamento.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t26_arrotondamento.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_t26_id_formula,Integer)
            If (Original_t26_cod_formula Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_t26_cod_formula,String)
            End If
            If (Original_t26_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_t26_descrizione,String)
            End If
            If (Original_t26_formula_da.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_t26_formula_da.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_formula_a.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_t26_formula_a.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_prezzo_fisso.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_t26_prezzo_fisso.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_fattore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_t26_fattore.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_t26_arrotondamento.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_t26_arrotondamento.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(t26_id_formula,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t26_cod_formula As String, ByVal t26_descrizione As String, ByVal t26_formula_da As Global.System.Nullable(Of Decimal), ByVal t26_formula_a As Global.System.Nullable(Of Decimal), ByVal t26_prezzo_fisso As Global.System.Nullable(Of Decimal), ByVal t26_fattore As Global.System.Nullable(Of Decimal), ByVal t26_arrotondamento As Global.System.Nullable(Of Decimal), ByVal Original_t26_id_formula As Integer, ByVal Original_t26_cod_formula As String, ByVal Original_t26_descrizione As String, ByVal Original_t26_formula_da As Global.System.Nullable(Of Decimal), ByVal Original_t26_formula_a As Global.System.Nullable(Of Decimal), ByVal Original_t26_prezzo_fisso As Global.System.Nullable(Of Decimal), ByVal Original_t26_fattore As Global.System.Nullable(Of Decimal), ByVal Original_t26_arrotondamento As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(t26_cod_formula, t26_descrizione, t26_formula_da, t26_formula_a, t26_prezzo_fisso, t26_fattore, t26_arrotondamento, Original_t26_id_formula, Original_t26_cod_formula, Original_t26_descrizione, Original_t26_formula_da, Original_t26_formula_a, Original_t26_prezzo_fisso, Original_t26_fattore, Original_t26_arrotondamento, Original_t26_id_formula)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t27_versioneTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t27_versione"
            tableMapping.ColumnMappings.Add("Version_Major", "Version_Major")
            tableMapping.ColumnMappings.Add("Version_Minor", "Version_Minor")
            tableMapping.ColumnMappings.Add("Version_Build", "Version_Build")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[t27_versione] ([Version_Major], [Version_Minor], [Version_Buil"& _ 
                "d]) VALUES (@Version_Major, @Version_Minor, @Version_Build)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Version_Major", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Version_Major", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Version_Minor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Version_Minor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Version_Build", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Version_Build", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Version_Major, Version_Minor, Version_Build FROM dbo.t27_versione"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t27_versioneDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t27_versioneDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t27_versioneDataTable = New GestioneProduzione2009DataSet.t27_versioneDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t27_versioneDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t27_versione")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Version_Major As Global.System.Nullable(Of Integer), ByVal Version_Minor As Global.System.Nullable(Of Integer), ByVal Version_Build As Global.System.Nullable(Of Integer)) As Integer
            If (Version_Major.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Version_Major.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Version_Minor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Version_Minor.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Version_Build.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Version_Build.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class viewElencoIstanzeSempliceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "viewElencoIstanzeSemplice"
            tableMapping.ColumnMappings.Add("t06_id_istanza_macchina", "t06_id_istanza_macchina")
            tableMapping.ColumnMappings.Add("t06_descrizione", "t06_descrizione")
            tableMapping.ColumnMappings.Add("t06_dt_consegna", "t06_dt_consegna")
            tableMapping.ColumnMappings.Add("t06_id_macchina_t05", "t06_id_macchina_t05")
            tableMapping.ColumnMappings.Add("t06_quantita", "t06_quantita")
            tableMapping.ColumnMappings.Add("t06_id_stato_istanza_t07", "t06_id_stato_istanza_t07")
            tableMapping.ColumnMappings.Add("t06_dt_creazione", "t06_dt_creazione")
            tableMapping.ColumnMappings.Add("t06_dt_modifica", "t06_dt_modifica")
            tableMapping.ColumnMappings.Add("t06_dt_cancellazione", "t06_dt_cancellazione")
            tableMapping.ColumnMappings.Add("ANNO", "ANNO")
            tableMapping.ColumnMappings.Add("t07_id_stato_istanza", "t07_id_stato_istanza")
            tableMapping.ColumnMappings.Add("t07_descrizione", "t07_descrizione")
            tableMapping.ColumnMappings.Add("t07_posizione", "t07_posizione")
            tableMapping.ColumnMappings.Add("t07_dt_creazione", "t07_dt_creazione")
            tableMapping.ColumnMappings.Add("t07_dt_modifica", "t07_dt_modifica")
            tableMapping.ColumnMappings.Add("t07_dt_cancellazione", "t07_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t05_id_macchina", "t05_id_macchina")
            tableMapping.ColumnMappings.Add("t05_cod_macchina", "t05_cod_macchina")
            tableMapping.ColumnMappings.Add("t05_descrizione", "t05_descrizione")
            tableMapping.ColumnMappings.Add("t05_dt_creazione", "t05_dt_creazione")
            tableMapping.ColumnMappings.Add("t05_dt_modifica", "t05_dt_modifica")
            tableMapping.ColumnMappings.Add("t05_dt_cancellazione", "t05_dt_cancellazione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t06_id_istanza_macchina, t06_descrizione, t06_dt_consegna, t06_id_macchina"& _ 
                "_t05, t06_quantita, t06_id_stato_istanza_t07, t06_dt_creazione, t06_dt_modifica,"& _ 
                " t06_dt_cancellazione, ANNO, t07_id_stato_istanza, t07_descrizione, t07_posizion"& _ 
                "e, t07_dt_creazione, t07_dt_modifica, t07_dt_cancellazione, t05_id_macchina, t05"& _ 
                "_cod_macchina, t05_descrizione, t05_dt_creazione, t05_dt_modifica, t05_dt_cancel"& _ 
                "lazione FROM dbo.viewElencoIstanzeSemplice"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.viewElencoIstanzeSempliceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.viewElencoIstanzeSempliceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.viewElencoIstanzeSempliceDataTable = New GestioneProduzione2009DataSet.viewElencoIstanzeSempliceDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class viewTestateOrdiniCliConStatoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "viewTestateOrdiniCliConStato"
            tableMapping.ColumnMappings.Add("t12_id_testata_ordine_cli", "t12_id_testata_ordine_cli")
            tableMapping.ColumnMappings.Add("t12_cod_testata_ordine_cli", "t12_cod_testata_ordine_cli")
            tableMapping.ColumnMappings.Add("t12_descrizione", "t12_descrizione")
            tableMapping.ColumnMappings.Add("t12_id_cliente_t14", "t12_id_cliente_t14")
            tableMapping.ColumnMappings.Add("t12_dt_ordine", "t12_dt_ordine")
            tableMapping.ColumnMappings.Add("t12_dt_consegna", "t12_dt_consegna")
            tableMapping.ColumnMappings.Add("t12_tipo_ordine", "t12_tipo_ordine")
            tableMapping.ColumnMappings.Add("t12_dt_creazione", "t12_dt_creazione")
            tableMapping.ColumnMappings.Add("t12_dt_modifica", "t12_dt_modifica")
            tableMapping.ColumnMappings.Add("t12_dt_cancellazione", "t12_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t14_id_cliente", "t14_id_cliente")
            tableMapping.ColumnMappings.Add("t14_cod_cliente", "t14_cod_cliente")
            tableMapping.ColumnMappings.Add("t14_descrizione", "t14_descrizione")
            tableMapping.ColumnMappings.Add("t14_telefono", "t14_telefono")
            tableMapping.ColumnMappings.Add("t14_note", "t14_note")
            tableMapping.ColumnMappings.Add("t14_dt_creazione", "t14_dt_creazione")
            tableMapping.ColumnMappings.Add("t14_dt_modifica", "t14_dt_modifica")
            tableMapping.ColumnMappings.Add("t14_dt_cancellazione", "t14_dt_cancellazione")
            tableMapping.ColumnMappings.Add("ANNO", "ANNO")
            tableMapping.ColumnMappings.Add("t12_stato_testata_ordine_cli", "t12_stato_testata_ordine_cli")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t12_id_testata_ordine_cli, t12_cod_testata_ordine_cli, t12_descrizione, t1"& _ 
                "2_id_cliente_t14, t12_dt_ordine, t12_dt_consegna, t12_tipo_ordine, t12_dt_creazi"& _ 
                "one, t12_dt_modifica, t12_dt_cancellazione, t14_id_cliente, t14_cod_cliente, t14"& _ 
                "_descrizione, t14_telefono, t14_note, t14_dt_creazione, t14_dt_modifica, t14_dt_"& _ 
                "cancellazione, ANNO, t12_stato_testata_ordine_cli FROM dbo.viewTestateOrdiniCliC"& _ 
                "onStato"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.viewTestateOrdiniCliConStatoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.viewTestateOrdiniCliConStatoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.viewTestateOrdiniCliConStatoDataTable = New GestioneProduzione2009DataSet.viewTestateOrdiniCliConStatoDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class viewTestateOrdiniConStatoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "viewTestateOrdiniConStato"
            tableMapping.ColumnMappings.Add("t08_id_testata_ordine_for", "t08_id_testata_ordine_for")
            tableMapping.ColumnMappings.Add("t08_cod_testata_ordine_for", "t08_cod_testata_ordine_for")
            tableMapping.ColumnMappings.Add("t08_descrizione", "t08_descrizione")
            tableMapping.ColumnMappings.Add("t08_id_fornitore_t11", "t08_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t08_dt_ordine", "t08_dt_ordine")
            tableMapping.ColumnMappings.Add("t08_dt_consegna", "t08_dt_consegna")
            tableMapping.ColumnMappings.Add("t08_tipo_ordine", "t08_tipo_ordine")
            tableMapping.ColumnMappings.Add("t08_id_causale_ordine_for_t15", "t08_id_causale_ordine_for_t15")
            tableMapping.ColumnMappings.Add("t08_dt_creazione", "t08_dt_creazione")
            tableMapping.ColumnMappings.Add("t08_dt_modifica", "t08_dt_modifica")
            tableMapping.ColumnMappings.Add("t08_dt_cancellazione", "t08_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t15_id_causale_ordine_for", "t15_id_causale_ordine_for")
            tableMapping.ColumnMappings.Add("t15_cod_causale_ordine_for", "t15_cod_causale_ordine_for")
            tableMapping.ColumnMappings.Add("t15_descrizione", "t15_descrizione")
            tableMapping.ColumnMappings.Add("t15_tipo_azione", "t15_tipo_azione")
            tableMapping.ColumnMappings.Add("t15_dt_creazione", "t15_dt_creazione")
            tableMapping.ColumnMappings.Add("t15_dt_modifica", "t15_dt_modifica")
            tableMapping.ColumnMappings.Add("t15_dt_cancellazione", "t15_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t11_id_fornitore", "t11_id_fornitore")
            tableMapping.ColumnMappings.Add("t11_cod_fornitore", "t11_cod_fornitore")
            tableMapping.ColumnMappings.Add("t11_descrizione", "t11_descrizione")
            tableMapping.ColumnMappings.Add("t11_telefono", "t11_telefono")
            tableMapping.ColumnMappings.Add("t11_note", "t11_note")
            tableMapping.ColumnMappings.Add("t11_dt_creazione", "t11_dt_creazione")
            tableMapping.ColumnMappings.Add("t11_dt_modifica", "t11_dt_modifica")
            tableMapping.ColumnMappings.Add("t11_dt_cancellazione", "t11_dt_cancellazione")
            tableMapping.ColumnMappings.Add("ANNO", "ANNO")
            tableMapping.ColumnMappings.Add("t08_stato_testata_ordine_for", "t08_stato_testata_ordine_for")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t08_id_testata_ordine_for, t08_cod_testata_ordine_for, t08_descrizione, t0"& _ 
                "8_id_fornitore_t11, t08_dt_ordine, t08_dt_consegna, t08_tipo_ordine, t08_id_caus"& _ 
                "ale_ordine_for_t15, t08_dt_creazione, t08_dt_modifica, t08_dt_cancellazione, t15"& _ 
                "_id_causale_ordine_for, t15_cod_causale_ordine_for, t15_descrizione, t15_tipo_az"& _ 
                "ione, t15_dt_creazione, t15_dt_modifica, t15_dt_cancellazione, t11_id_fornitore,"& _ 
                " t11_cod_fornitore, t11_descrizione, t11_telefono, t11_note, t11_dt_creazione, t"& _ 
                "11_dt_modifica, t11_dt_cancellazione, ANNO, t08_stato_testata_ordine_for FROM db"& _ 
                "o.viewTestateOrdiniConStato"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.viewTestateOrdiniConStatoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.viewTestateOrdiniConStatoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.viewTestateOrdiniConStatoDataTable = New GestioneProduzione2009DataSet.viewTestateOrdiniConStatoDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dvArticoliConMatricoleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dvArticoliConMatricole"
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t25_cod_matricola", "t25_cod_matricola")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        t20_articoli.t20_id_articolo, t20_articoli.t20_cod_articolo, t20_ar"& _ 
                "ticoli.t20_descrizione, t20_articoli.t20_prezzo, t25_matricole.t25_cod_matricola"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t20_articoli.t20_dt_cancellazione, t20_articoli.t20"& _ 
                "_is_ricambio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t20_articoli INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "t25_matricole ON t20_articoli.t20_id_articolo = t25_matricole.t25_id_articolo_t2"& _ 
                "0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (t20_articoli.t20_dt_cancellazione IS NULL) AND (t20_articoli.t2"& _ 
                "0_is_ricambio = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillRicambi(ByVal dataTable As GestioneProduzione2009DataSet.dvArticoliConMatricoleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t28_testate_ordini_cliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t28_testate_ordini_cli"
            tableMapping.ColumnMappings.Add("t28_id", "t28_id")
            tableMapping.ColumnMappings.Add("t28_cod", "t28_cod")
            tableMapping.ColumnMappings.Add("t28_descrizione", "t28_descrizione")
            tableMapping.ColumnMappings.Add("t28_commessa", "t28_commessa")
            tableMapping.ColumnMappings.Add("t28_commessa_del", "t28_commessa_del")
            tableMapping.ColumnMappings.Add("t28_consegna", "t28_consegna")
            tableMapping.ColumnMappings.Add("t28_cliente", "t28_cliente")
            tableMapping.ColumnMappings.Add("t28_cliente2", "t28_cliente2")
            tableMapping.ColumnMappings.Add("t28_telefono", "t28_telefono")
            tableMapping.ColumnMappings.Add("t28_rif_reda", "t28_rif_reda")
            tableMapping.ColumnMappings.Add("t28_vendita", "t28_vendita")
            tableMapping.ColumnMappings.Add("t28_riparazione", "t28_riparazione")
            tableMapping.ColumnMappings.Add("t28_completamento_fornitura", "t28_completamento_fornitura")
            tableMapping.ColumnMappings.Add("t28_aspetto_esteriore", "t28_aspetto_esteriore")
            tableMapping.ColumnMappings.Add("t28_misure", "t28_misure")
            tableMapping.ColumnMappings.Add("t28_peso", "t28_peso")
            tableMapping.ColumnMappings.Add("t28_rif_ordine", "t28_rif_ordine")
            tableMapping.ColumnMappings.Add("t28_note", "t28_note")
            tableMapping.ColumnMappings.Add("t28_spedizione", "t28_spedizione")
            tableMapping.ColumnMappings.Add("t28_porto", "t28_porto")
            tableMapping.ColumnMappings.Add("t28_dt_creazione", "t28_dt_creazione")
            tableMapping.ColumnMappings.Add("t28_dt_modifica", "t28_dt_modifica")
            tableMapping.ColumnMappings.Add("t28_dt_cancellazione", "t28_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t28_stato_testata_ordine", "t28_stato_testata_ordine")
            tableMapping.ColumnMappings.Add("t28_data_evasione", "t28_data_evasione")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [t28_testate_ordini_cli] WHERE (([t28_id] = @Original_t28_id) AND ((@"& _ 
                "IsNull_t28_dt_modifica = 1 AND [t28_dt_modifica] IS NULL) OR ([t28_dt_modifica] "& _ 
                "= @Original_t28_dt_modifica)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t28_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t28_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t28_dt_modifica", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [t28_testate_ordini_cli] ([t28_cod], [t28_descrizione], [t28_commessa"& _ 
                "], [t28_commessa_del], [t28_consegna], [t28_cliente], [t28_cliente2], [t28_telef"& _ 
                "ono], [t28_rif_reda], [t28_vendita], [t28_riparazione], [t28_completamento_forni"& _ 
                "tura], [t28_aspetto_esteriore], [t28_misure], [t28_peso], [t28_rif_ordine], [t28"& _ 
                "_note], [t28_spedizione], [t28_porto], [t28_dt_creazione], [t28_dt_cancellazione"& _ 
                "], [t28_data_evasione], [t28_stato_testata_ordine]) VALUES (@t28_cod, @t28_descr"& _ 
                "izione, @t28_commessa, @t28_commessa_del, @t28_consegna, @t28_cliente, @t28_clie"& _ 
                "nte2, @t28_telefono, @t28_rif_reda, @t28_vendita, @t28_riparazione, @t28_complet"& _ 
                "amento_fornitura, @t28_aspetto_esteriore, @t28_misure, @t28_peso, @t28_rif_ordin"& _ 
                "e, @t28_note, @t28_spedizione, @t28_porto, @t28_dt_creazione, @t28_dt_cancellazi"& _ 
                "one, @t28_data_evasione, @t28_stato_testata_ordine);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t28_id, t28_cod, t2"& _ 
                "8_descrizione, t28_commessa, t28_commessa_del, t28_consegna, t28_cliente, t28_cl"& _ 
                "iente2, t28_telefono, t28_rif_reda, t28_vendita, t28_riparazione, t28_completame"& _ 
                "nto_fornitura, t28_aspetto_esteriore, t28_misure, t28_peso, t28_rif_ordine, t28_"& _ 
                "note, t28_spedizione, t28_porto, t28_dt_creazione, t28_dt_modifica, t28_dt_cance"& _ 
                "llazione, t28_data_evasione, t28_stato_testata_ordine FROM t28_testate_ordini_cl"& _ 
                "i WHERE (t28_id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_descrizione", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_commessa", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_commessa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_commessa_del", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_commessa_del", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_consegna", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cliente", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cliente2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cliente2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_telefono", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_rif_reda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_rif_reda", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_vendita", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_vendita", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_riparazione", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_riparazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_completamento_fornitura", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_completamento_fornitura", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_aspetto_esteriore", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_aspetto_esteriore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_misure", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_misure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_peso", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_peso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_rif_ordine", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_rif_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_note", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_spedizione", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_spedizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_porto", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_porto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_data_evasione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_data_evasione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_stato_testata_ordine", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_stato_testata_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [t28_testate_ordini_cli] SET [t28_cod] = @t28_cod, [t28_descrizione] = @t2"& _ 
                "8_descrizione, [t28_commessa] = @t28_commessa, [t28_commessa_del] = @t28_commess"& _ 
                "a_del, [t28_consegna] = @t28_consegna, [t28_cliente] = @t28_cliente, [t28_client"& _ 
                "e2] = @t28_cliente2, [t28_telefono] = @t28_telefono, [t28_rif_reda] = @t28_rif_r"& _ 
                "eda, [t28_vendita] = @t28_vendita, [t28_riparazione] = @t28_riparazione, [t28_co"& _ 
                "mpletamento_fornitura] = @t28_completamento_fornitura, [t28_aspetto_esteriore] ="& _ 
                " @t28_aspetto_esteriore, [t28_misure] = @t28_misure, [t28_peso] = @t28_peso, [t2"& _ 
                "8_rif_ordine] = @t28_rif_ordine, [t28_note] = @t28_note, [t28_spedizione] = @t28"& _ 
                "_spedizione, [t28_porto] = @t28_porto, [t28_dt_creazione] = @t28_dt_creazione, ["& _ 
                "t28_dt_cancellazione] = @t28_dt_cancellazione, [t28_data_evasione] = @t28_data_e"& _ 
                "vasione, [t28_stato_testata_ordine] = @t28_stato_testata_ordine WHERE (([t28_id]"& _ 
                " = @Original_t28_id) AND ((@IsNull_t28_dt_modifica = 1 AND [t28_dt_modifica] IS "& _ 
                "NULL) OR ([t28_dt_modifica] = @Original_t28_dt_modifica)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t28_id, t28_"& _ 
                "cod, t28_descrizione, t28_commessa, t28_commessa_del, t28_consegna, t28_cliente,"& _ 
                " t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita, t28_riparazione, t28_com"& _ 
                "pletamento_fornitura, t28_aspetto_esteriore, t28_misure, t28_peso, t28_rif_ordin"& _ 
                "e, t28_note, t28_spedizione, t28_porto, t28_dt_creazione, t28_dt_modifica, t28_d"& _ 
                "t_cancellazione, t28_data_evasione, t28_stato_testata_ordine FROM t28_testate_or"& _ 
                "dini_cli WHERE (t28_id = @t28_id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_descrizione", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_commessa", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_commessa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_commessa_del", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_commessa_del", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_consegna", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_consegna", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cliente", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_cliente2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_cliente2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_telefono", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_telefono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_rif_reda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_rif_reda", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_vendita", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_vendita", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_riparazione", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_riparazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_completamento_fornitura", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_completamento_fornitura", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_aspetto_esteriore", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_aspetto_esteriore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_misure", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_misure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_peso", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_peso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_rif_ordine", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_rif_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_note", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_note", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_spedizione", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_spedizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_porto", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_porto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_data_evasione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_data_evasione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_stato_testata_ordine", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_stato_testata_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t28_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t28_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t28_dt_modifica", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t28_id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t28_id, t28_cod, t28_descrizione, t28_commessa, t28_commessa_del, t28_cons"& _ 
                "egna, t28_cliente, t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita, t28_ri"& _ 
                "parazione, t28_completamento_fornitura, t28_aspetto_esteriore, t28_misure, t28_p"& _ 
                "eso, t28_rif_ordine, t28_note, t28_spedizione, t28_porto, t28_dt_creazione, t28_"& _ 
                "dt_modifica, t28_dt_cancellazione, t28_data_evasione, t28_stato_testata_ordine F"& _ 
                "ROM t28_testate_ordini_cli"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        t28_id, t28_cod, t28_descrizione, t28_commessa, t28_commessa_del, t"& _ 
                "28_consegna, t28_cliente, t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t28_riparazione, t28_completamento_fornitura, t28_as"& _ 
                "petto_esteriore, t28_misure, t28_peso, t28_rif_ordine, t28_note, t28_spedizione,"& _ 
                " t28_porto, t28_dt_creazione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t28_dt_modifica, t28_dt"& _ 
                "_cancellazione, t28_data_evasione, t28_stato_testata_ordine"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t28"& _ 
                "_testate_ordini_cli"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (t28_id = @id) AND (t28_dt_cancellazione IS NU"& _ 
                "LL)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable = New GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillById(ByVal dataTable As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable, ByVal id As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataById(ByVal id As Integer) As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            Dim dataTable As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable = New GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t28_testate_ordini_cliDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t28_testate_ordini_cli")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t28_id As Integer, ByVal Original_t28_dt_modifica() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t28_id,Integer)
            If (Original_t28_dt_modifica Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t28_dt_modifica,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal t28_cod As String,  _
                    ByVal t28_descrizione As String,  _
                    ByVal t28_commessa As String,  _
                    ByVal t28_commessa_del As Global.System.Nullable(Of Date),  _
                    ByVal t28_consegna As String,  _
                    ByVal t28_cliente As String,  _
                    ByVal t28_cliente2 As String,  _
                    ByVal t28_telefono As String,  _
                    ByVal t28_rif_reda As String,  _
                    ByVal t28_vendita As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_riparazione As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_completamento_fornitura As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_aspetto_esteriore As String,  _
                    ByVal t28_misure As String,  _
                    ByVal t28_peso As String,  _
                    ByVal t28_rif_ordine As String,  _
                    ByVal t28_note As String,  _
                    ByVal t28_spedizione As String,  _
                    ByVal t28_porto As String,  _
                    ByVal t28_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t28_stato_testata_ordine As String) As Integer
            If (t28_cod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t28_cod,String)
            End If
            If (t28_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t28_descrizione,String)
            End If
            If (t28_commessa Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t28_commessa,String)
            End If
            If (t28_commessa_del.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t28_commessa_del.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t28_consegna Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t28_consegna,String)
            End If
            If (t28_cliente Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t28_cliente,String)
            End If
            If (t28_cliente2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t28_cliente2,String)
            End If
            If (t28_telefono Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t28_telefono,String)
            End If
            If (t28_rif_reda Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(t28_rif_reda,String)
            End If
            If (t28_vendita.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(t28_vendita.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t28_riparazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(t28_riparazione.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t28_completamento_fornitura.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(t28_completamento_fornitura.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (t28_aspetto_esteriore Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(t28_aspetto_esteriore,String)
            End If
            If (t28_misure Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(t28_misure,String)
            End If
            If (t28_peso Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(t28_peso,String)
            End If
            If (t28_rif_ordine Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(t28_rif_ordine,String)
            End If
            If (t28_note Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(t28_note,String)
            End If
            If (t28_spedizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(t28_spedizione,String)
            End If
            If (t28_porto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(t28_porto,String)
            End If
            If (t28_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(t28_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (t28_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(t28_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (t28_data_evasione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(t28_data_evasione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (t28_stato_testata_ordine Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(t28_stato_testata_ordine,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t28_cod As String,  _
                    ByVal t28_descrizione As String,  _
                    ByVal t28_commessa As String,  _
                    ByVal t28_commessa_del As Global.System.Nullable(Of Date),  _
                    ByVal t28_consegna As String,  _
                    ByVal t28_cliente As String,  _
                    ByVal t28_cliente2 As String,  _
                    ByVal t28_telefono As String,  _
                    ByVal t28_rif_reda As String,  _
                    ByVal t28_vendita As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_riparazione As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_completamento_fornitura As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_aspetto_esteriore As String,  _
                    ByVal t28_misure As String,  _
                    ByVal t28_peso As String,  _
                    ByVal t28_rif_ordine As String,  _
                    ByVal t28_note As String,  _
                    ByVal t28_spedizione As String,  _
                    ByVal t28_porto As String,  _
                    ByVal t28_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t28_stato_testata_ordine As String,  _
                    ByVal Original_t28_id As Integer,  _
                    ByVal Original_t28_dt_modifica() As Byte,  _
                    ByVal t28_id As Integer) As Integer
            If (t28_cod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t28_cod,String)
            End If
            If (t28_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t28_descrizione,String)
            End If
            If (t28_commessa Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t28_commessa,String)
            End If
            If (t28_commessa_del.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t28_commessa_del.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t28_consegna Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t28_consegna,String)
            End If
            If (t28_cliente Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t28_cliente,String)
            End If
            If (t28_cliente2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t28_cliente2,String)
            End If
            If (t28_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t28_telefono,String)
            End If
            If (t28_rif_reda Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(t28_rif_reda,String)
            End If
            If (t28_vendita.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(t28_vendita.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t28_riparazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(t28_riparazione.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t28_completamento_fornitura.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(t28_completamento_fornitura.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (t28_aspetto_esteriore Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(t28_aspetto_esteriore,String)
            End If
            If (t28_misure Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(t28_misure,String)
            End If
            If (t28_peso Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(t28_peso,String)
            End If
            If (t28_rif_ordine Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(t28_rif_ordine,String)
            End If
            If (t28_note Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(t28_note,String)
            End If
            If (t28_spedizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(t28_spedizione,String)
            End If
            If (t28_porto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(t28_porto,String)
            End If
            If (t28_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(t28_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (t28_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(t28_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (t28_data_evasione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(t28_data_evasione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (t28_stato_testata_ordine Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(t28_stato_testata_ordine,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_t28_id,Integer)
            If (Original_t28_dt_modifica Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_t28_dt_modifica,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(t28_id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t28_cod As String,  _
                    ByVal t28_descrizione As String,  _
                    ByVal t28_commessa As String,  _
                    ByVal t28_commessa_del As Global.System.Nullable(Of Date),  _
                    ByVal t28_consegna As String,  _
                    ByVal t28_cliente As String,  _
                    ByVal t28_cliente2 As String,  _
                    ByVal t28_telefono As String,  _
                    ByVal t28_rif_reda As String,  _
                    ByVal t28_vendita As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_riparazione As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_completamento_fornitura As Global.System.Nullable(Of Boolean),  _
                    ByVal t28_aspetto_esteriore As String,  _
                    ByVal t28_misure As String,  _
                    ByVal t28_peso As String,  _
                    ByVal t28_rif_ordine As String,  _
                    ByVal t28_note As String,  _
                    ByVal t28_spedizione As String,  _
                    ByVal t28_porto As String,  _
                    ByVal t28_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t28_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t28_stato_testata_ordine As String,  _
                    ByVal Original_t28_id As Integer,  _
                    ByVal Original_t28_dt_modifica() As Byte) As Integer
            Return Me.Update(t28_cod, t28_descrizione, t28_commessa, t28_commessa_del, t28_consegna, t28_cliente, t28_cliente2, t28_telefono, t28_rif_reda, t28_vendita, t28_riparazione, t28_completamento_fornitura, t28_aspetto_esteriore, t28_misure, t28_peso, t28_rif_ordine, t28_note, t28_spedizione, t28_porto, t28_dt_creazione, t28_dt_cancellazione, t28_data_evasione, t28_stato_testata_ordine, Original_t28_id, Original_t28_dt_modifica, Original_t28_id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t29_righe_ordine_cliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t29_righe_ordine_cli"
            tableMapping.ColumnMappings.Add("t29_id", "t29_id")
            tableMapping.ColumnMappings.Add("t29_id_testata_t28", "t29_id_testata_t28")
            tableMapping.ColumnMappings.Add("t29_cod", "t29_cod")
            tableMapping.ColumnMappings.Add("t29_descrizione", "t29_descrizione")
            tableMapping.ColumnMappings.Add("t29_id_articolo_t20", "t29_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t29_matricola", "t29_matricola")
            tableMapping.ColumnMappings.Add("t29_qt_ordinata", "t29_qt_ordinata")
            tableMapping.ColumnMappings.Add("t29_prezzo_uni", "t29_prezzo_uni")
            tableMapping.ColumnMappings.Add("t29_prezzo_tota", "t29_prezzo_tota")
            tableMapping.ColumnMappings.Add("t29_dt_creazione", "t29_dt_creazione")
            tableMapping.ColumnMappings.Add("t29_dt_modifica", "t29_dt_modifica")
            tableMapping.ColumnMappings.Add("t29_dt_cancellazione", "t29_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t29_stato_riga_ordine", "t29_stato_riga_ordine")
            tableMapping.ColumnMappings.Add("t29_qt_evasa", "t29_qt_evasa")
            tableMapping.ColumnMappings.Add("t29_data_evasione", "t29_data_evasione")
            tableMapping.ColumnMappings.Add("t29_posizione", "t29_posizione")
            tableMapping.ColumnMappings.Add("t29_descrizione_commerciale_it", "t29_descrizione_commerciale_it")
            tableMapping.ColumnMappings.Add("t29_descrizione_commerciale_en", "t29_descrizione_commerciale_en")
            tableMapping.ColumnMappings.Add("t29_descrizione_commerciale_es", "t29_descrizione_commerciale_es")
            tableMapping.ColumnMappings.Add("t29_descrizione_commerciale_fr", "t29_descrizione_commerciale_fr")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [t29_righe_ordine_cli] WHERE (([t29_id] = @Original_t29_id) AND ((@Is"& _ 
                "Null_t29_dt_modifica = 1 AND [t29_dt_modifica] IS NULL) OR ([t29_dt_modifica] = "& _ 
                "@Original_t29_dt_modifica)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t29_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t29_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t29_dt_modifica", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [t29_righe_ordine_cli] ([t29_id_testata_t28], [t29_cod], [t29_descriz"& _ 
                "ione], [t29_id_articolo_t20], [t29_matricola], [t29_qt_ordinata], [t29_prezzo_un"& _ 
                "i], [t29_prezzo_tota], [t29_dt_creazione], [t29_dt_cancellazione], [t29_data_eva"& _ 
                "sione], [t29_posizione], [t29_qt_evasa], [t29_stato_riga_ordine], [t29_descrizio"& _ 
                "ne_commerciale_it], [t29_descrizione_commerciale_en], [t29_descrizione_commercia"& _ 
                "le_es], [t29_descrizione_commerciale_fr]) VALUES (@t29_id_testata_t28, @t29_cod,"& _ 
                " @t29_descrizione, @t29_id_articolo_t20, @t29_matricola, @t29_qt_ordinata, @t29_"& _ 
                "prezzo_uni, @t29_prezzo_tota, @t29_dt_creazione, @t29_dt_cancellazione, @t29_dat"& _ 
                "a_evasione, @t29_posizione, @t29_qt_evasa, @t29_stato_riga_ordine, @t29_descrizi"& _ 
                "one_commerciale_it, @t29_descrizione_commerciale_en, @t29_descrizione_commercial"& _ 
                "e_es, @t29_descrizione_commerciale_fr);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t29_id, t29_id_testata_t28, t29_"& _ 
                "cod, t29_descrizione, t29_id_articolo_t20, t29_matricola, t29_qt_ordinata, t29_p"& _ 
                "rezzo_uni, t29_prezzo_tota, t29_dt_creazione, t29_dt_modifica, t29_dt_cancellazi"& _ 
                "one, t29_data_evasione, t29_posizione, t29_qt_evasa, t29_stato_riga_ordine, t29_"& _ 
                "descrizione_commerciale_it, t29_descrizione_commerciale_en, t29_descrizione_comm"& _ 
                "erciale_es, t29_descrizione_commerciale_fr FROM t29_righe_ordine_cli WHERE (t29_"& _ 
                "id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_id_testata_t28", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_testata_t28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_cod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_cod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_matricola", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_matricola", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_qt_ordinata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_prezzo_uni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_prezzo_tota", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_prezzo_tota", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_data_evasione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_data_evasione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_qt_evasa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_stato_riga_ordine", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_stato_riga_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_it", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_it", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_en", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_en", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_es", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_es", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_fr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_fr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [t29_righe_ordine_cli] SET [t29_id_testata_t28] = @t29_id_testata_t28, [t2"& _ 
                "9_cod] = @t29_cod, [t29_descrizione] = @t29_descrizione, [t29_id_articolo_t20] ="& _ 
                " @t29_id_articolo_t20, [t29_matricola] = @t29_matricola, [t29_qt_ordinata] = @t2"& _ 
                "9_qt_ordinata, [t29_prezzo_uni] = @t29_prezzo_uni, [t29_prezzo_tota] = @t29_prez"& _ 
                "zo_tota, [t29_dt_creazione] = @t29_dt_creazione, [t29_dt_cancellazione] = @t29_d"& _ 
                "t_cancellazione, [t29_data_evasione] = @t29_data_evasione, [t29_posizione] = @t2"& _ 
                "9_posizione, [t29_qt_evasa] = @t29_qt_evasa, [t29_stato_riga_ordine] = @t29_stat"& _ 
                "o_riga_ordine, [t29_descrizione_commerciale_it] = @t29_descrizione_commerciale_i"& _ 
                "t, [t29_descrizione_commerciale_en] = @t29_descrizione_commerciale_en, [t29_desc"& _ 
                "rizione_commerciale_es] = @t29_descrizione_commerciale_es, [t29_descrizione_comm"& _ 
                "erciale_fr] = @t29_descrizione_commerciale_fr WHERE (([t29_id] = @Original_t29_i"& _ 
                "d) AND ((@IsNull_t29_dt_modifica = 1 AND [t29_dt_modifica] IS NULL) OR ([t29_dt_"& _ 
                "modifica] = @Original_t29_dt_modifica)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t29_id, t29_id_testata_t28, t2"& _ 
                "9_cod, t29_descrizione, t29_id_articolo_t20, t29_matricola, t29_qt_ordinata, t29"& _ 
                "_prezzo_uni, t29_prezzo_tota, t29_dt_creazione, t29_dt_modifica, t29_dt_cancella"& _ 
                "zione, t29_data_evasione, t29_posizione, t29_qt_evasa, t29_stato_riga_ordine, t2"& _ 
                "9_descrizione_commerciale_it, t29_descrizione_commerciale_en, t29_descrizione_co"& _ 
                "mmerciale_es, t29_descrizione_commerciale_fr FROM t29_righe_ordine_cli WHERE (t2"& _ 
                "9_id = @t29_id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_id_testata_t28", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_testata_t28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_cod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_cod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_id_articolo_t20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_matricola", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_matricola", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_qt_ordinata", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_qt_ordinata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_prezzo_uni", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_prezzo_uni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_prezzo_tota", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_prezzo_tota", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_data_evasione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_data_evasione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_posizione", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_posizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_qt_evasa", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t29_qt_evasa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_stato_riga_ordine", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_stato_riga_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_it", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_it", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_en", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_en", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_es", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_es", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_descrizione_commerciale_fr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_descrizione_commerciale_fr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t29_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t29_dt_modifica", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_modifica", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t29_dt_modifica", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_dt_modifica", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t29_id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     t29_id, t29_id_testata_t28, t29_cod, t29_descrizione, t29_id_articolo_"& _ 
                "t20, t29_matricola, t29_qt_ordinata, t29_prezzo_uni, t29_prezzo_tota, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              t29_dt_creazione, t29_dt_modifica, t29_dt_cancellazione, t29_data_"& _ 
                "evasione, t29_posizione, t29_qt_evasa, t29_stato_riga_ordine, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      t29_descrizione_commerciale_it, t29_descrizione_commerciale_en, t29_descri"& _ 
                "zione_commerciale_es, t29_descrizione_commerciale_fr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         t29_righe_ord"& _ 
                "ine_cli"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT t29_cod, t29_data_evasione, t29_descrizione, t29_descrizione_commerciale_e"& _ 
                "n, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr, t29_descrizio"& _ 
                "ne_commerciale_it, t29_dt_cancellazione, t29_dt_creazione, t29_dt_modifica, t29_"& _ 
                "id, t29_id_articolo_t20, t29_id_testata_t28, t29_matricola, t29_posizione, t29_p"& _ 
                "rezzo_tota, t29_prezzo_uni, t29_qt_evasa, t29_qt_ordinata, t29_stato_riga_ordine"& _ 
                " FROM t29_righe_ordine_cli WHERE (t29_dt_cancellazione IS NULL) AND (t29_id = @i"& _ 
                "d)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT t29_cod, t29_data_evasione, t29_descrizione, t29_descrizione_commerciale_e"& _ 
                "n, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr, t29_descrizio"& _ 
                "ne_commerciale_it, t29_dt_cancellazione, t29_dt_creazione, t29_dt_modifica, t29_"& _ 
                "id, t29_id_articolo_t20, t29_id_testata_t28, t29_matricola, t29_posizione, t29_p"& _ 
                "rezzo_tota, t29_prezzo_uni, t29_qt_evasa, t29_qt_ordinata, t29_stato_riga_ordine"& _ 
                " FROM t29_righe_ordine_cli WHERE (t29_id_testata_t28 = @idTestata) AND (t29_dt_c"& _ 
                "ancellazione IS NULL) AND (NOT (t29_id_articolo_t20 IS NULL))"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idTestata", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_testata_t28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT t29_cod, t29_data_evasione, t29_descrizione, t29_descrizione_commerciale_e"& _ 
                "n, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr, t29_descrizio"& _ 
                "ne_commerciale_it, t29_dt_cancellazione, t29_dt_creazione, t29_dt_modifica, t29_"& _ 
                "id, t29_id_articolo_t20, t29_id_testata_t28, t29_matricola, t29_posizione, t29_p"& _ 
                "rezzo_tota, t29_prezzo_uni, t29_qt_evasa, t29_qt_ordinata, t29_stato_riga_ordine"& _ 
                " FROM t29_righe_ordine_cli WHERE (t29_id_testata_t28 = @idTestata) AND (t29_dt_c"& _ 
                "ancellazione IS NULL)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idTestata", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_testata_t28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT t29_cod, t29_data_evasione, t29_descrizione, t29_descrizione_commerciale_e"& _ 
                "n, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr, t29_descrizio"& _ 
                "ne_commerciale_it, t29_dt_cancellazione, t29_dt_creazione, t29_dt_modifica, t29_"& _ 
                "id, t29_id_articolo_t20, t29_id_testata_t28, t29_matricola, t29_posizione, t29_p"& _ 
                "rezzo_tota, t29_prezzo_uni, t29_qt_evasa, t29_qt_ordinata, t29_stato_riga_ordine"& _ 
                " FROM t29_righe_ordine_cli WHERE (t29_id_testata_t28 = @idOrdine) AND (t29_id_ar"& _ 
                "ticolo_t20 = @idArticolo) AND (t29_dt_cancellazione IS NULL)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idOrdine", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_testata_t28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idArticolo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_id_articolo_t20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable = New GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillById(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable, ByVal id As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataById(ByVal id As Integer) As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            Dim dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable = New GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByIdTestata(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable, ByVal idTestata As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (idTestata.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idTestata.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByIdTestata(ByVal idTestata As Global.System.Nullable(Of Integer)) As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (idTestata.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idTestata.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable = New GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByIdTestataAll(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable, ByVal idTestata As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (idTestata.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idTestata.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByIdTestataAll(ByVal idTestata As Global.System.Nullable(Of Integer)) As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (idTestata.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idTestata.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable = New GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByOrdineArticolo(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable, ByVal idOrdine As Global.System.Nullable(Of Integer), ByVal idArticolo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (idOrdine.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idOrdine.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (idArticolo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(idArticolo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOrdineArticolo(ByVal idOrdine As Global.System.Nullable(Of Integer), ByVal idArticolo As Global.System.Nullable(Of Integer)) As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (idOrdine.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idOrdine.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (idArticolo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(idArticolo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable = New GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t29_righe_ordine_cliDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t29_righe_ordine_cli")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t29_id As Integer, ByVal Original_t29_dt_modifica() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t29_id,Integer)
            If (Original_t29_dt_modifica Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t29_dt_modifica,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal t29_id_testata_t28 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_cod As String,  _
                    ByVal t29_descrizione As String,  _
                    ByVal t29_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_matricola As String,  _
                    ByVal t29_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_tota As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t29_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal t29_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_stato_riga_ordine As String,  _
                    ByVal t29_descrizione_commerciale_it As String,  _
                    ByVal t29_descrizione_commerciale_en As String,  _
                    ByVal t29_descrizione_commerciale_es As String,  _
                    ByVal t29_descrizione_commerciale_fr As String) As Integer
            If (t29_id_testata_t28.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t29_id_testata_t28.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (t29_cod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t29_cod,String)
            End If
            If (t29_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t29_descrizione,String)
            End If
            If (t29_id_articolo_t20.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t29_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t29_matricola Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t29_matricola,String)
            End If
            If (t29_qt_ordinata.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t29_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t29_prezzo_uni.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t29_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t29_prezzo_tota.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t29_prezzo_tota.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t29_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(t29_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t29_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(t29_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t29_data_evasione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(t29_data_evasione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t29_posizione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(t29_posizione.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (t29_qt_evasa.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(t29_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (t29_stato_riga_ordine Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(t29_stato_riga_ordine,String)
            End If
            If (t29_descrizione_commerciale_it Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(t29_descrizione_commerciale_it,String)
            End If
            If (t29_descrizione_commerciale_en Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(t29_descrizione_commerciale_en,String)
            End If
            If (t29_descrizione_commerciale_es Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(t29_descrizione_commerciale_es,String)
            End If
            If (t29_descrizione_commerciale_fr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(t29_descrizione_commerciale_fr,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t29_id_testata_t28 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_cod As String,  _
                    ByVal t29_descrizione As String,  _
                    ByVal t29_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_matricola As String,  _
                    ByVal t29_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_tota As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t29_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal t29_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_stato_riga_ordine As String,  _
                    ByVal t29_descrizione_commerciale_it As String,  _
                    ByVal t29_descrizione_commerciale_en As String,  _
                    ByVal t29_descrizione_commerciale_es As String,  _
                    ByVal t29_descrizione_commerciale_fr As String,  _
                    ByVal Original_t29_id As Integer,  _
                    ByVal Original_t29_dt_modifica() As Byte,  _
                    ByVal t29_id As Integer) As Integer
            If (t29_id_testata_t28.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t29_id_testata_t28.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (t29_cod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t29_cod,String)
            End If
            If (t29_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t29_descrizione,String)
            End If
            If (t29_id_articolo_t20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t29_id_articolo_t20.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t29_matricola Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t29_matricola,String)
            End If
            If (t29_qt_ordinata.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t29_qt_ordinata.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t29_prezzo_uni.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t29_prezzo_uni.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t29_prezzo_tota.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t29_prezzo_tota.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t29_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(t29_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t29_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(t29_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t29_data_evasione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(t29_data_evasione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t29_posizione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(t29_posizione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (t29_qt_evasa.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(t29_qt_evasa.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (t29_stato_riga_ordine Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(t29_stato_riga_ordine,String)
            End If
            If (t29_descrizione_commerciale_it Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(t29_descrizione_commerciale_it,String)
            End If
            If (t29_descrizione_commerciale_en Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(t29_descrizione_commerciale_en,String)
            End If
            If (t29_descrizione_commerciale_es Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(t29_descrizione_commerciale_es,String)
            End If
            If (t29_descrizione_commerciale_fr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(t29_descrizione_commerciale_fr,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_t29_id,Integer)
            If (Original_t29_dt_modifica Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_t29_dt_modifica,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(t29_id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal t29_id_testata_t28 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_cod As String,  _
                    ByVal t29_descrizione As String,  _
                    ByVal t29_id_articolo_t20 As Global.System.Nullable(Of Integer),  _
                    ByVal t29_matricola As String,  _
                    ByVal t29_qt_ordinata As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_uni As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_prezzo_tota As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_dt_creazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_dt_cancellazione As Global.System.Nullable(Of Date),  _
                    ByVal t29_data_evasione As Global.System.Nullable(Of Date),  _
                    ByVal t29_posizione As Global.System.Nullable(Of Integer),  _
                    ByVal t29_qt_evasa As Global.System.Nullable(Of Decimal),  _
                    ByVal t29_stato_riga_ordine As String,  _
                    ByVal t29_descrizione_commerciale_it As String,  _
                    ByVal t29_descrizione_commerciale_en As String,  _
                    ByVal t29_descrizione_commerciale_es As String,  _
                    ByVal t29_descrizione_commerciale_fr As String,  _
                    ByVal Original_t29_id As Integer,  _
                    ByVal Original_t29_dt_modifica() As Byte) As Integer
            Return Me.Update(t29_id_testata_t28, t29_cod, t29_descrizione, t29_id_articolo_t20, t29_matricola, t29_qt_ordinata, t29_prezzo_uni, t29_prezzo_tota, t29_dt_creazione, t29_dt_cancellazione, t29_data_evasione, t29_posizione, t29_qt_evasa, t29_stato_riga_ordine, t29_descrizione_commerciale_it, t29_descrizione_commerciale_en, t29_descrizione_commerciale_es, t29_descrizione_commerciale_fr, Original_t29_id, Original_t29_dt_modifica, Original_t29_id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t20_articoliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t20_articoli"
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t20_qt_disponibile", "t20_qt_disponibile")
            tableMapping.ColumnMappings.Add("t20_lotto_riordino", "t20_lotto_riordino")
            tableMapping.ColumnMappings.Add("t20_is_gruppo", "t20_is_gruppo")
            tableMapping.ColumnMappings.Add("t20_dt_creazione", "t20_dt_creazione")
            tableMapping.ColumnMappings.Add("t20_dt_modifica", "t20_dt_modifica")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_id_fornitore_t11", "t20_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t20_prezzo_forzato", "t20_prezzo_forzato")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            tableMapping.ColumnMappings.Add("t20_timestamp", "t20_timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [t20_articoli] WHERE (([t20_id_articolo] = @Original_t20_id_articolo)"& _ 
                " AND ((@IsNull_t20_timestamp = 1 AND [t20_timestamp] IS NULL) OR ([t20_timestamp"& _ 
                "] = @Original_t20_timestamp)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t20_id_articolo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_articolo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t20_timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t20_timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [t20_articoli] ([t20_cod_articolo], [t20_descrizione], [t20_prezzo], "& _ 
                "[t20_qt_disponibile], [t20_lotto_riordino], [t20_is_gruppo], [t20_dt_creazione],"& _ 
                " [t20_dt_modifica], [t20_dt_cancellazione], [t20_id_fornitore_t11], [t20_prezzo_"& _ 
                "forzato], [t20_is_ricambio]) VALUES (@t20_cod_articolo, @t20_descrizione, @t20_p"& _ 
                "rezzo, @t20_qt_disponibile, @t20_lotto_riordino, @t20_is_gruppo, @t20_dt_creazio"& _ 
                "ne, @t20_dt_modifica, @t20_dt_cancellazione, @t20_id_fornitore_t11, @t20_prezzo_"& _ 
                "forzato, @t20_is_ricambio);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t20_id_articolo, t20_cod_articolo, t20_descr"& _ 
                "izione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_d"& _ 
                "t_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_pr"& _ 
                "ezzo_forzato, t20_is_ricambio, t20_timestamp FROM t20_articoli WHERE (t20_id_art"& _ 
                "icolo = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_cod_articolo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_cod_articolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_prezzo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "t20_prezzo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_qt_disponibile", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t20_qt_disponibile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_lotto_riordino", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t20_lotto_riordino", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_is_gruppo", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_is_gruppo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_fornitore_t11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_prezzo_forzato", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "t20_prezzo_forzato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_is_ricambio", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_is_ricambio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [t20_articoli] SET [t20_cod_articolo] = @t20_cod_articolo, [t20_descrizion"& _ 
                "e] = @t20_descrizione, [t20_prezzo] = @t20_prezzo, [t20_qt_disponibile] = @t20_q"& _ 
                "t_disponibile, [t20_lotto_riordino] = @t20_lotto_riordino, [t20_is_gruppo] = @t2"& _ 
                "0_is_gruppo, [t20_dt_creazione] = @t20_dt_creazione, [t20_dt_modifica] = @t20_dt"& _ 
                "_modifica, [t20_dt_cancellazione] = @t20_dt_cancellazione, [t20_id_fornitore_t11"& _ 
                "] = @t20_id_fornitore_t11, [t20_prezzo_forzato] = @t20_prezzo_forzato, [t20_is_r"& _ 
                "icambio] = @t20_is_ricambio WHERE (([t20_id_articolo] = @Original_t20_id_articol"& _ 
                "o) AND ((@IsNull_t20_timestamp = 1 AND [t20_timestamp] IS NULL) OR ([t20_timesta"& _ 
                "mp] = @Original_t20_timestamp)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT t20_id_articolo, t20_cod_articolo, t20"& _ 
                "_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo,"& _ 
                " t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, "& _ 
                "t20_prezzo_forzato, t20_is_ricambio, t20_timestamp FROM t20_articoli WHERE (t20_"& _ 
                "id_articolo = @t20_id_articolo)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_cod_articolo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_cod_articolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_descrizione", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_prezzo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "t20_prezzo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_qt_disponibile", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t20_qt_disponibile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_lotto_riordino", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "t20_lotto_riordino", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_is_gruppo", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_is_gruppo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_creazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_creazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_modifica", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_modifica", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_dt_cancellazione", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_dt_cancellazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_id_fornitore_t11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_fornitore_t11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_prezzo_forzato", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "t20_prezzo_forzato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_is_ricambio", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_is_ricambio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t20_id_articolo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_articolo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_t20_timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_t20_timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@t20_id_articolo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_articolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        t20_id_articolo, t20_cod_articolo, t20_descrizione, t20_prezzo, t20"& _ 
                "_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_mod"& _ 
                "ifica, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t20_dt_cancellazione, t20_id_fornitore_t11, t2"& _ 
                "0_prezzo_forzato, t20_is_ricambio, t20_timestamp"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t20_articoli"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (t20_dt_cancellazione IS NULL)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        t20_id_articolo, t20_cod_articolo, t20_descrizione, t20_prezzo, t20"& _ 
                "_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_mod"& _ 
                "ifica, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t20_dt_cancellazione, t20_id_fornitore_t11, t2"& _ 
                "0_prezzo_forzato, t20_is_ricambio, t20_timestamp"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t20_articoli"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (t20_dt_cancellazione IS NULL) AND (t20_id_articolo = @id)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t20_id_articolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.t20_articoliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t20_articoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t20_articoliDataTable = New GestioneProduzione2009DataSet.t20_articoliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillById(ByVal dataTable As GestioneProduzione2009DataSet.t20_articoliDataTable, ByVal id As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataById(ByVal id As Integer) As GestioneProduzione2009DataSet.t20_articoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id,Integer)
            Dim dataTable As GestioneProduzione2009DataSet.t20_articoliDataTable = New GestioneProduzione2009DataSet.t20_articoliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As GestioneProduzione2009DataSet.t20_articoliDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As GestioneProduzione2009DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "t20_articoli")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_t20_id_articolo As Integer, ByVal Original_t20_timestamp() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_t20_id_articolo,Integer)
            If (Original_t20_timestamp Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_t20_timestamp,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Global.System.Nullable(Of Decimal), ByVal t20_qt_disponibile As Global.System.Nullable(Of Decimal), ByVal t20_lotto_riordino As Global.System.Nullable(Of Decimal), ByVal t20_is_gruppo As Global.System.Nullable(Of Boolean), ByVal t20_dt_creazione As Global.System.Nullable(Of Date), ByVal t20_dt_modifica As Global.System.Nullable(Of Date), ByVal t20_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t20_id_fornitore_t11 As Global.System.Nullable(Of Integer), ByVal t20_prezzo_forzato As Global.System.Nullable(Of Decimal), ByVal t20_is_ricambio As Global.System.Nullable(Of Boolean)) As Integer
            If (t20_cod_articolo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(t20_cod_articolo,String)
            End If
            If (t20_descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(t20_descrizione,String)
            End If
            If (t20_prezzo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(t20_prezzo.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t20_qt_disponibile.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(t20_qt_disponibile.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t20_lotto_riordino.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(t20_lotto_riordino.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t20_is_gruppo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(t20_is_gruppo.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_creazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(t20_dt_creazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_modifica.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(t20_dt_modifica.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_cancellazione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(t20_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t20_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(t20_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t20_prezzo_forzato.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(t20_prezzo_forzato.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t20_is_ricambio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(t20_is_ricambio.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Global.System.Nullable(Of Decimal), ByVal t20_qt_disponibile As Global.System.Nullable(Of Decimal), ByVal t20_lotto_riordino As Global.System.Nullable(Of Decimal), ByVal t20_is_gruppo As Global.System.Nullable(Of Boolean), ByVal t20_dt_creazione As Global.System.Nullable(Of Date), ByVal t20_dt_modifica As Global.System.Nullable(Of Date), ByVal t20_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t20_id_fornitore_t11 As Global.System.Nullable(Of Integer), ByVal t20_prezzo_forzato As Global.System.Nullable(Of Decimal), ByVal t20_is_ricambio As Global.System.Nullable(Of Boolean), ByVal Original_t20_id_articolo As Integer, ByVal Original_t20_timestamp() As Byte, ByVal t20_id_articolo As Integer) As Integer
            If (t20_cod_articolo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(t20_cod_articolo,String)
            End If
            If (t20_descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(t20_descrizione,String)
            End If
            If (t20_prezzo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(t20_prezzo.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (t20_qt_disponibile.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(t20_qt_disponibile.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (t20_lotto_riordino.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(t20_lotto_riordino.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (t20_is_gruppo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(t20_is_gruppo.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_creazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(t20_dt_creazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_modifica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(t20_dt_modifica.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (t20_dt_cancellazione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(t20_dt_cancellazione.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (t20_id_fornitore_t11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(t20_id_fornitore_t11.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (t20_prezzo_forzato.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(t20_prezzo_forzato.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (t20_is_ricambio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(t20_is_ricambio.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_t20_id_articolo,Integer)
            If (Original_t20_timestamp Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_t20_timestamp,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(t20_id_articolo,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal t20_cod_articolo As String, ByVal t20_descrizione As String, ByVal t20_prezzo As Global.System.Nullable(Of Decimal), ByVal t20_qt_disponibile As Global.System.Nullable(Of Decimal), ByVal t20_lotto_riordino As Global.System.Nullable(Of Decimal), ByVal t20_is_gruppo As Global.System.Nullable(Of Boolean), ByVal t20_dt_creazione As Global.System.Nullable(Of Date), ByVal t20_dt_modifica As Global.System.Nullable(Of Date), ByVal t20_dt_cancellazione As Global.System.Nullable(Of Date), ByVal t20_id_fornitore_t11 As Global.System.Nullable(Of Integer), ByVal t20_prezzo_forzato As Global.System.Nullable(Of Decimal), ByVal t20_is_ricambio As Global.System.Nullable(Of Boolean), ByVal Original_t20_id_articolo As Integer, ByVal Original_t20_timestamp() As Byte) As Integer
            Return Me.Update(t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_disponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio, Original_t20_id_articolo, Original_t20_timestamp, Original_t20_id_articolo)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class v01_articoliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "v01_articoli"
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t20_qt_disponibile", "t20_qt_disponibile")
            tableMapping.ColumnMappings.Add("t20_lotto_riordino", "t20_lotto_riordino")
            tableMapping.ColumnMappings.Add("t20_is_gruppo", "t20_is_gruppo")
            tableMapping.ColumnMappings.Add("t20_dt_creazione", "t20_dt_creazione")
            tableMapping.ColumnMappings.Add("t20_dt_modifica", "t20_dt_modifica")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_id_fornitore_t11", "t20_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t20_prezzo_forzato", "t20_prezzo_forzato")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            tableMapping.ColumnMappings.Add("t20_timestamp", "t20_timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t20_id_articolo, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_dis"& _ 
                "ponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, "& _ 
                "t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio,"& _ 
                " t20_timestamp FROM dbo.v01_articoli"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.v01_articoliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.v01_articoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.v01_articoliDataTable = New GestioneProduzione2009DataSet.v01_articoliDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class v03_gruppiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "v03_gruppi"
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t20_qt_disponibile", "t20_qt_disponibile")
            tableMapping.ColumnMappings.Add("t20_lotto_riordino", "t20_lotto_riordino")
            tableMapping.ColumnMappings.Add("t20_is_gruppo", "t20_is_gruppo")
            tableMapping.ColumnMappings.Add("t20_dt_creazione", "t20_dt_creazione")
            tableMapping.ColumnMappings.Add("t20_dt_modifica", "t20_dt_modifica")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_id_fornitore_t11", "t20_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t20_prezzo_forzato", "t20_prezzo_forzato")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            tableMapping.ColumnMappings.Add("t20_timestamp", "t20_timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT t20_id_articolo, t20_cod_articolo, t20_descrizione, t20_prezzo, t20_qt_dis"& _ 
                "ponibile, t20_lotto_riordino, t20_is_gruppo, t20_dt_creazione, t20_dt_modifica, "& _ 
                "t20_dt_cancellazione, t20_id_fornitore_t11, t20_prezzo_forzato, t20_is_ricambio,"& _ 
                " t20_timestamp FROM dbo.v03_gruppi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.v03_gruppiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.v03_gruppiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.v03_gruppiDataTable = New GestioneProduzione2009DataSet.v03_gruppiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ListinoRicambiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ListinoRicambi"
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t25_cod_matricola", "t25_cod_matricola")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            tableMapping.ColumnMappings.Add("t20_prezzo_forzato", "t20_prezzo_forzato")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t20_descrizione_commerciale_it", "t20_descrizione_commerciale_it")
            tableMapping.ColumnMappings.Add("t20_descrizione_commerciale_en", "t20_descrizione_commerciale_en")
            tableMapping.ColumnMappings.Add("t20_descrizione_commerciale_es", "t20_descrizione_commerciale_es")
            tableMapping.ColumnMappings.Add("t20_descrizione_commerciale_fr", "t20_descrizione_commerciale_fr")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     t20_articoli.t20_id_articolo, t20_articoli.t20_cod_articolo, t20_artic"& _ 
                "oli.t20_descrizione, t25_matricole.t25_cod_matricola, t20_articoli.t20_is_ricamb"& _ 
                "io, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      t20_articoli.t20_prezzo_forzato, t20_articoli.t20_dt"& _ 
                "_cancellazione, t20_articoli.t20_prezzo, t20_articoli.t20_descrizione_commercial"& _ 
                "e_it, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      t20_articoli.t20_descrizione_commerciale_en, t20_a"& _ 
                "rticoli.t20_descrizione_commerciale_es, t20_articoli.t20_descrizione_commerciale"& _ 
                "_fr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         t25_matricole INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      t20_articoli O"& _ 
                "N t25_matricole.t25_id_articolo_t20 = t20_articoli.t20_id_articolo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (t"& _ 
                "20_articoli.t20_dt_cancellazione IS NULL) AND (t20_articoli.t20_is_ricambio = 1)"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY t20_articoli.t20_cod_articolo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.ListinoRicambiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.ListinoRicambiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.ListinoRicambiDataTable = New GestioneProduzione2009DataSet.ListinoRicambiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class t28_anni
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "t28_anni"
            tableMapping.ColumnMappings.Add("Anni", "Anni")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT YEAR(t28_commessa_del) AS Anni"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t28_testate_ordin"& _ 
                "i_cli"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As GestioneProduzione2009DataSet.t28_anniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As GestioneProduzione2009DataSet.t28_anniDataTable = New GestioneProduzione2009DataSet.t28_anniDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RigheOrdiniRicambiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RigheOrdiniRicambi"
            tableMapping.ColumnMappings.Add("t28_id", "t28_id")
            tableMapping.ColumnMappings.Add("t28_cod", "t28_cod")
            tableMapping.ColumnMappings.Add("t28_descrizione", "t28_descrizione")
            tableMapping.ColumnMappings.Add("t28_commessa", "t28_commessa")
            tableMapping.ColumnMappings.Add("t28_commessa_del", "t28_commessa_del")
            tableMapping.ColumnMappings.Add("t28_consegna", "t28_consegna")
            tableMapping.ColumnMappings.Add("t28_cliente", "t28_cliente")
            tableMapping.ColumnMappings.Add("t28_cliente2", "t28_cliente2")
            tableMapping.ColumnMappings.Add("t28_telefono", "t28_telefono")
            tableMapping.ColumnMappings.Add("t28_rif_reda", "t28_rif_reda")
            tableMapping.ColumnMappings.Add("t28_vendita", "t28_vendita")
            tableMapping.ColumnMappings.Add("t28_riparazione", "t28_riparazione")
            tableMapping.ColumnMappings.Add("t28_completamento_fornitura", "t28_completamento_fornitura")
            tableMapping.ColumnMappings.Add("t28_aspetto_esteriore", "t28_aspetto_esteriore")
            tableMapping.ColumnMappings.Add("t28_misure", "t28_misure")
            tableMapping.ColumnMappings.Add("t28_peso", "t28_peso")
            tableMapping.ColumnMappings.Add("t28_rif_ordine", "t28_rif_ordine")
            tableMapping.ColumnMappings.Add("t28_note", "t28_note")
            tableMapping.ColumnMappings.Add("t28_spedizione", "t28_spedizione")
            tableMapping.ColumnMappings.Add("t28_porto", "t28_porto")
            tableMapping.ColumnMappings.Add("t28_dt_creazione", "t28_dt_creazione")
            tableMapping.ColumnMappings.Add("t28_dt_modifica", "t28_dt_modifica")
            tableMapping.ColumnMappings.Add("t28_dt_cancellazione", "t28_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t28_stato_testata_ordine", "t28_stato_testata_ordine")
            tableMapping.ColumnMappings.Add("t28_data_evasione", "t28_data_evasione")
            tableMapping.ColumnMappings.Add("t29_id", "t29_id")
            tableMapping.ColumnMappings.Add("t29_id_testata_t28", "t29_id_testata_t28")
            tableMapping.ColumnMappings.Add("t29_cod", "t29_cod")
            tableMapping.ColumnMappings.Add("t29_descrizione", "t29_descrizione")
            tableMapping.ColumnMappings.Add("t29_id_articolo_t20", "t29_id_articolo_t20")
            tableMapping.ColumnMappings.Add("t29_matricola", "t29_matricola")
            tableMapping.ColumnMappings.Add("t29_qt_ordinata", "t29_qt_ordinata")
            tableMapping.ColumnMappings.Add("t29_prezzo_uni", "t29_prezzo_uni")
            tableMapping.ColumnMappings.Add("t29_prezzo_tota", "t29_prezzo_tota")
            tableMapping.ColumnMappings.Add("t29_dt_creazione", "t29_dt_creazione")
            tableMapping.ColumnMappings.Add("t29_dt_modifica", "t29_dt_modifica")
            tableMapping.ColumnMappings.Add("t29_dt_cancellazione", "t29_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t29_stato_riga_ordine", "t29_stato_riga_ordine")
            tableMapping.ColumnMappings.Add("t29_qt_evasa", "t29_qt_evasa")
            tableMapping.ColumnMappings.Add("t29_data_evasione", "t29_data_evasione")
            tableMapping.ColumnMappings.Add("t29_posizione", "t29_posizione")
            tableMapping.ColumnMappings.Add("t20_id_articolo", "t20_id_articolo")
            tableMapping.ColumnMappings.Add("t20_cod_articolo", "t20_cod_articolo")
            tableMapping.ColumnMappings.Add("t20_descrizione", "t20_descrizione")
            tableMapping.ColumnMappings.Add("t20_prezzo", "t20_prezzo")
            tableMapping.ColumnMappings.Add("t20_qt_disponibile", "t20_qt_disponibile")
            tableMapping.ColumnMappings.Add("t20_lotto_riordino", "t20_lotto_riordino")
            tableMapping.ColumnMappings.Add("t20_is_gruppo", "t20_is_gruppo")
            tableMapping.ColumnMappings.Add("t20_dt_creazione", "t20_dt_creazione")
            tableMapping.ColumnMappings.Add("t20_dt_modifica", "t20_dt_modifica")
            tableMapping.ColumnMappings.Add("t20_dt_cancellazione", "t20_dt_cancellazione")
            tableMapping.ColumnMappings.Add("t20_id_fornitore_t11", "t20_id_fornitore_t11")
            tableMapping.ColumnMappings.Add("t20_prezzo_forzato", "t20_prezzo_forzato")
            tableMapping.ColumnMappings.Add("t20_is_ricambio", "t20_is_ricambio")
            tableMapping.ColumnMappings.Add("t20_timestamp", "t20_timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.GestioneProduzione.My.MySettings.Default.GestioneProduzione2009ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        t28_testate_ordini_cli.t28_id, t28_testate_ordini_cli.t28_cod, t28_"& _ 
                "testate_ordini_cli.t28_descrizione, t28_testate_ordini_cli.t28_commessa, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    t28_testate_ordini_cli.t28_commessa_del, t28_testate_ordini_"& _ 
                "cli.t28_consegna, t28_testate_ordini_cli.t28_cliente, t28_testate_ordini_cli.t28"& _ 
                "_cliente2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t28_testate_ordini_cli.t28_telefono, t28_t"& _ 
                "estate_ordini_cli.t28_rif_reda, t28_testate_ordini_cli.t28_vendita, t28_testate_"& _ 
                "ordini_cli.t28_riparazione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t28_testate_ordini_cli.t2"& _ 
                "8_completamento_fornitura, t28_testate_ordini_cli.t28_aspetto_esteriore, t28_tes"& _ 
                "tate_ordini_cli.t28_misure, t28_testate_ordini_cli.t28_peso, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        t28_testate_ordini_cli.t28_rif_ordine, t28_testate_ordini_cli.t28_note, "& _ 
                "t28_testate_ordini_cli.t28_spedizione, t28_testate_ordini_cli.t28_porto, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    t28_testate_ordini_cli.t28_dt_creazione, t28_testate_ordini_"& _ 
                "cli.t28_dt_modifica, t28_testate_ordini_cli.t28_dt_cancellazione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             t28_testate_ordini_cli.t28_stato_testata_ordine, t28_testate_ordini"& _ 
                "_cli.t28_data_evasione, t29_righe_ordine_cli.t29_id, t29_righe_ordine_cli.t29_id"& _ 
                "_testata_t28, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t29_righe_ordine_cli.t29_cod, t29_righe"& _ 
                "_ordine_cli.t29_descrizione, t29_righe_ordine_cli.t29_id_articolo_t20, t29_righe"& _ 
                "_ordine_cli.t29_matricola, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t29_righe_ordine_cli.t29_q"& _ 
                "t_ordinata, t29_righe_ordine_cli.t29_prezzo_uni, t29_righe_ordine_cli.t29_prezzo"& _ 
                "_tota, t29_righe_ordine_cli.t29_dt_creazione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t29_rig"& _ 
                "he_ordine_cli.t29_dt_modifica, t29_righe_ordine_cli.t29_dt_cancellazione, t29_ri"& _ 
                "ghe_ordine_cli.t29_stato_riga_ordine, t29_righe_ordine_cli.t29_qt_evasa, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    t29_righe_ordine_cli.t29_data_evasione, t29_righe_ordine_cli"& _ 
                ".t29_posizione, t20_articoli.t20_id_articolo, t20_articoli.t20_cod_articolo, t20"& _ 
                "_articoli.t20_descrizione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t20_articoli.t20_prezzo, t"& _ 
                "20_articoli.t20_qt_disponibile, t20_articoli.t20_lotto_riordino, t20_articoli.t2"& _ 
                "0_is_gruppo, t20_articoli.t20_dt_creazione, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t20_artic"& _ 
                "oli.t20_dt_modifica, t20_articoli.t20_dt_cancellazione, t20_articoli.t20_id_forn"& _ 
                "itore_t11, t20_articoli.t20_prezzo_forzato, t20_articoli.t20_is_ricambio, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     t20_articoli.t20_timestamp"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t20_articoli IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         t29_righe_ordine_cli ON t20_articoli.t20_id_a"& _ 
                "rticolo = t29_righe_ordine_cli.t29_id_articolo_t20 INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        t28_testate_ordini_cli ON t29_righe_ordine_cli.t29_id_testata_t28 = t28_"& _ 
                "testate_ordini_cli.t28_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (t29_righe_ordine_cli.t29_stato_riga_ord"& _ 
                "ine = @Stato) AND (t28_testate_ordini_cli.t28_id = @idOrdine) AND (t29_righe_ord"& _ 
                "ine_cli.t29_dt_cancellazione IS NULL) AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          (t28_testat"& _ 
                "e_ordini_cli.t28_dt_cancellazione IS NULL) AND (NOT (t29_righe_ordine_cli.t29_id"& _ 
                "_articolo_t20 IS NULL))"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stato", Global.System.Data.SqlDbType.NChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "t29_stato_riga_ordine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idOrdine", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "t28_id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As GestioneProduzione2009DataSet.RigheOrdiniRicambiDataTable, ByVal Stato As String, ByVal idOrdine As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Stato Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Stato,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(idOrdine,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Stato As String, ByVal idOrdine As Integer) As GestioneProduzione2009DataSet.RigheOrdiniRicambiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Stato Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Stato,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(idOrdine,Integer)
            Dim dataTable As GestioneProduzione2009DataSet.RigheOrdiniRicambiDataTable = New GestioneProduzione2009DataSet.RigheOrdiniRicambiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
